(** {1 Request and Response Bodies} *)

module BodySerDe' = struct

  open StripeTypes
  open StripeEncdrs
  
  let _scan_object_key s =
    let module Private = struct
      type t = Outside | Inside | Done | Invalid
  
      let parse s =
        let outside = Buffer.create (String.length s) in
        let inside = Buffer.create (String.length s) in
        let arr = Stringext.to_array s in
        let state =
          Array.fold_left
            (fun state c ->
              match (state, c) with
              | Invalid, _ -> Invalid
              | Outside, '[' -> Inside
              | Outside, _ ->
                  Buffer.add_char outside c;
                  Outside
              | Inside, ']' -> Done
              | Inside, _ ->
                  Buffer.add_char inside c;
                  Inside
              | Done, _ -> Invalid)
            Outside arr
        in
        match state with
        | Done ->
            Some
              ( Buffer.to_bytes outside |> String.of_bytes,
                Buffer.to_bytes inside |> String.of_bytes )
        | _ -> None
    end in
    Private.parse s
  
  let _body_of ~(kind : EncBase'.kind) ~ctr =
    let jfield_to_slist ~n =
      match kind with
      | `ObjectN okinds -> begin
          match List.assoc_opt n okinds with
          | Some [ okind ] ->
              (* when writing there should only be one choice *)
              EncBase'.json_to_form n okind
          | _ -> (
              match List.assoc_opt "" okinds with
              | Some [ okind ] -> EncBase'.json_to_form n okind
              | _ -> EncBase'.json_to_form n `Null)
        end
      | _ -> fun _j -> []
    in
    fun ~op ->
      let m =
        "The body for the REST operation " ^ op ^ " could not be serialized."
      in
      fun ~(ctype : [ `FormUrlEncoded | `Json ]) x ->
        let j = ctr x in
        match (ctype, j) with
        | `Json, _ -> Ezjsonm.value_to_string j
        | `FormUrlEncoded, `O o ->
            List.map (fun (n, v) -> jfield_to_slist ~n v) o
            |> List.flatten |> String.concat "&"
        | _ -> raise (Invalid_argument m)
  
  let _body_to ~(kind : EncBase'.kind) ~dtr =
    let s_to_jfield ~n =
      match kind with
      | `ObjectN okinds -> begin
          match List.assoc_opt n okinds with
          | Some okind_choices ->
              EncBase'.string_to_best_json_choice ~okind_choices
          | None -> (
              match List.assoc_opt "" okinds with
              | Some okind_choices ->
                  EncBase'.string_to_best_json_choice ~okind_choices
              | None -> fun ~sep:_ ~inner_sep:_ ~leading:_ _ -> (None, 0))
        end
      | _ -> fun ~sep:_ ~inner_sep:_ ~leading:_ _ -> (None, 0)
    in
    let module SM = Map.Make (String) in
    fun ~(ctype : [ `FormUrlEncoded | `Json ]) s ->
      let jopt =
        match ctype with
        | `Json -> begin
            match Ezjsonm.value_from_string_result s with
            | Ok j -> Some j
            | Error _ -> None
          end
        | `FormUrlEncoded ->
            let nvs =
              String.split_on_char '&' s
              |> List.map (String.split_on_char '=')
              |> List.filter_map (function
                   | [ name; value ] ->
                       Some
                         ( EncBase'.form_urldecode_string name,
                           EncBase'.form_urldecode_string value )
                   | _ -> None)
            in
            let arrs = ref SM.empty in
            let objs = ref SM.empty in
            let fullobj =
              List.filter_map
                (fun (n, v) ->
                  let get p =
                    s_to_jfield ~n:p ~sep:'\x00' ~inner_sep:'\x00'
                      ~leading:false v
                  in
                  match _scan_object_key n with
                  | None -> begin
                      match get n with
                      | None, _ -> None
                      | Some jfield, _ -> Some (n, jfield)
                    end
                  | Some (p, "") -> begin
                      match get p with
                      | None, _ -> None
                      | Some jfield, _ ->
                          arrs :=
                            SM.update p
                              (function
                                | None -> Some [ jfield ]
                                | Some v -> Some (jfield :: v))
                              !arrs;
                          None
                    end
                  | Some (p, key) -> begin
                      match get p with
                      | None, _ -> None
                      | Some jfield, _ ->
                          objs :=
                            SM.update p
                              (function
                                | None -> Some [ (key, jfield) ]
                                | Some v -> Some ((key, jfield) :: v))
                              !objs;
                          None
                    end)
                nvs
            in
            let fullobj =
              SM.fold
                (fun k d acc -> (k, `A (List.rev d)) :: acc)
                !arrs fullobj
            in
            let fullobj =
              SM.fold
                (fun k d acc -> (k, `O (List.rev d)) :: acc)
                !objs fullobj
            in
            Some (`O fullobj)
      in
      match jopt with
      | None -> None
      | Some j -> (
          try Some (dtr j) with Json_encoding.Cannot_destruct _ -> None)
  
  
  let rec _mk_body_of_p_Unit _lvl ~op ~ctype (_x : unit) =
    _body_of ~kind:( `ObjectN [])
      ~ctr:(Json_encoding.construct Json_encoding.unit) ~op ~ctype _x
  [@@warning "-unused-rec-flag"]
  
  and _mk_body_to_p_Unit _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Json_encoding.unit) in _body_to
      ~kind:(`ObjectN []) ~dtr ~ctype _x
  
  and _mk_body_of_t_077fe43399 _lvl ~op ~ctype (_x : t_077fe43399) =
    _body_of ~kind:(
      `ObjectN
        [("account", let _x = _x.account in [`String]);
         ("collect", match _x.collect with | None -> []
          | Some _x -> [`String]);
         ("collection_options", match _x.collection_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("fields", let _x = _x.fields in [`String]);
                           ("future_requirements",
                            match _x.future_requirements with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("refresh_url", match _x.refresh_url with | None -> []
          | Some _x -> [`String]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("type", let _x = _x.type_ in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_077fe43399) ~op ~ctype _x
  
  and _mk_body_to_t_077fe43399 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_077fe43399) in _body_to
      ~kind:(`ObjectN
               [("account", [`String]); ("collect", [`String]);
                ("collection_options",
                 [`ObjectN
                    [("", [`Any]); ("fields", [`String]);
                     ("future_requirements", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("refresh_url", [`String]); ("return_url", [`String]);
                ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_9cca83d3ce _lvl ~op ~ctype (_x : t_9cca83d3ce) =
    _body_of ~kind:(
      `ObjectN
        [("account", let _x = _x.account in [`String]);
         ("components", let _x = _x.components in
          [`ObjectN
             [("", [`Any]);
              ("account_management", match _x.account_management with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("external_account_collection",
                                                   match _x.external_account_collection with
                                                   | None -> []
                                                   | Some _x -> [`Boolean])]])]]);
              ("account_onboarding", match _x.account_onboarding with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("external_account_collection",
                                                   match _x.external_account_collection with
                                                   | None -> []
                                                   | Some _x -> [`Boolean])]])]]);
              ("balances", match _x.balances with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("edit_payout_schedule",
                                                   match _x.edit_payout_schedule with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("instant_payouts",
                                                   match _x.instant_payouts with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("standard_payouts",
                                                   match _x.standard_payouts with
                                                   | None -> []
                                                   | Some _x -> [`Boolean])]])]]);
              ("documents", match _x.documents with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN [("", [`Any])]])]]);
              ("notification_banner", match _x.notification_banner with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("external_account_collection",
                                                   match _x.external_account_collection with
                                                   | None -> []
                                                   | Some _x -> [`Boolean])]])]]);
              ("payment_details", match _x.payment_details with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("capture_payments",
                                                   match _x.capture_payments with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("destination_on_behalf_of_charge_management",
                                                   match _x.destination_on_behalf_of_charge_management with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("dispute_management",
                                                   match _x.dispute_management with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("refund_management",
                                                   match _x.refund_management with
                                                   | None -> []
                                                   | Some _x -> [`Boolean])]])]]);
              ("payments", match _x.payments with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("capture_payments",
                                                   match _x.capture_payments with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("destination_on_behalf_of_charge_management",
                                                   match _x.destination_on_behalf_of_charge_management with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("dispute_management",
                                                   match _x.dispute_management with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("refund_management",
                                                   match _x.refund_management with
                                                   | None -> []
                                                   | Some _x -> [`Boolean])]])]]);
              ("payouts", match _x.payouts with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("edit_payout_schedule",
                                                   match _x.edit_payout_schedule with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("instant_payouts",
                                                   match _x.instant_payouts with
                                                   | None -> []
                                                   | Some _x -> [`Boolean]);
                                                  ("standard_payouts",
                                                   match _x.standard_payouts with
                                                   | None -> []
                                                   | Some _x -> [`Boolean])]])]]);
              ("payouts_list", match _x.payouts_list with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("features", match _x.features with
                                 | None -> []
                                 | Some _x -> [`ObjectN [("", [`Any])]])]])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_9cca83d3ce) ~op ~ctype _x
  
  and _mk_body_to_t_9cca83d3ce _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_9cca83d3ce) in _body_to
      ~kind:(`ObjectN
               [("account", [`String]);
                ("components",
                 [`ObjectN
                    [("", [`Any]);
                     ("account_management",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features",
                           [`ObjectN
                              [("", [`Any]);
                               ("external_account_collection", [`Boolean])]])]]);
                     ("account_onboarding",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features",
                           [`ObjectN
                              [("", [`Any]);
                               ("external_account_collection", [`Boolean])]])]]);
                     ("balances",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features",
                           [`ObjectN
                              [("", [`Any]);
                               ("edit_payout_schedule", [`Boolean]);
                               ("instant_payouts", [`Boolean]);
                               ("standard_payouts", [`Boolean])]])]]);
                     ("documents",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features", [`ObjectN [("", [`Any])]])]]);
                     ("notification_banner",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features",
                           [`ObjectN
                              [("", [`Any]);
                               ("external_account_collection", [`Boolean])]])]]);
                     ("payment_details",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features",
                           [`ObjectN
                              [("", [`Any]);
                               ("capture_payments", [`Boolean]);
                               ("destination_on_behalf_of_charge_management",
                                [`Boolean]);
                               ("dispute_management", [`Boolean]);
                               ("refund_management", [`Boolean])]])]]);
                     ("payments",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features",
                           [`ObjectN
                              [("", [`Any]);
                               ("capture_payments", [`Boolean]);
                               ("destination_on_behalf_of_charge_management",
                                [`Boolean]);
                               ("dispute_management", [`Boolean]);
                               ("refund_management", [`Boolean])]])]]);
                     ("payouts",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features",
                           [`ObjectN
                              [("", [`Any]);
                               ("edit_payout_schedule", [`Boolean]);
                               ("instant_payouts", [`Boolean]);
                               ("standard_payouts", [`Boolean])]])]]);
                     ("payouts_list",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("features", [`ObjectN [("", [`Any])]])]])]]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_873da709f0 _lvl ~op ~ctype (_x : t_873da709f0) =
    _body_of ~kind:(
      `ObjectN
        [("account_token", match _x.account_token with | None -> []
          | Some _x -> [`String]);
         ("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [match _x with
                        | T_54819251ed _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account_holder_name",
                              match _x.account_holder_name with | None -> []
                              | Some _x -> [`String]);
                             ("account_holder_type",
                              match _x.account_holder_type with | None -> []
                              | Some _x -> [`String]);
                             ("account_number", let _x = _x.account_number in
                              [`String]);
                             ("account_type", match _x.account_type with
                              | None -> [] | Some _x -> [`String]);
                             ("country", let _x = _x.country in [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("documents", match _x.documents with
                              | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("bank_account_ownership_verification",
                                                match _x.bank_account_ownership_verification with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("files",
                                                                  match _x.files with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]])]]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String]);
                             ("routing_number", match _x.routing_number with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("business_profile", match _x.business_profile with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("annual_revenue", match _x.annual_revenue with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("amount", let _x = _x.amount in
                                              [`Integer]);
                                             ("currency",
                                              let _x = _x.currency in
                                              [`String]);
                                             ("fiscal_year_end",
                                              let _x = _x.fiscal_year_end in
                                              [`String])]]);
                           ("estimated_worker_count",
                            match _x.estimated_worker_count with | None -> []
                            | Some _x -> [`Integer]);
                           ("mcc", match _x.mcc with | None -> []
                            | Some _x -> [`String]);
                           ("monthly_estimated_revenue",
                            match _x.monthly_estimated_revenue with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("amount", let _x = _x.amount in
                                              [`Integer]);
                                             ("currency",
                                              let _x = _x.currency in
                                              [`String])]]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("product_description",
                            match _x.product_description with | None -> []
                            | Some _x -> [`String]);
                           ("support_address", match _x.support_address with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("support_email", match _x.support_email with
                            | None -> [] | Some _x -> [`String]);
                           ("support_phone", match _x.support_phone with
                            | None -> [] | Some _x -> [`String]);
                           ("support_url", match _x.support_url with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_2c71b813db _x -> `String]);
                           ("url", match _x.url with | None -> []
                            | Some _x -> [`String])]]);
         ("business_type", match _x.business_type with | None -> []
          | Some _x -> [`String]);
         ("capabilities", match _x.capabilities with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit_payments",
                            match _x.acss_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("affirm_payments", match _x.affirm_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("afterpay_clearpay_payments",
                            match _x.afterpay_clearpay_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("amazon_pay_payments",
                            match _x.amazon_pay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("au_becs_debit_payments",
                            match _x.au_becs_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("bacs_debit_payments",
                            match _x.bacs_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("bancontact_payments",
                            match _x.bancontact_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("bank_transfer_payments",
                            match _x.bank_transfer_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("blik_payments", match _x.blik_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("boleto_payments", match _x.boleto_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("card_payments", match _x.card_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("cartes_bancaires_payments",
                            match _x.cartes_bancaires_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("cashapp_payments",
                            match _x.cashapp_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("eps_payments", match _x.eps_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("fpx_payments", match _x.fpx_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("giropay_payments",
                            match _x.giropay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("grabpay_payments",
                            match _x.grabpay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("ideal_payments", match _x.ideal_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("india_international_payments",
                            match _x.india_international_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("jcb_payments", match _x.jcb_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("klarna_payments", match _x.klarna_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("konbini_payments",
                            match _x.konbini_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("legacy_payments", match _x.legacy_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("link_payments", match _x.link_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("mobilepay_payments",
                            match _x.mobilepay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("oxxo_payments", match _x.oxxo_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("p24_payments", match _x.p24_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("paynow_payments", match _x.paynow_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("promptpay_payments",
                            match _x.promptpay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("revolut_pay_payments",
                            match _x.revolut_pay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("sepa_debit_payments",
                            match _x.sepa_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("sofort_payments", match _x.sofort_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("swish_payments", match _x.swish_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("tax_reporting_us_1099_k",
                            match _x.tax_reporting_us_1099_k with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("tax_reporting_us_1099_misc",
                            match _x.tax_reporting_us_1099_misc with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("transfers", match _x.transfers with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("treasury", match _x.treasury with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("us_bank_account_ach_payments",
                            match _x.us_bank_account_ach_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("zip_payments", match _x.zip_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]])]]);
         ("company", match _x.company with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kana", match _x.address_kana with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kanji", match _x.address_kanji with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("directors_provided",
                            match _x.directors_provided with | None -> []
                            | Some _x -> [`Boolean]);
                           ("executives_provided",
                            match _x.executives_provided with | None -> []
                            | Some _x -> [`Boolean]);
                           ("export_license_id",
                            match _x.export_license_id with | None -> []
                            | Some _x -> [`String]);
                           ("export_purpose_code",
                            match _x.export_purpose_code with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("name_kana", match _x.name_kana with | None -> []
                            | Some _x -> [`String]);
                           ("name_kanji", match _x.name_kanji with
                            | None -> [] | Some _x -> [`String]);
                           ("owners_provided", match _x.owners_provided with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("ownership_declaration",
                            match _x.ownership_declaration with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("registration_number",
                            match _x.registration_number with | None -> []
                            | Some _x -> [`String]);
                           ("structure", match _x.structure with | None -> []
                            | Some _x -> [`String]);
                           ("tax_id", match _x.tax_id with | None -> []
                            | Some _x -> [`String]);
                           ("tax_id_registrar",
                            match _x.tax_id_registrar with | None -> []
                            | Some _x -> [`String]);
                           ("vat_id", match _x.vat_id with | None -> []
                            | Some _x -> [`String]);
                           ("verification", match _x.verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("document",
                                              match _x.document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]])]]);
         ("controller", match _x.controller with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("fees", match _x.fees with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("payer", match _x.payer with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("losses", match _x.losses with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("payments",
                                              match _x.payments with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("requirement_collection",
                            match _x.requirement_collection with | None -> []
                            | Some _x -> [`String]);
                           ("stripe_dashboard",
                            match _x.stripe_dashboard with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("type", match _x.type_ with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("country", match _x.country with | None -> []
          | Some _x -> [`String]);
         ("default_currency", match _x.default_currency with | None -> []
          | Some _x -> [`String]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank_account_ownership_verification",
                            match _x.bank_account_ownership_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_license", match _x.company_license with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_memorandum_of_association",
                            match _x.company_memorandum_of_association with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_ministerial_decree",
                            match _x.company_ministerial_decree with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_registration_verification",
                            match _x.company_registration_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_tax_id_verification",
                            match _x.company_tax_id_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("proof_of_registration",
                            match _x.proof_of_registration with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("external_account", match _x.external_account with | None -> []
          | Some _x -> [`String]);
         ("individual", match _x.individual with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kana", match _x.address_kana with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kanji", match _x.address_kanji with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("dob", match _x.dob with | None -> []
                            | Some _x -> [match _x with
                                          | T_640245660b _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("day", let _x = _x.day in
                                                [`Integer]);
                                               ("month", let _x = _x.month in
                                                [`Integer]);
                                               ("year", let _x = _x.year in
                                                [`Integer])]
                                          | T_de9d73d1ab _x -> `String]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("first_name", match _x.first_name with
                            | None -> [] | Some _x -> [`String]);
                           ("first_name_kana", match _x.first_name_kana with
                            | None -> [] | Some _x -> [`String]);
                           ("first_name_kanji",
                            match _x.first_name_kanji with | None -> []
                            | Some _x -> [`String]);
                           ("full_name_aliases",
                            match _x.full_name_aliases with | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_da0a026dad _x -> `String]);
                           ("gender", match _x.gender with | None -> []
                            | Some _x -> [`String]);
                           ("id_number", match _x.id_number with | None -> []
                            | Some _x -> [`String]);
                           ("id_number_secondary",
                            match _x.id_number_secondary with | None -> []
                            | Some _x -> [`String]);
                           ("last_name", match _x.last_name with | None -> []
                            | Some _x -> [`String]);
                           ("last_name_kana", match _x.last_name_kana with
                            | None -> [] | Some _x -> [`String]);
                           ("last_name_kanji", match _x.last_name_kanji with
                            | None -> [] | Some _x -> [`String]);
                           ("maiden_name", match _x.maiden_name with
                            | None -> [] | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [match _x with
                                          | T_270d95ab95 _x ->
                                            `ObjectN [("", [`String])]
                                          | T_9f9ae8c991 _x -> `String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("political_exposure",
                            match _x.political_exposure with | None -> []
                            | Some _x -> [`String]);
                           ("registered_address",
                            match _x.registered_address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("relationship", match _x.relationship with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("director",
                                              match _x.director with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("executive",
                                              match _x.executive with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("owner", match _x.owner with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("percent_ownership",
                                              match _x.percent_ownership with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | Float_ _x ->
                                                              `Number
                                                            | T_edac5ff577 _x ->
                                                              `String]);
                                             ("title", match _x.title with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("ssn_last_4", match _x.ssn_last_4 with
                            | None -> [] | Some _x -> [`String]);
                           ("verification", match _x.verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("additional_document",
                                              match _x.additional_document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("document",
                                              match _x.document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a253eb2e02 _x -> `ObjectN [("", [`String])]
                        | T_1a18bfca4c _x -> `String]);
         ("settings", match _x.settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bacs_debit_payments",
                            match _x.bacs_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("display_name",
                                              match _x.display_name with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("branding", match _x.branding with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("icon", match _x.icon with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("logo", match _x.logo with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("primary_color",
                                              match _x.primary_color with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("secondary_color",
                                              match _x.secondary_color with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tos_acceptance",
                                              match _x.tos_acceptance with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_d25b2101d2 _x ->
                                                                  `Null])]])]]);
                           ("card_payments", match _x.card_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("decline_on",
                                              match _x.decline_on with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("avs_failure",
                                                                match _x.avs_failure with
                                                                | None -> []
                                                                | Some _x -> [`Boolean]);
                                                               ("cvc_failure",
                                                                match _x.cvc_failure with
                                                                | None -> []
                                                                | Some _x -> [`Boolean])]]);
                                             ("statement_descriptor_prefix",
                                              match _x.statement_descriptor_prefix with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_prefix_kana",
                                              match _x.statement_descriptor_prefix_kana with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_08a55d8884 _x ->
                                                              `String]);
                                             ("statement_descriptor_prefix_kanji",
                                              match _x.statement_descriptor_prefix_kanji with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_325d8c10e3 _x ->
                                                              `String])]]);
                           ("payments", match _x.payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("statement_descriptor",
                                              match _x.statement_descriptor with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_kana",
                                              match _x.statement_descriptor_kana with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_kanji",
                                              match _x.statement_descriptor_kanji with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("payouts", match _x.payouts with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("debit_negative_balances",
                                              match _x.debit_negative_balances with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("schedule",
                                              match _x.schedule with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("delay_days",
                                                                match _x.delay_days with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | T_1222000d86 _x ->
                                                                  `Null
                                                                | Int _x ->
                                                                  `Null]);
                                                               ("interval",
                                                                match _x.interval with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("monthly_anchor",
                                                                match _x.monthly_anchor with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("weekly_anchor",
                                                                match _x.weekly_anchor with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("statement_descriptor",
                                              match _x.statement_descriptor with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("treasury", match _x.treasury with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tos_acceptance",
                                              match _x.tos_acceptance with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_2954e72c70 _x ->
                                                                  `Null])]])]])]]);
         ("tos_acceptance", match _x.tos_acceptance with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("date", match _x.date with | None -> []
                            | Some _x -> [`Integer]);
                           ("ip", match _x.ip with | None -> []
                            | Some _x -> [`String]);
                           ("service_agreement",
                            match _x.service_agreement with | None -> []
                            | Some _x -> [`String]);
                           ("user_agent", match _x.user_agent with
                            | None -> [] | Some _x -> [`String])]]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_873da709f0) ~op ~ctype _x
  
  and _mk_body_to_t_873da709f0 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_873da709f0) in _body_to
      ~kind:(`ObjectN
               [("account_token", [`String]);
                ("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]);
                     ("account_type", [`String]); ("country", [`String]);
                     ("currency", [`String]);
                     ("documents",
                      [`ObjectN
                         [("", [`Any]);
                          ("bank_account_ownership_verification",
                           [`ObjectN [("", [`Null]); ("files", [`Null])]])]]);
                     ("object", [`String]); ("routing_number", [`String])];
                  `String]);
                ("business_profile",
                 [`ObjectN
                    [("", [`Any]);
                     ("annual_revenue",
                      [`ObjectN
                         [("", [`Any]); ("amount", [`Integer]);
                          ("currency", [`String]);
                          ("fiscal_year_end", [`String])]]);
                     ("estimated_worker_count", [`Integer]);
                     ("mcc", [`String]);
                     ("monthly_estimated_revenue",
                      [`ObjectN
                         [("", [`Any]); ("amount", [`Integer]);
                          ("currency", [`String])]]);
                     ("name", [`String]); ("product_description", [`String]);
                     ("support_address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("support_email", [`String]);
                     ("support_phone", [`String]);
                     ("support_url", [`String;
                                      `String]);
                     ("url", [`String])]]);
                ("business_type", [`String]);
                ("capabilities",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("affirm_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("afterpay_clearpay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("amazon_pay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("au_becs_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("bacs_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("bancontact_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("bank_transfer_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("blik_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("boleto_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("card_issuing",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("card_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("cartes_bancaires_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("cashapp_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("eps_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("fpx_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("giropay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("grabpay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("ideal_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("india_international_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("jcb_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("klarna_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("konbini_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("legacy_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("link_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("mobilepay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("oxxo_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("p24_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("paynow_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("promptpay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("revolut_pay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("sepa_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("sofort_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("swish_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("tax_reporting_us_1099_k",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("tax_reporting_us_1099_misc",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("transfers",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("treasury",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("us_bank_account_ach_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("zip_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]])]]);
                ("company",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("address_kana",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("address_kanji",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("directors_provided", [`Boolean]);
                     ("executives_provided", [`Boolean]);
                     ("export_license_id", [`String]);
                     ("export_purpose_code", [`String]); ("name", [`String]);
                     ("name_kana", [`String]); ("name_kanji", [`String]);
                     ("owners_provided", [`Boolean]);
                     ("ownership_declaration",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]); ("user_agent", [`String])]]);
                     ("phone", [`String]);
                     ("registration_number", [`String]);
                     ("structure", [`String]); ("tax_id", [`String]);
                     ("tax_id_registrar", [`String]); ("vat_id", [`String]);
                     ("verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]])]])]]);
                ("controller",
                 [`ObjectN
                    [("", [`Any]);
                     ("fees",
                      [`ObjectN [("", [`Any]); ("payer", [`String])]]);
                     ("losses",
                      [`ObjectN [("", [`Any]); ("payments", [`String])]]);
                     ("requirement_collection", [`String]);
                     ("stripe_dashboard",
                      [`ObjectN [("", [`Any]); ("type", [`String])]])]]);
                ("country", [`String]); ("default_currency", [`String]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("bank_account_ownership_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_license",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_memorandum_of_association",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_ministerial_decree",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_registration_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_tax_id_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("proof_of_registration",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("external_account", [`String]);
                ("individual",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("address_kana",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("address_kanji",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("dob",
                      [`ObjectN
                         [("", [`Any]); ("day", [`Integer]);
                          ("month", [`Integer]); ("year", [`Integer])];
                       `String]);
                     ("email", [`String]); ("first_name", [`String]);
                     ("first_name_kana", [`String]);
                     ("first_name_kanji", [`String]);
                     ("full_name_aliases",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("gender", [`String]); ("id_number", [`String]);
                     ("id_number_secondary", [`String]);
                     ("last_name", [`String]); ("last_name_kana", [`String]);
                     ("last_name_kanji", [`String]);
                     ("maiden_name", [`String]);
                     ("metadata", [`ObjectN [("", [`String])];
                                   `String]);
                     ("phone", [`String]); ("political_exposure", [`String]);
                     ("registered_address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("relationship",
                      [`ObjectN
                         [("", [`Any]); ("director", [`Boolean]);
                          ("executive", [`Boolean]); ("owner", [`Boolean]);
                          ("percent_ownership", [`Number;
                                                 `String]);
                          ("title", [`String])]]);
                     ("ssn_last_4", [`String]);
                     ("verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]]);
                          ("document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("bacs_debit_payments",
                      [`ObjectN [("", [`Any]); ("display_name", [`String])]]);
                     ("branding",
                      [`ObjectN
                         [("", [`Any]); ("icon", [`String]);
                          ("logo", [`String]); ("primary_color", [`String]);
                          ("secondary_color", [`String])]]);
                     ("card_issuing",
                      [`ObjectN
                         [("", [`Any]);
                          ("tos_acceptance",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]);
                               ("user_agent", [`Null;
                                               `Null])]])]]);
                     ("card_payments",
                      [`ObjectN
                         [("", [`Any]);
                          ("decline_on",
                           [`ObjectN
                              [("", [`Any]); ("avs_failure", [`Boolean]);
                               ("cvc_failure", [`Boolean])]]);
                          ("statement_descriptor_prefix", [`String]);
                          ("statement_descriptor_prefix_kana",
                           [`String;
                            `String]);
                          ("statement_descriptor_prefix_kanji",
                           [`String;
                            `String])]]);
                     ("payments",
                      [`ObjectN
                         [("", [`Any]); ("statement_descriptor", [`String]);
                          ("statement_descriptor_kana", [`String]);
                          ("statement_descriptor_kanji", [`String])]]);
                     ("payouts",
                      [`ObjectN
                         [("", [`Any]);
                          ("debit_negative_balances", [`Boolean]);
                          ("schedule",
                           [`ObjectN
                              [("", [`Any]); ("delay_days", [`Null;
                                                             `Null]);
                               ("interval", [`String]);
                               ("monthly_anchor", [`Integer]);
                               ("weekly_anchor", [`String])]]);
                          ("statement_descriptor", [`String])]]);
                     ("treasury",
                      [`ObjectN
                         [("", [`Any]);
                          ("tos_acceptance",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]);
                               ("user_agent", [`Null;
                                               `Null])]])]])]]);
                ("tos_acceptance",
                 [`ObjectN
                    [("", [`Any]); ("date", [`Integer]); ("ip", [`String]);
                     ("service_agreement", [`String]);
                     ("user_agent", [`String])]]);
                ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0ac571850f _lvl ~op ~ctype (_x : t_0ac571850f) =
    _body_of ~kind:(
      `ObjectN
        [("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [match _x with
                        | T_fe78d7c46b _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account_holder_name",
                              match _x.account_holder_name with | None -> []
                              | Some _x -> [`String]);
                             ("account_holder_type",
                              match _x.account_holder_type with | None -> []
                              | Some _x -> [`String]);
                             ("account_number", let _x = _x.account_number in
                              [`String]);
                             ("account_type", match _x.account_type with
                              | None -> [] | Some _x -> [`String]);
                             ("country", let _x = _x.country in [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("documents", match _x.documents with
                              | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("bank_account_ownership_verification",
                                                match _x.bank_account_ownership_verification with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("files",
                                                                  match _x.files with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]])]]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String]);
                             ("routing_number", match _x.routing_number with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("default_for_currency", match _x.default_for_currency with
          | None -> [] | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("external_account", match _x.external_account with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_0ac571850f) ~op ~ctype _x
  
  and _mk_body_to_t_0ac571850f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0ac571850f) in _body_to
      ~kind:(`ObjectN
               [("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]);
                     ("account_type", [`String]); ("country", [`String]);
                     ("currency", [`String]);
                     ("documents",
                      [`ObjectN
                         [("", [`Any]);
                          ("bank_account_ownership_verification",
                           [`ObjectN [("", [`Null]); ("files", [`Null])]])]]);
                     ("object", [`String]); ("routing_number", [`String])];
                  `String]);
                ("default_for_currency", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("external_account", [`String]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_6d73642c75 _lvl ~op ~ctype (_x : t_6d73642c75) =
    _body_of ~kind:(
      `ObjectN
        [("account_holder_name", match _x.account_holder_name with
          | None -> [] | Some _x -> [`String]);
         ("account_holder_type", match _x.account_holder_type with
          | None -> [] | Some _x -> [`String]);
         ("account_type", match _x.account_type with | None -> []
          | Some _x -> [`String]);
         ("address_city", match _x.address_city with | None -> []
          | Some _x -> [`String]);
         ("address_country", match _x.address_country with | None -> []
          | Some _x -> [`String]);
         ("address_line1", match _x.address_line1 with | None -> []
          | Some _x -> [`String]);
         ("address_line2", match _x.address_line2 with | None -> []
          | Some _x -> [`String]);
         ("address_state", match _x.address_state with | None -> []
          | Some _x -> [`String]);
         ("address_zip", match _x.address_zip with | None -> []
          | Some _x -> [`String]);
         ("default_for_currency", match _x.default_for_currency with
          | None -> [] | Some _x -> [`Boolean]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank_account_ownership_verification",
                            match _x.bank_account_ownership_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("exp_month", match _x.exp_month with | None -> []
          | Some _x -> [`String]);
         ("exp_year", match _x.exp_year with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_8de3766ad4 _x -> `ObjectN [("", [`String])]
                        | T_9c3c390eee _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_6d73642c75) ~op ~ctype _x
  
  and _mk_body_to_t_6d73642c75 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6d73642c75) in _body_to
      ~kind:(`ObjectN
               [("account_holder_name", [`String]);
                ("account_holder_type", [`String]);
                ("account_type", [`String]); ("address_city", [`String]);
                ("address_country", [`String]); ("address_line1", [`String]);
                ("address_line2", [`String]); ("address_state", [`String]);
                ("address_zip", [`String]);
                ("default_for_currency", [`Boolean]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("bank_account_ownership_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("exp_month", [`String]); ("exp_year", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2b0bd800cc _lvl ~op ~ctype (_x : t_2b0bd800cc) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("requested", match _x.requested with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_2b0bd800cc) ~op ~ctype _x
  
  and _mk_body_to_t_2b0bd800cc _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2b0bd800cc) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("requested", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2cb3f4c5b8 _lvl ~op ~ctype (_x : t_2cb3f4c5b8) =
    _body_of ~kind:(
      `ObjectN
        [("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [match _x with
                        | T_04e814f48e _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account_holder_name",
                              match _x.account_holder_name with | None -> []
                              | Some _x -> [`String]);
                             ("account_holder_type",
                              match _x.account_holder_type with | None -> []
                              | Some _x -> [`String]);
                             ("account_number", let _x = _x.account_number in
                              [`String]);
                             ("account_type", match _x.account_type with
                              | None -> [] | Some _x -> [`String]);
                             ("country", let _x = _x.country in [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("documents", match _x.documents with
                              | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("bank_account_ownership_verification",
                                                match _x.bank_account_ownership_verification with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("files",
                                                                  match _x.files with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]])]]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String]);
                             ("routing_number", match _x.routing_number with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("default_for_currency", match _x.default_for_currency with
          | None -> [] | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("external_account", match _x.external_account with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_2cb3f4c5b8) ~op ~ctype _x
  
  and _mk_body_to_t_2cb3f4c5b8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2cb3f4c5b8) in _body_to
      ~kind:(`ObjectN
               [("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]);
                     ("account_type", [`String]); ("country", [`String]);
                     ("currency", [`String]);
                     ("documents",
                      [`ObjectN
                         [("", [`Any]);
                          ("bank_account_ownership_verification",
                           [`ObjectN [("", [`Null]); ("files", [`Null])]])]]);
                     ("object", [`String]); ("routing_number", [`String])];
                  `String]);
                ("default_for_currency", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("external_account", [`String]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2792c18cba _lvl ~op ~ctype (_x : t_2792c18cba) =
    _body_of ~kind:(
      `ObjectN
        [("account_holder_name", match _x.account_holder_name with
          | None -> [] | Some _x -> [`String]);
         ("account_holder_type", match _x.account_holder_type with
          | None -> [] | Some _x -> [`String]);
         ("account_type", match _x.account_type with | None -> []
          | Some _x -> [`String]);
         ("address_city", match _x.address_city with | None -> []
          | Some _x -> [`String]);
         ("address_country", match _x.address_country with | None -> []
          | Some _x -> [`String]);
         ("address_line1", match _x.address_line1 with | None -> []
          | Some _x -> [`String]);
         ("address_line2", match _x.address_line2 with | None -> []
          | Some _x -> [`String]);
         ("address_state", match _x.address_state with | None -> []
          | Some _x -> [`String]);
         ("address_zip", match _x.address_zip with | None -> []
          | Some _x -> [`String]);
         ("default_for_currency", match _x.default_for_currency with
          | None -> [] | Some _x -> [`Boolean]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank_account_ownership_verification",
                            match _x.bank_account_ownership_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("exp_month", match _x.exp_month with | None -> []
          | Some _x -> [`String]);
         ("exp_year", match _x.exp_year with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_ea0075b10e _x -> `ObjectN [("", [`String])]
                        | T_f4f0842140 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_2792c18cba) ~op ~ctype _x
  
  and _mk_body_to_t_2792c18cba _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2792c18cba) in _body_to
      ~kind:(`ObjectN
               [("account_holder_name", [`String]);
                ("account_holder_type", [`String]);
                ("account_type", [`String]); ("address_city", [`String]);
                ("address_country", [`String]); ("address_line1", [`String]);
                ("address_line2", [`String]); ("address_state", [`String]);
                ("address_zip", [`String]);
                ("default_for_currency", [`Boolean]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("bank_account_ownership_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("exp_month", [`String]); ("exp_year", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_3d4ff3bb74 _lvl ~op ~ctype (_x : t_3d4ff3bb74) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_3d4ff3bb74) ~op ~ctype _x
  
  and _mk_body_to_t_3d4ff3bb74 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3d4ff3bb74) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_1662f1c975 _lvl ~op ~ctype (_x : t_1662f1c975) =
    _body_of ~kind:(
      `ObjectN
        [("additional_tos_acceptances",
          match _x.additional_tos_acceptances with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_a4a32b3df3 _x ->
                                                              `String])]])]]);
         ("address", match _x.address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kana", match _x.address_kana with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kanji", match _x.address_kanji with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("dob", match _x.dob with | None -> []
          | Some _x -> [match _x with
                        | T_704086b9bd _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("day", let _x = _x.day in [`Integer]);
                             ("month", let _x = _x.month in [`Integer]);
                             ("year", let _x = _x.year in [`Integer])]
                        | T_0f97439a30 _x -> `String]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("company_authorization",
                            match _x.company_authorization with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_434fb5d665) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("passport", match _x.passport with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_5ce364567c) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("visa", match _x.visa with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_ddecbbb688) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("first_name", match _x.first_name with | None -> []
          | Some _x -> [`String]);
         ("first_name_kana", match _x.first_name_kana with | None -> []
          | Some _x -> [`String]);
         ("first_name_kanji", match _x.first_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("full_name_aliases", match _x.full_name_aliases with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_b8928bdb17 _x -> `String]);
         ("gender", match _x.gender with | None -> [] | Some _x -> [`String]);
         ("id_number", match _x.id_number with | None -> []
          | Some _x -> [`String]);
         ("id_number_secondary", match _x.id_number_secondary with
          | None -> [] | Some _x -> [`String]);
         ("last_name", match _x.last_name with | None -> []
          | Some _x -> [`String]);
         ("last_name_kana", match _x.last_name_kana with | None -> []
          | Some _x -> [`String]);
         ("last_name_kanji", match _x.last_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("maiden_name", match _x.maiden_name with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_d98eb386a2 _x -> `ObjectN [("", [`String])]
                        | T_fef11fc21b _x -> `String]);
         ("nationality", match _x.nationality with | None -> []
          | Some _x -> [`String]);
         ("person_token", match _x.person_token with | None -> []
          | Some _x -> [`String]);
         ("phone", match _x.phone with | None -> [] | Some _x -> [`String]);
         ("political_exposure", match _x.political_exposure with | None -> []
          | Some _x -> [`String]);
         ("registered_address", match _x.registered_address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("relationship", match _x.relationship with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("director", match _x.director with | None -> []
                            | Some _x -> [`Boolean]);
                           ("executive", match _x.executive with | None -> []
                            | Some _x -> [`Boolean]);
                           ("legal_guardian", match _x.legal_guardian with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("owner", match _x.owner with | None -> []
                            | Some _x -> [`Boolean]);
                           ("percent_ownership",
                            match _x.percent_ownership with | None -> []
                            | Some _x -> [match _x with
                                          | Float_ _x -> `Number
                                          | T_00f8bc6426 _x -> `String]);
                           ("representative", match _x.representative with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("title", match _x.title with | None -> []
                            | Some _x -> [`String])]]);
         ("ssn_last_4", match _x.ssn_last_4 with | None -> []
          | Some _x -> [`String]);
         ("verification", match _x.verification with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("additional_document",
                            match _x.additional_document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("document", match _x.document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_1662f1c975) ~op ~ctype _x
  
  and _mk_body_to_t_1662f1c975 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_1662f1c975) in _body_to
      ~kind:(`ObjectN
               [("additional_tos_acceptances",
                 [`ObjectN
                    [("", [`Any]);
                     ("account",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]);
                          ("user_agent", [`String;
                                          `String])]])]]);
                ("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("address_kana",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("address_kanji",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("dob",
                 [`ObjectN
                    [("", [`Any]); ("day", [`Integer]);
                     ("month", [`Integer]); ("year", [`Integer])];
                  `String]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("company_authorization",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("passport",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("visa",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("first_name", [`String]); ("first_name_kana", [`String]);
                ("first_name_kanji", [`String]);
                ("full_name_aliases", [`Array [(`List (`String))];
                                       `String]);
                ("gender", [`String]); ("id_number", [`String]);
                ("id_number_secondary", [`String]); ("last_name", [`String]);
                ("last_name_kana", [`String]);
                ("last_name_kanji", [`String]); ("maiden_name", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("nationality", [`String]); ("person_token", [`String]);
                ("phone", [`String]); ("political_exposure", [`String]);
                ("registered_address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("relationship",
                 [`ObjectN
                    [("", [`Any]); ("director", [`Boolean]);
                     ("executive", [`Boolean]);
                     ("legal_guardian", [`Boolean]); ("owner", [`Boolean]);
                     ("percent_ownership", [`Number;
                                            `String]);
                     ("representative", [`Boolean]); ("title", [`String])]]);
                ("ssn_last_4", [`String]);
                ("verification",
                 [`ObjectN
                    [("", [`Any]);
                     ("additional_document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]]);
                     ("document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_97e3db8100 _lvl ~op ~ctype (_x : t_97e3db8100) =
    _body_of ~kind:(
      `ObjectN
        [("additional_tos_acceptances",
          match _x.additional_tos_acceptances with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_50f44f30b8 _x ->
                                                              `String])]])]]);
         ("address", match _x.address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kana", match _x.address_kana with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kanji", match _x.address_kanji with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("dob", match _x.dob with | None -> []
          | Some _x -> [match _x with
                        | T_67e2e9beeb _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("day", let _x = _x.day in [`Integer]);
                             ("month", let _x = _x.month in [`Integer]);
                             ("year", let _x = _x.year in [`Integer])]
                        | T_12bee56f57 _x -> `String]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("company_authorization",
                            match _x.company_authorization with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_d70242a95a) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("passport", match _x.passport with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_095f592c46) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("visa", match _x.visa with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_51ae7ba5ca) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("first_name", match _x.first_name with | None -> []
          | Some _x -> [`String]);
         ("first_name_kana", match _x.first_name_kana with | None -> []
          | Some _x -> [`String]);
         ("first_name_kanji", match _x.first_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("full_name_aliases", match _x.full_name_aliases with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_8e73a1749a _x -> `String]);
         ("gender", match _x.gender with | None -> [] | Some _x -> [`String]);
         ("id_number", match _x.id_number with | None -> []
          | Some _x -> [`String]);
         ("id_number_secondary", match _x.id_number_secondary with
          | None -> [] | Some _x -> [`String]);
         ("last_name", match _x.last_name with | None -> []
          | Some _x -> [`String]);
         ("last_name_kana", match _x.last_name_kana with | None -> []
          | Some _x -> [`String]);
         ("last_name_kanji", match _x.last_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("maiden_name", match _x.maiden_name with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_00045459e0 _x -> `ObjectN [("", [`String])]
                        | T_35076f7626 _x -> `String]);
         ("nationality", match _x.nationality with | None -> []
          | Some _x -> [`String]);
         ("person_token", match _x.person_token with | None -> []
          | Some _x -> [`String]);
         ("phone", match _x.phone with | None -> [] | Some _x -> [`String]);
         ("political_exposure", match _x.political_exposure with | None -> []
          | Some _x -> [`String]);
         ("registered_address", match _x.registered_address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("relationship", match _x.relationship with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("director", match _x.director with | None -> []
                            | Some _x -> [`Boolean]);
                           ("executive", match _x.executive with | None -> []
                            | Some _x -> [`Boolean]);
                           ("legal_guardian", match _x.legal_guardian with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("owner", match _x.owner with | None -> []
                            | Some _x -> [`Boolean]);
                           ("percent_ownership",
                            match _x.percent_ownership with | None -> []
                            | Some _x -> [match _x with
                                          | Float_ _x -> `Number
                                          | T_71723f4a57 _x -> `String]);
                           ("representative", match _x.representative with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("title", match _x.title with | None -> []
                            | Some _x -> [`String])]]);
         ("ssn_last_4", match _x.ssn_last_4 with | None -> []
          | Some _x -> [`String]);
         ("verification", match _x.verification with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("additional_document",
                            match _x.additional_document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("document", match _x.document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_97e3db8100) ~op ~ctype _x
  
  and _mk_body_to_t_97e3db8100 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_97e3db8100) in _body_to
      ~kind:(`ObjectN
               [("additional_tos_acceptances",
                 [`ObjectN
                    [("", [`Any]);
                     ("account",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]);
                          ("user_agent", [`String;
                                          `String])]])]]);
                ("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("address_kana",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("address_kanji",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("dob",
                 [`ObjectN
                    [("", [`Any]); ("day", [`Integer]);
                     ("month", [`Integer]); ("year", [`Integer])];
                  `String]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("company_authorization",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("passport",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("visa",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("first_name", [`String]); ("first_name_kana", [`String]);
                ("first_name_kanji", [`String]);
                ("full_name_aliases", [`Array [(`List (`String))];
                                       `String]);
                ("gender", [`String]); ("id_number", [`String]);
                ("id_number_secondary", [`String]); ("last_name", [`String]);
                ("last_name_kana", [`String]);
                ("last_name_kanji", [`String]); ("maiden_name", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("nationality", [`String]); ("person_token", [`String]);
                ("phone", [`String]); ("political_exposure", [`String]);
                ("registered_address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("relationship",
                 [`ObjectN
                    [("", [`Any]); ("director", [`Boolean]);
                     ("executive", [`Boolean]);
                     ("legal_guardian", [`Boolean]); ("owner", [`Boolean]);
                     ("percent_ownership", [`Number;
                                            `String]);
                     ("representative", [`Boolean]); ("title", [`String])]]);
                ("ssn_last_4", [`String]);
                ("verification",
                 [`ObjectN
                    [("", [`Any]);
                     ("additional_document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]]);
                     ("document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_9657124a3d _lvl ~op ~ctype (_x : t_9657124a3d) =
    _body_of ~kind:(
      `ObjectN
        [("additional_tos_acceptances",
          match _x.additional_tos_acceptances with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_c153819b9d _x ->
                                                              `String])]])]]);
         ("address", match _x.address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kana", match _x.address_kana with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kanji", match _x.address_kanji with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("dob", match _x.dob with | None -> []
          | Some _x -> [match _x with
                        | T_566f5c3cea _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("day", let _x = _x.day in [`Integer]);
                             ("month", let _x = _x.month in [`Integer]);
                             ("year", let _x = _x.year in [`Integer])]
                        | T_1f6cccc20d _x -> `String]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("company_authorization",
                            match _x.company_authorization with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_542ad3eb69) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("passport", match _x.passport with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_288616dfad) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("visa", match _x.visa with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_6f50ee5e01) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("first_name", match _x.first_name with | None -> []
          | Some _x -> [`String]);
         ("first_name_kana", match _x.first_name_kana with | None -> []
          | Some _x -> [`String]);
         ("first_name_kanji", match _x.first_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("full_name_aliases", match _x.full_name_aliases with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_e64f3e2dc0 _x -> `String]);
         ("gender", match _x.gender with | None -> [] | Some _x -> [`String]);
         ("id_number", match _x.id_number with | None -> []
          | Some _x -> [`String]);
         ("id_number_secondary", match _x.id_number_secondary with
          | None -> [] | Some _x -> [`String]);
         ("last_name", match _x.last_name with | None -> []
          | Some _x -> [`String]);
         ("last_name_kana", match _x.last_name_kana with | None -> []
          | Some _x -> [`String]);
         ("last_name_kanji", match _x.last_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("maiden_name", match _x.maiden_name with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_1b8052de05 _x -> `ObjectN [("", [`String])]
                        | T_c2c4ea4195 _x -> `String]);
         ("nationality", match _x.nationality with | None -> []
          | Some _x -> [`String]);
         ("person_token", match _x.person_token with | None -> []
          | Some _x -> [`String]);
         ("phone", match _x.phone with | None -> [] | Some _x -> [`String]);
         ("political_exposure", match _x.political_exposure with | None -> []
          | Some _x -> [`String]);
         ("registered_address", match _x.registered_address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("relationship", match _x.relationship with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("director", match _x.director with | None -> []
                            | Some _x -> [`Boolean]);
                           ("executive", match _x.executive with | None -> []
                            | Some _x -> [`Boolean]);
                           ("legal_guardian", match _x.legal_guardian with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("owner", match _x.owner with | None -> []
                            | Some _x -> [`Boolean]);
                           ("percent_ownership",
                            match _x.percent_ownership with | None -> []
                            | Some _x -> [match _x with
                                          | Float_ _x -> `Number
                                          | T_f049bdbe92 _x -> `String]);
                           ("representative", match _x.representative with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("title", match _x.title with | None -> []
                            | Some _x -> [`String])]]);
         ("ssn_last_4", match _x.ssn_last_4 with | None -> []
          | Some _x -> [`String]);
         ("verification", match _x.verification with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("additional_document",
                            match _x.additional_document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("document", match _x.document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_9657124a3d) ~op ~ctype _x
  
  and _mk_body_to_t_9657124a3d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_9657124a3d) in _body_to
      ~kind:(`ObjectN
               [("additional_tos_acceptances",
                 [`ObjectN
                    [("", [`Any]);
                     ("account",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]);
                          ("user_agent", [`String;
                                          `String])]])]]);
                ("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("address_kana",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("address_kanji",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("dob",
                 [`ObjectN
                    [("", [`Any]); ("day", [`Integer]);
                     ("month", [`Integer]); ("year", [`Integer])];
                  `String]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("company_authorization",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("passport",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("visa",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("first_name", [`String]); ("first_name_kana", [`String]);
                ("first_name_kanji", [`String]);
                ("full_name_aliases", [`Array [(`List (`String))];
                                       `String]);
                ("gender", [`String]); ("id_number", [`String]);
                ("id_number_secondary", [`String]); ("last_name", [`String]);
                ("last_name_kana", [`String]);
                ("last_name_kanji", [`String]); ("maiden_name", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("nationality", [`String]); ("person_token", [`String]);
                ("phone", [`String]); ("political_exposure", [`String]);
                ("registered_address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("relationship",
                 [`ObjectN
                    [("", [`Any]); ("director", [`Boolean]);
                     ("executive", [`Boolean]);
                     ("legal_guardian", [`Boolean]); ("owner", [`Boolean]);
                     ("percent_ownership", [`Number;
                                            `String]);
                     ("representative", [`Boolean]); ("title", [`String])]]);
                ("ssn_last_4", [`String]);
                ("verification",
                 [`ObjectN
                    [("", [`Any]);
                     ("additional_document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]]);
                     ("document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_fdd67c7407 _lvl ~op ~ctype (_x : t_fdd67c7407) =
    _body_of ~kind:(
      `ObjectN
        [("additional_tos_acceptances",
          match _x.additional_tos_acceptances with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_331aa65926 _x ->
                                                              `String])]])]]);
         ("address", match _x.address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kana", match _x.address_kana with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("address_kanji", match _x.address_kanji with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("town", match _x.town with | None -> []
                            | Some _x -> [`String])]]);
         ("dob", match _x.dob with | None -> []
          | Some _x -> [match _x with
                        | T_f75769cc47 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("day", let _x = _x.day in [`Integer]);
                             ("month", let _x = _x.month in [`Integer]);
                             ("year", let _x = _x.year in [`Integer])]
                        | T_4d4f94e2a5 _x -> `String]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("company_authorization",
                            match _x.company_authorization with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_bfa62b8166) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("passport", match _x.passport with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_2888c11aeb) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("visa", match _x.visa with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_7c5b22484e) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("first_name", match _x.first_name with | None -> []
          | Some _x -> [`String]);
         ("first_name_kana", match _x.first_name_kana with | None -> []
          | Some _x -> [`String]);
         ("first_name_kanji", match _x.first_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("full_name_aliases", match _x.full_name_aliases with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_a3edd4e80a _x -> `String]);
         ("gender", match _x.gender with | None -> [] | Some _x -> [`String]);
         ("id_number", match _x.id_number with | None -> []
          | Some _x -> [`String]);
         ("id_number_secondary", match _x.id_number_secondary with
          | None -> [] | Some _x -> [`String]);
         ("last_name", match _x.last_name with | None -> []
          | Some _x -> [`String]);
         ("last_name_kana", match _x.last_name_kana with | None -> []
          | Some _x -> [`String]);
         ("last_name_kanji", match _x.last_name_kanji with | None -> []
          | Some _x -> [`String]);
         ("maiden_name", match _x.maiden_name with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_3545c24a83 _x -> `ObjectN [("", [`String])]
                        | T_b741736d68 _x -> `String]);
         ("nationality", match _x.nationality with | None -> []
          | Some _x -> [`String]);
         ("person_token", match _x.person_token with | None -> []
          | Some _x -> [`String]);
         ("phone", match _x.phone with | None -> [] | Some _x -> [`String]);
         ("political_exposure", match _x.political_exposure with | None -> []
          | Some _x -> [`String]);
         ("registered_address", match _x.registered_address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("relationship", match _x.relationship with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("director", match _x.director with | None -> []
                            | Some _x -> [`Boolean]);
                           ("executive", match _x.executive with | None -> []
                            | Some _x -> [`Boolean]);
                           ("legal_guardian", match _x.legal_guardian with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("owner", match _x.owner with | None -> []
                            | Some _x -> [`Boolean]);
                           ("percent_ownership",
                            match _x.percent_ownership with | None -> []
                            | Some _x -> [match _x with
                                          | Float_ _x -> `Number
                                          | T_f295b7c33d _x -> `String]);
                           ("representative", match _x.representative with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("title", match _x.title with | None -> []
                            | Some _x -> [`String])]]);
         ("ssn_last_4", match _x.ssn_last_4 with | None -> []
          | Some _x -> [`String]);
         ("verification", match _x.verification with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("additional_document",
                            match _x.additional_document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("document", match _x.document with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("back", match _x.back with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("front", match _x.front with
                                              | None -> []
                                              | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_fdd67c7407) ~op ~ctype _x
  
  and _mk_body_to_t_fdd67c7407 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fdd67c7407) in _body_to
      ~kind:(`ObjectN
               [("additional_tos_acceptances",
                 [`ObjectN
                    [("", [`Any]);
                     ("account",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]);
                          ("user_agent", [`String;
                                          `String])]])]]);
                ("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("address_kana",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("address_kanji",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String]); ("town", [`String])]]);
                ("dob",
                 [`ObjectN
                    [("", [`Any]); ("day", [`Integer]);
                     ("month", [`Integer]); ("year", [`Integer])];
                  `String]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("company_authorization",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("passport",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("visa",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("first_name", [`String]); ("first_name_kana", [`String]);
                ("first_name_kanji", [`String]);
                ("full_name_aliases", [`Array [(`List (`String))];
                                       `String]);
                ("gender", [`String]); ("id_number", [`String]);
                ("id_number_secondary", [`String]); ("last_name", [`String]);
                ("last_name_kana", [`String]);
                ("last_name_kanji", [`String]); ("maiden_name", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("nationality", [`String]); ("person_token", [`String]);
                ("phone", [`String]); ("political_exposure", [`String]);
                ("registered_address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("relationship",
                 [`ObjectN
                    [("", [`Any]); ("director", [`Boolean]);
                     ("executive", [`Boolean]);
                     ("legal_guardian", [`Boolean]); ("owner", [`Boolean]);
                     ("percent_ownership", [`Number;
                                            `String]);
                     ("representative", [`Boolean]); ("title", [`String])]]);
                ("ssn_last_4", [`String]);
                ("verification",
                 [`ObjectN
                    [("", [`Any]);
                     ("additional_document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]]);
                     ("document",
                      [`ObjectN
                         [("", [`Any]); ("back", [`String]);
                          ("front", [`String])]])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2df1edec70 _lvl ~op ~ctype (_x : t_2df1edec70) =
    _body_of ~kind:(
      `ObjectN
        [("account_token", match _x.account_token with | None -> []
          | Some _x -> [`String]);
         ("business_profile", match _x.business_profile with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("annual_revenue", match _x.annual_revenue with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("amount", let _x = _x.amount in
                                              [`Integer]);
                                             ("currency",
                                              let _x = _x.currency in
                                              [`String]);
                                             ("fiscal_year_end",
                                              let _x = _x.fiscal_year_end in
                                              [`String])]]);
                           ("estimated_worker_count",
                            match _x.estimated_worker_count with | None -> []
                            | Some _x -> [`Integer]);
                           ("mcc", match _x.mcc with | None -> []
                            | Some _x -> [`String]);
                           ("monthly_estimated_revenue",
                            match _x.monthly_estimated_revenue with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("amount", let _x = _x.amount in
                                              [`Integer]);
                                             ("currency",
                                              let _x = _x.currency in
                                              [`String])]]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("product_description",
                            match _x.product_description with | None -> []
                            | Some _x -> [`String]);
                           ("support_address", match _x.support_address with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("support_email", match _x.support_email with
                            | None -> [] | Some _x -> [`String]);
                           ("support_phone", match _x.support_phone with
                            | None -> [] | Some _x -> [`String]);
                           ("support_url", match _x.support_url with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_4b6fb67fc0 _x -> `String]);
                           ("url", match _x.url with | None -> []
                            | Some _x -> [`String])]]);
         ("business_type", match _x.business_type with | None -> []
          | Some _x -> [`String]);
         ("capabilities", match _x.capabilities with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit_payments",
                            match _x.acss_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("affirm_payments", match _x.affirm_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("afterpay_clearpay_payments",
                            match _x.afterpay_clearpay_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("amazon_pay_payments",
                            match _x.amazon_pay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("au_becs_debit_payments",
                            match _x.au_becs_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("bacs_debit_payments",
                            match _x.bacs_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("bancontact_payments",
                            match _x.bancontact_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("bank_transfer_payments",
                            match _x.bank_transfer_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("blik_payments", match _x.blik_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("boleto_payments", match _x.boleto_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("card_payments", match _x.card_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("cartes_bancaires_payments",
                            match _x.cartes_bancaires_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("cashapp_payments",
                            match _x.cashapp_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("eps_payments", match _x.eps_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("fpx_payments", match _x.fpx_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("giropay_payments",
                            match _x.giropay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("grabpay_payments",
                            match _x.grabpay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("ideal_payments", match _x.ideal_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("india_international_payments",
                            match _x.india_international_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("jcb_payments", match _x.jcb_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("klarna_payments", match _x.klarna_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("konbini_payments",
                            match _x.konbini_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("legacy_payments", match _x.legacy_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("link_payments", match _x.link_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("mobilepay_payments",
                            match _x.mobilepay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("oxxo_payments", match _x.oxxo_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("p24_payments", match _x.p24_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("paynow_payments", match _x.paynow_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("promptpay_payments",
                            match _x.promptpay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("revolut_pay_payments",
                            match _x.revolut_pay_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("sepa_debit_payments",
                            match _x.sepa_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("sofort_payments", match _x.sofort_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("swish_payments", match _x.swish_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("tax_reporting_us_1099_k",
                            match _x.tax_reporting_us_1099_k with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("tax_reporting_us_1099_misc",
                            match _x.tax_reporting_us_1099_misc with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("transfers", match _x.transfers with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("treasury", match _x.treasury with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("us_bank_account_ach_payments",
                            match _x.us_bank_account_ach_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("zip_payments", match _x.zip_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              match _x.requested with
                                              | None -> []
                                              | Some _x -> [`Boolean])]])]]);
         ("company", match _x.company with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kana", match _x.address_kana with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kanji", match _x.address_kanji with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("directors_provided",
                            match _x.directors_provided with | None -> []
                            | Some _x -> [`Boolean]);
                           ("executives_provided",
                            match _x.executives_provided with | None -> []
                            | Some _x -> [`Boolean]);
                           ("export_license_id",
                            match _x.export_license_id with | None -> []
                            | Some _x -> [`String]);
                           ("export_purpose_code",
                            match _x.export_purpose_code with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("name_kana", match _x.name_kana with | None -> []
                            | Some _x -> [`String]);
                           ("name_kanji", match _x.name_kanji with
                            | None -> [] | Some _x -> [`String]);
                           ("owners_provided", match _x.owners_provided with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("ownership_declaration",
                            match _x.ownership_declaration with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("registration_number",
                            match _x.registration_number with | None -> []
                            | Some _x -> [`String]);
                           ("structure", match _x.structure with | None -> []
                            | Some _x -> [`String]);
                           ("tax_id", match _x.tax_id with | None -> []
                            | Some _x -> [`String]);
                           ("tax_id_registrar",
                            match _x.tax_id_registrar with | None -> []
                            | Some _x -> [`String]);
                           ("vat_id", match _x.vat_id with | None -> []
                            | Some _x -> [`String]);
                           ("verification", match _x.verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("document",
                                              match _x.document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]])]]);
         ("default_currency", match _x.default_currency with | None -> []
          | Some _x -> [`String]);
         ("documents", match _x.documents with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank_account_ownership_verification",
                            match _x.bank_account_ownership_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_license", match _x.company_license with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_memorandum_of_association",
                            match _x.company_memorandum_of_association with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_ministerial_decree",
                            match _x.company_ministerial_decree with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_registration_verification",
                            match _x.company_registration_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("company_tax_id_verification",
                            match _x.company_tax_id_verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]]);
                           ("proof_of_registration",
                            match _x.proof_of_registration with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("files", match _x.files with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))])]])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("external_account", match _x.external_account with | None -> []
          | Some _x -> [`String]);
         ("individual", match _x.individual with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kana", match _x.address_kana with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kanji", match _x.address_kanji with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("dob", match _x.dob with | None -> []
                            | Some _x -> [match _x with
                                          | T_a9529dd5cd _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("day", let _x = _x.day in
                                                [`Integer]);
                                               ("month", let _x = _x.month in
                                                [`Integer]);
                                               ("year", let _x = _x.year in
                                                [`Integer])]
                                          | T_59a0aec110 _x -> `String]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("first_name", match _x.first_name with
                            | None -> [] | Some _x -> [`String]);
                           ("first_name_kana", match _x.first_name_kana with
                            | None -> [] | Some _x -> [`String]);
                           ("first_name_kanji",
                            match _x.first_name_kanji with | None -> []
                            | Some _x -> [`String]);
                           ("full_name_aliases",
                            match _x.full_name_aliases with | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_3fab91622c _x -> `String]);
                           ("gender", match _x.gender with | None -> []
                            | Some _x -> [`String]);
                           ("id_number", match _x.id_number with | None -> []
                            | Some _x -> [`String]);
                           ("id_number_secondary",
                            match _x.id_number_secondary with | None -> []
                            | Some _x -> [`String]);
                           ("last_name", match _x.last_name with | None -> []
                            | Some _x -> [`String]);
                           ("last_name_kana", match _x.last_name_kana with
                            | None -> [] | Some _x -> [`String]);
                           ("last_name_kanji", match _x.last_name_kanji with
                            | None -> [] | Some _x -> [`String]);
                           ("maiden_name", match _x.maiden_name with
                            | None -> [] | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [match _x with
                                          | T_9406e79403 _x ->
                                            `ObjectN [("", [`String])]
                                          | T_0492f6609d _x -> `String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("political_exposure",
                            match _x.political_exposure with | None -> []
                            | Some _x -> [`String]);
                           ("registered_address",
                            match _x.registered_address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("relationship", match _x.relationship with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("director",
                                              match _x.director with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("executive",
                                              match _x.executive with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("owner", match _x.owner with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("percent_ownership",
                                              match _x.percent_ownership with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | Float_ _x ->
                                                              `Number
                                                            | T_99e0a8ec99 _x ->
                                                              `String]);
                                             ("title", match _x.title with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("ssn_last_4", match _x.ssn_last_4 with
                            | None -> [] | Some _x -> [`String]);
                           ("verification", match _x.verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("additional_document",
                                              match _x.additional_document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("document",
                                              match _x.document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_09a941607c _x -> `ObjectN [("", [`String])]
                        | T_4e3ba4556d _x -> `String]);
         ("settings", match _x.settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bacs_debit_payments",
                            match _x.bacs_debit_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("display_name",
                                              match _x.display_name with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("branding", match _x.branding with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("icon", match _x.icon with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("logo", match _x.logo with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("primary_color",
                                              match _x.primary_color with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("secondary_color",
                                              match _x.secondary_color with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tos_acceptance",
                                              match _x.tos_acceptance with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_3b67ede718 _x ->
                                                                  `Null])]])]]);
                           ("card_payments", match _x.card_payments with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("decline_on",
                                              match _x.decline_on with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("avs_failure",
                                                                match _x.avs_failure with
                                                                | None -> []
                                                                | Some _x -> [`Boolean]);
                                                               ("cvc_failure",
                                                                match _x.cvc_failure with
                                                                | None -> []
                                                                | Some _x -> [`Boolean])]]);
                                             ("statement_descriptor_prefix",
                                              match _x.statement_descriptor_prefix with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_prefix_kana",
                                              match _x.statement_descriptor_prefix_kana with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_0d18098f81 _x ->
                                                              `String]);
                                             ("statement_descriptor_prefix_kanji",
                                              match _x.statement_descriptor_prefix_kanji with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_ad462d7d3a _x ->
                                                              `String])]]);
                           ("invoices", match _x.invoices with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("default_account_tax_ids",
                                              match _x.default_account_tax_ids with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | StringList _x ->
                                                              `Array
                                                                ((List.map (fun (_x : string) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_6442d141aa _x ->
                                                              `String])]]);
                           ("payments", match _x.payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("statement_descriptor",
                                              match _x.statement_descriptor with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_kana",
                                              match _x.statement_descriptor_kana with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_kanji",
                                              match _x.statement_descriptor_kanji with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("payouts", match _x.payouts with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("debit_negative_balances",
                                              match _x.debit_negative_balances with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("schedule",
                                              match _x.schedule with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("delay_days",
                                                                match _x.delay_days with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | T_637364d99f _x ->
                                                                  `Null
                                                                | Int _x ->
                                                                  `Null]);
                                                               ("interval",
                                                                match _x.interval with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("monthly_anchor",
                                                                match _x.monthly_anchor with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("weekly_anchor",
                                                                match _x.weekly_anchor with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("statement_descriptor",
                                              match _x.statement_descriptor with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("treasury", match _x.treasury with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tos_acceptance",
                                              match _x.tos_acceptance with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_86d5aaa62f _x ->
                                                                  `Null])]])]])]]);
         ("tos_acceptance", match _x.tos_acceptance with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("date", match _x.date with | None -> []
                            | Some _x -> [`Integer]);
                           ("ip", match _x.ip with | None -> []
                            | Some _x -> [`String]);
                           ("service_agreement",
                            match _x.service_agreement with | None -> []
                            | Some _x -> [`String]);
                           ("user_agent", match _x.user_agent with
                            | None -> [] | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_2df1edec70) ~op ~ctype _x
  
  and _mk_body_to_t_2df1edec70 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2df1edec70) in _body_to
      ~kind:(`ObjectN
               [("account_token", [`String]);
                ("business_profile",
                 [`ObjectN
                    [("", [`Any]);
                     ("annual_revenue",
                      [`ObjectN
                         [("", [`Any]); ("amount", [`Integer]);
                          ("currency", [`String]);
                          ("fiscal_year_end", [`String])]]);
                     ("estimated_worker_count", [`Integer]);
                     ("mcc", [`String]);
                     ("monthly_estimated_revenue",
                      [`ObjectN
                         [("", [`Any]); ("amount", [`Integer]);
                          ("currency", [`String])]]);
                     ("name", [`String]); ("product_description", [`String]);
                     ("support_address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("support_email", [`String]);
                     ("support_phone", [`String]);
                     ("support_url", [`String;
                                      `String]);
                     ("url", [`String])]]);
                ("business_type", [`String]);
                ("capabilities",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("affirm_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("afterpay_clearpay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("amazon_pay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("au_becs_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("bacs_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("bancontact_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("bank_transfer_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("blik_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("boleto_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("card_issuing",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("card_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("cartes_bancaires_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("cashapp_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("eps_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("fpx_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("giropay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("grabpay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("ideal_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("india_international_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("jcb_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("klarna_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("konbini_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("legacy_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("link_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("mobilepay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("oxxo_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("p24_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("paynow_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("promptpay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("revolut_pay_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("sepa_debit_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("sofort_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("swish_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("tax_reporting_us_1099_k",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("tax_reporting_us_1099_misc",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("transfers",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("treasury",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("us_bank_account_ach_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("zip_payments",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]])]]);
                ("company",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("address_kana",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("address_kanji",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("directors_provided", [`Boolean]);
                     ("executives_provided", [`Boolean]);
                     ("export_license_id", [`String]);
                     ("export_purpose_code", [`String]); ("name", [`String]);
                     ("name_kana", [`String]); ("name_kanji", [`String]);
                     ("owners_provided", [`Boolean]);
                     ("ownership_declaration",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]); ("user_agent", [`String])]]);
                     ("phone", [`String]);
                     ("registration_number", [`String]);
                     ("structure", [`String]); ("tax_id", [`String]);
                     ("tax_id_registrar", [`String]); ("vat_id", [`String]);
                     ("verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]])]])]]);
                ("default_currency", [`String]);
                ("documents",
                 [`ObjectN
                    [("", [`Any]);
                     ("bank_account_ownership_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_license",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_memorandum_of_association",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_ministerial_decree",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_registration_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("company_tax_id_verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]]);
                     ("proof_of_registration",
                      [`ObjectN
                         [("", [`Any]);
                          ("files", [`Array [(`List (`Null))]])]])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("external_account", [`String]);
                ("individual",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("address_kana",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("address_kanji",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("dob",
                      [`ObjectN
                         [("", [`Any]); ("day", [`Integer]);
                          ("month", [`Integer]); ("year", [`Integer])];
                       `String]);
                     ("email", [`String]); ("first_name", [`String]);
                     ("first_name_kana", [`String]);
                     ("first_name_kanji", [`String]);
                     ("full_name_aliases",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("gender", [`String]); ("id_number", [`String]);
                     ("id_number_secondary", [`String]);
                     ("last_name", [`String]); ("last_name_kana", [`String]);
                     ("last_name_kanji", [`String]);
                     ("maiden_name", [`String]);
                     ("metadata", [`ObjectN [("", [`String])];
                                   `String]);
                     ("phone", [`String]); ("political_exposure", [`String]);
                     ("registered_address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("relationship",
                      [`ObjectN
                         [("", [`Any]); ("director", [`Boolean]);
                          ("executive", [`Boolean]); ("owner", [`Boolean]);
                          ("percent_ownership", [`Number;
                                                 `String]);
                          ("title", [`String])]]);
                     ("ssn_last_4", [`String]);
                     ("verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]]);
                          ("document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("bacs_debit_payments",
                      [`ObjectN [("", [`Any]); ("display_name", [`String])]]);
                     ("branding",
                      [`ObjectN
                         [("", [`Any]); ("icon", [`String]);
                          ("logo", [`String]); ("primary_color", [`String]);
                          ("secondary_color", [`String])]]);
                     ("card_issuing",
                      [`ObjectN
                         [("", [`Any]);
                          ("tos_acceptance",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]);
                               ("user_agent", [`Null;
                                               `Null])]])]]);
                     ("card_payments",
                      [`ObjectN
                         [("", [`Any]);
                          ("decline_on",
                           [`ObjectN
                              [("", [`Any]); ("avs_failure", [`Boolean]);
                               ("cvc_failure", [`Boolean])]]);
                          ("statement_descriptor_prefix", [`String]);
                          ("statement_descriptor_prefix_kana",
                           [`String;
                            `String]);
                          ("statement_descriptor_prefix_kanji",
                           [`String;
                            `String])]]);
                     ("invoices",
                      [`ObjectN
                         [("", [`Any]);
                          ("default_account_tax_ids",
                           [`Array [(`List (`Null))];
                            `String])]]);
                     ("payments",
                      [`ObjectN
                         [("", [`Any]); ("statement_descriptor", [`String]);
                          ("statement_descriptor_kana", [`String]);
                          ("statement_descriptor_kanji", [`String])]]);
                     ("payouts",
                      [`ObjectN
                         [("", [`Any]);
                          ("debit_negative_balances", [`Boolean]);
                          ("schedule",
                           [`ObjectN
                              [("", [`Any]); ("delay_days", [`Null;
                                                             `Null]);
                               ("interval", [`String]);
                               ("monthly_anchor", [`Integer]);
                               ("weekly_anchor", [`String])]]);
                          ("statement_descriptor", [`String])]]);
                     ("treasury",
                      [`ObjectN
                         [("", [`Any]);
                          ("tos_acceptance",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]);
                               ("user_agent", [`Null;
                                               `Null])]])]])]]);
                ("tos_acceptance",
                 [`ObjectN
                    [("", [`Any]); ("date", [`Integer]); ("ip", [`String]);
                     ("service_agreement", [`String]);
                     ("user_agent", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_a987b56548 _lvl ~op ~ctype (_x : t_a987b56548) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("reason", let _x = _x.reason in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_a987b56548) ~op ~ctype _x
  
  and _mk_body_to_t_a987b56548 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a987b56548) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("reason", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_54c2b31b26 _lvl ~op ~ctype (_x : t_54c2b31b26) =
    _body_of ~kind:(
      `ObjectN
        [("domain_name", let _x = _x.domain_name in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_54c2b31b26) ~op ~ctype _x
  
  and _mk_body_to_t_54c2b31b26 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_54c2b31b26) in _body_to
      ~kind:(`ObjectN
               [("domain_name", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_3d8fdeff43 _lvl ~op ~ctype (_x : t_3d8fdeff43) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_9197a61117 _x -> `ObjectN [("", [`String])]
                        | T_f67f76b751 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_3d8fdeff43) ~op ~ctype _x
  
  and _mk_body_to_t_3d8fdeff43 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3d8fdeff43) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_541238ad18 _lvl ~op ~ctype (_x : t_541238ad18) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("directive", match _x.directive with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_541238ad18) ~op ~ctype _x
  
  and _mk_body_to_t_541238ad18 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_541238ad18) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("directive", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_a9fb82352a _lvl ~op ~ctype (_x : t_a9fb82352a) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_a9fb82352a) ~op ~ctype _x
  
  and _mk_body_to_t_a9fb82352a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a9fb82352a) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_9825dbfdb8 _lvl ~op ~ctype (_x : t_9825dbfdb8) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("name", let _x = _x.name in [`String]);
         ("scope", let _x = _x.scope in
          [`ObjectN
             [("", [`Any]); ("type", let _x = _x.type_ in [`String]);
              ("user", match _x.user with | None -> []
               | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_9825dbfdb8) ~op ~ctype _x
  
  and _mk_body_to_t_9825dbfdb8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_9825dbfdb8) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("name", [`String]);
                ("scope",
                 [`ObjectN
                    [("", [`Any]); ("type", [`String]); ("user", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_188ad0945d _lvl ~op ~ctype (_x : t_188ad0945d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer]);
         ("name", let _x = _x.name in [`String]);
         ("payload", let _x = _x.payload in [`String]);
         ("scope", let _x = _x.scope in
          [`ObjectN
             [("", [`Any]); ("type", let _x = _x.type_ in [`String]);
              ("user", match _x.user with | None -> []
               | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_188ad0945d) ~op ~ctype _x
  
  and _mk_body_to_t_188ad0945d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_188ad0945d) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer]); ("name", [`String]);
                ("payload", [`String]);
                ("scope",
                 [`ObjectN
                    [("", [`Any]); ("type", [`String]); ("user", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_13c67f66b9 _lvl ~op ~ctype (_x : t_13c67f66b9) =
    _body_of ~kind:(
      `ObjectN
        [("cancel", match _x.cancel with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("identifier", match _x.identifier with
                            | None -> [] | Some _x -> [`String])]]);
         ("event_name", let _x = _x.event_name in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("type", let _x = _x.type_ in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_13c67f66b9) ~op ~ctype _x
  
  and _mk_body_to_t_13c67f66b9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_13c67f66b9) in _body_to
      ~kind:(`ObjectN
               [("cancel",
                 [`ObjectN [("", [`Any]); ("identifier", [`String])]]);
                ("event_name", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b253a05bdd _lvl ~op ~ctype (_x : t_b253a05bdd) =
    _body_of ~kind:(
      `ObjectN
        [("event_name", let _x = _x.event_name in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("identifier", match _x.identifier with | None -> []
          | Some _x -> [`String]);
         ("payload", let _x = _x.payload in [`ObjectN [("", [`String])]]);
         ("timestamp", match _x.timestamp with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_b253a05bdd) ~op ~ctype _x
  
  and _mk_body_to_t_b253a05bdd _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b253a05bdd) in _body_to
      ~kind:(`ObjectN
               [("event_name", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("identifier", [`String]);
                ("payload", [`ObjectN [("", [`String])]]);
                ("timestamp", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_348c84e9d9 _lvl ~op ~ctype (_x : t_348c84e9d9) =
    _body_of ~kind:(
      `ObjectN
        [("customer_mapping", match _x.customer_mapping with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("event_payload_key",
                            let _x = _x.event_payload_key in [`String]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("default_aggregation", let _x = _x.default_aggregation in
          [`ObjectN
             [("", [`Any]); ("formula", let _x = _x.formula in [`String])]]);
         ("display_name", let _x = _x.display_name in [`String]);
         ("event_name", let _x = _x.event_name in [`String]);
         ("event_time_window", match _x.event_time_window with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("value_settings", match _x.value_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("event_payload_key",
                            let _x = _x.event_payload_key in [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_348c84e9d9) ~op ~ctype _x
  
  and _mk_body_to_t_348c84e9d9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_348c84e9d9) in _body_to
      ~kind:(`ObjectN
               [("customer_mapping",
                 [`ObjectN
                    [("", [`Any]); ("event_payload_key", [`String]);
                     ("type", [`String])]]);
                ("default_aggregation",
                 [`ObjectN [("", [`Any]); ("formula", [`String])]]);
                ("display_name", [`String]); ("event_name", [`String]);
                ("event_time_window", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("value_settings",
                 [`ObjectN [("", [`Any]); ("event_payload_key", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_7daa9b70fa _lvl ~op ~ctype (_x : t_7daa9b70fa) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_7daa9b70fa) ~op ~ctype _x
  
  and _mk_body_to_t_7daa9b70fa _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_7daa9b70fa) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_137796d954 _lvl ~op ~ctype (_x : t_137796d954) =
    _body_of ~kind:(
      `ObjectN
        [("display_name", match _x.display_name with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_137796d954) ~op ~ctype _x
  
  and _mk_body_to_t_137796d954 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_137796d954) in _body_to
      ~kind:(`ObjectN
               [("display_name", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_42ec27db9e _lvl ~op ~ctype (_x : t_42ec27db9e) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_42ec27db9e) ~op ~ctype _x
  
  and _mk_body_to_t_42ec27db9e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_42ec27db9e) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_4d654213e3 _lvl ~op ~ctype (_x : t_4d654213e3) =
    _body_of ~kind:(
      `ObjectN
        [("business_profile", let _x = _x.business_profile in
          [`ObjectN
             [("", [`Any]);
              ("headline", match _x.headline with | None -> []
               | Some _x -> [match _x with
                             | String_ _x -> `String
                             | T_7c4808fe91 _x -> `String]);
              ("privacy_policy_url", match _x.privacy_policy_url with
               | None -> [] | Some _x -> [`String]);
              ("terms_of_service_url", match _x.terms_of_service_url with
               | None -> [] | Some _x -> [`String])]]);
         ("default_return_url", match _x.default_return_url with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_429e0a0f9b _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", let _x = _x.features in
          [`ObjectN
             [("", [`Any]);
              ("customer_update", match _x.customer_update with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("allowed_updates",
                                 match _x.allowed_updates with | None -> []
                                 | Some _x -> [match _x with
                                               | T_d5bf07b88c _x ->
                                                 `Array
                                                   ((List.map (fun (_x : t_405fb8a7c1) ->
                                                       `Singleton (`Null)) _x))
                                               | T_98e54a81c5 _x -> `String]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean])]]);
              ("invoice_history", match _x.invoice_history with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean])]]);
              ("payment_method_update", match _x.payment_method_update with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean])]]);
              ("subscription_cancel", match _x.subscription_cancel with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("cancellation_reason",
                                 match _x.cancellation_reason with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("enabled",
                                                   let _x = _x.enabled in
                                                   [`Boolean]);
                                                  ("options",
                                                   let _x = _x.options in
                                                   [match _x with
                                                    | T_d31f08d962 _x ->
                                                      `Null
                                                    | T_1859cba32a _x ->
                                                      `Null])]]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("mode", match _x.mode with | None -> []
                                 | Some _x -> [`String]);
                                ("proration_behavior",
                                 match _x.proration_behavior with
                                 | None -> [] | Some _x -> [`String])]]);
              ("subscription_update", match _x.subscription_update with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("default_allowed_updates",
                                 let _x = _x.default_allowed_updates in
                                 [match _x with
                                  | T_8f261135dd _x ->
                                    `Array
                                      ((List.map (fun (_x : t_113b56b518) ->
                                          `Singleton (`Null)) _x))
                                  | T_0c13b0dd35 _x -> `String]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean]);
                                ("products", let _x = _x.products in
                                 [match _x with
                                  | T_1e087e44c9 _x ->
                                    `Array
                                      ((List.map (fun (_x : t_12b5ef9873) ->
                                          `Singleton (`Null)) _x))
                                  | T_ee427d9328 _x -> `String]);
                                ("proration_behavior",
                                 match _x.proration_behavior with
                                 | None -> [] | Some _x -> [`String])]])]]);
         ("login_page", match _x.login_page with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_4d654213e3) ~op ~ctype _x
  
  and _mk_body_to_t_4d654213e3 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4d654213e3) in _body_to
      ~kind:(`ObjectN
               [("business_profile",
                 [`ObjectN
                    [("", [`Any]); ("headline", [`String;
                                                 `String]);
                     ("privacy_policy_url", [`String]);
                     ("terms_of_service_url", [`String])]]);
                ("default_return_url", [`String;
                                        `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("features",
                 [`ObjectN
                    [("", [`Any]);
                     ("customer_update",
                      [`ObjectN
                         [("", [`Any]);
                          ("allowed_updates",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("enabled", [`Boolean])]]);
                     ("invoice_history",
                      [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                     ("payment_method_update",
                      [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                     ("subscription_cancel",
                      [`ObjectN
                         [("", [`Any]);
                          ("cancellation_reason",
                           [`ObjectN
                              [("", [`Any]); ("enabled", [`Boolean]);
                               ("options", [`Null;
                                            `Null])]]);
                          ("enabled", [`Boolean]); ("mode", [`String]);
                          ("proration_behavior", [`String])]]);
                     ("subscription_update",
                      [`ObjectN
                         [("", [`Any]);
                          ("default_allowed_updates",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("enabled", [`Boolean]);
                          ("products", [`Array [(`List (`Null))];
                                        `String]);
                          ("proration_behavior", [`String])]])]]);
                ("login_page",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0c1fc2d27c _lvl ~op ~ctype (_x : t_0c1fc2d27c) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("business_profile", match _x.business_profile with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("headline", match _x.headline with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_3ebd4c001f _x -> `String]);
                           ("privacy_policy_url",
                            match _x.privacy_policy_url with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_b0301fb465 _x -> `String]);
                           ("terms_of_service_url",
                            match _x.terms_of_service_url with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_3e8fbedcb9 _x -> `String])]]);
         ("default_return_url", match _x.default_return_url with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_3630815c92 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", match _x.features with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("customer_update", match _x.customer_update with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("allowed_updates",
                                              match _x.allowed_updates with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_016b0104a3 _x ->
                                                              `Array
                                                                ((List.map (fun (_x : t_720f5d452e) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_86212bcce7 _x ->
                                                              `String]);
                                             ("enabled",
                                              match _x.enabled with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("invoice_history", match _x.invoice_history with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("enabled",
                                              let _x = _x.enabled in
                                              [`Boolean])]]);
                           ("payment_method_update",
                            match _x.payment_method_update with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("enabled",
                                              let _x = _x.enabled in
                                              [`Boolean])]]);
                           ("subscription_cancel",
                            match _x.subscription_cancel with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("cancellation_reason",
                                              match _x.cancellation_reason with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("enabled",
                                                                let _x = _x.enabled in
                                                                [`Boolean]);
                                                               ("options",
                                                                match _x.options with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | T_a710c4dda3 _x ->
                                                                  `Null
                                                                | T_3fb02f90ce _x ->
                                                                  `Null])]]);
                                             ("enabled",
                                              match _x.enabled with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("mode", match _x.mode with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("proration_behavior",
                                              match _x.proration_behavior with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("subscription_update",
                            match _x.subscription_update with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("default_allowed_updates",
                                              match _x.default_allowed_updates with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_d1972e5f21 _x ->
                                                              `Array
                                                                ((List.map (fun (_x : t_cc3601ee07) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_30ec26253f _x ->
                                                              `String]);
                                             ("enabled",
                                              match _x.enabled with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("products",
                                              match _x.products with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_6cfad96c9e _x ->
                                                              `Array
                                                                ((List.map (fun (_x : t_7d8f6a0cde) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_f4ae676e80 _x ->
                                                              `String]);
                                             ("proration_behavior",
                                              match _x.proration_behavior with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("login_page", match _x.login_page with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a631a21755 _x -> `ObjectN [("", [`String])]
                        | T_7b90df7f8a _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_0c1fc2d27c) ~op ~ctype _x
  
  and _mk_body_to_t_0c1fc2d27c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0c1fc2d27c) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("business_profile",
                 [`ObjectN
                    [("", [`Any]); ("headline", [`String;
                                                 `String]);
                     ("privacy_policy_url", [`String;
                                             `String]);
                     ("terms_of_service_url", [`String;
                                               `String])]]);
                ("default_return_url", [`String;
                                        `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("features",
                 [`ObjectN
                    [("", [`Any]);
                     ("customer_update",
                      [`ObjectN
                         [("", [`Any]);
                          ("allowed_updates",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("enabled", [`Boolean])]]);
                     ("invoice_history",
                      [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                     ("payment_method_update",
                      [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                     ("subscription_cancel",
                      [`ObjectN
                         [("", [`Any]);
                          ("cancellation_reason",
                           [`ObjectN
                              [("", [`Any]); ("enabled", [`Boolean]);
                               ("options", [`Null;
                                            `Null])]]);
                          ("enabled", [`Boolean]); ("mode", [`String]);
                          ("proration_behavior", [`String])]]);
                     ("subscription_update",
                      [`ObjectN
                         [("", [`Any]);
                          ("default_allowed_updates",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("enabled", [`Boolean]);
                          ("products", [`Array [(`List (`Null))];
                                        `String]);
                          ("proration_behavior", [`String])]])]]);
                ("login_page",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_8dad7d97a8 _lvl ~op ~ctype (_x : t_8dad7d97a8) =
    _body_of ~kind:(
      `ObjectN
        [("configuration", match _x.configuration with | None -> []
          | Some _x -> [`String]);
         ("customer", let _x = _x.customer in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("flow_data", match _x.flow_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("after_completion",
                            match _x.after_completion with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("hosted_confirmation",
                                              match _x.hosted_confirmation with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("custom_message",
                                                                match _x.custom_message with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("redirect",
                                              match _x.redirect with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("return_url",
                                                                let _x = _x.return_url in
                                                                [`String])]]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]]);
                           ("subscription_cancel",
                            match _x.subscription_cancel with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("retention",
                                              match _x.retention with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("coupon_offer",
                                                                let _x = _x.coupon_offer in
                                                                [`ObjectN
                                                                   [("",
                                                                    [`Null]);
                                                                    ("coupon",
                                                                    let _x = _x.coupon in
                                                                    [`Null])]]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]]);
                                             ("subscription",
                                              let _x = _x.subscription in
                                              [`String])]]);
                           ("subscription_update",
                            match _x.subscription_update with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("subscription",
                                              let _x = _x.subscription in
                                              [`String])]]);
                           ("subscription_update_confirm",
                            match _x.subscription_update_confirm with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("discounts",
                                              match _x.discounts with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_fa97fb4d7c) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))]);
                                             ("items", let _x = _x.items in
                                              [`Array
                                                 ((List.map (fun (_x : t_3426b3f59f) ->
                                                     `Singleton (`Null)) _x))]);
                                             ("subscription",
                                              let _x = _x.subscription in
                                              [`String])]]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("locale", match _x.locale with | None -> [] | Some _x -> [`String]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [`String]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_8dad7d97a8) ~op ~ctype _x
  
  and _mk_body_to_t_8dad7d97a8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_8dad7d97a8) in _body_to
      ~kind:(`ObjectN
               [("configuration", [`String]); ("customer", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("flow_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("after_completion",
                      [`ObjectN
                         [("", [`Any]);
                          ("hosted_confirmation",
                           [`ObjectN
                              [("", [`Any]); ("custom_message", [`String])]]);
                          ("redirect",
                           [`ObjectN
                              [("", [`Any]); ("return_url", [`String])]]);
                          ("type", [`String])]]);
                     ("subscription_cancel",
                      [`ObjectN
                         [("", [`Any]);
                          ("retention",
                           [`ObjectN
                              [("", [`Any]);
                               ("coupon_offer",
                                [`ObjectN
                                   [("", [`Null]); ("coupon", [`Null])]]);
                               ("type", [`String])]]);
                          ("subscription", [`String])]]);
                     ("subscription_update",
                      [`ObjectN [("", [`Any]); ("subscription", [`String])]]);
                     ("subscription_update_confirm",
                      [`ObjectN
                         [("", [`Any]);
                          ("discounts", [`Array [(`List (`Null))]]);
                          ("items", [`Array [(`List (`Null))]]);
                          ("subscription", [`String])]]);
                     ("type", [`String])]]);
                ("locale", [`String]); ("on_behalf_of", [`String]);
                ("return_url", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_fa006cbf88 _lvl ~op ~ctype (_x : t_fa006cbf88) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("application_fee", match _x.application_fee with | None -> []
          | Some _x -> [`Integer]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("capture", match _x.capture with | None -> []
          | Some _x -> [`Boolean]);
         ("card", match _x.card with | None -> []
          | Some _x -> [match _x with
                        | T_69e7250561 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address_city", match _x.address_city with
                              | None -> [] | Some _x -> [`String]);
                             ("address_country",
                              match _x.address_country with | None -> []
                              | Some _x -> [`String]);
                             ("address_line1", match _x.address_line1 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_line2", match _x.address_line2 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_state", match _x.address_state with
                              | None -> [] | Some _x -> [`String]);
                             ("address_zip", match _x.address_zip with
                              | None -> [] | Some _x -> [`String]);
                             ("cvc", match _x.cvc with | None -> []
                              | Some _x -> [`String]);
                             ("exp_month", let _x = _x.exp_month in
                              [`Integer]);
                             ("exp_year", let _x = _x.exp_year in [`Integer]);
                             ("metadata", match _x.metadata with | None -> []
                              | Some _x -> [`ObjectN [("", [`String])]]);
                             ("name", match _x.name with | None -> []
                              | Some _x -> [`String]);
                             ("number", let _x = _x.number in [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("destination", match _x.destination with | None -> []
          | Some _x -> [match _x with
                        | T_40a5609725 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account", let _x = _x.account in [`String]);
                             ("amount", match _x.amount with | None -> []
                              | Some _x -> [`Integer])]
                        | String_ _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_8ffe0a3e18 _x -> `ObjectN [("", [`String])]
                        | T_102482b4ef _x -> `String]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [`String]);
         ("radar_options", match _x.radar_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("session", match _x.session with | None -> []
                            | Some _x -> [`String])]]);
         ("receipt_email", match _x.receipt_email with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", match _x.city with | None -> []
                                 | Some _x -> [`String]);
                                ("country", match _x.country with
                                 | None -> [] | Some _x -> [`String]);
                                ("line1", match _x.line1 with | None -> []
                                 | Some _x -> [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", match _x.postal_code with
                                 | None -> [] | Some _x -> [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]]);
                           ("carrier", match _x.carrier with | None -> []
                            | Some _x -> [`String]);
                           ("name", let _x = _x.name in [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("tracking_number", match _x.tracking_number with
                            | None -> [] | Some _x -> [`String])]]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("statement_descriptor_suffix",
          match _x.statement_descriptor_suffix with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer]);
                           ("destination", let _x = _x.destination in
                            [`String])]]);
         ("transfer_group", match _x.transfer_group with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_fa006cbf88) ~op ~ctype _x
  
  and _mk_body_to_t_fa006cbf88 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fa006cbf88) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("application_fee", [`Integer]);
                ("application_fee_amount", [`Integer]);
                ("capture", [`Boolean]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("address_city", [`String]);
                     ("address_country", [`String]);
                     ("address_line1", [`String]);
                     ("address_line2", [`String]);
                     ("address_state", [`String]);
                     ("address_zip", [`String]); ("cvc", [`String]);
                     ("exp_month", [`Integer]); ("exp_year", [`Integer]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("name", [`String]); ("number", [`String]);
                     ("object", [`String])];
                  `String]);
                ("currency", [`String]); ("customer", [`String]);
                ("description", [`String]);
                ("destination",
                 [`ObjectN
                    [("", [`Any]); ("account", [`String]);
                     ("amount", [`Integer])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("on_behalf_of", [`String]);
                ("radar_options",
                 [`ObjectN [("", [`Any]); ("session", [`String])]]);
                ("receipt_email", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("carrier", [`String]); ("name", [`String]);
                     ("phone", [`String]); ("tracking_number", [`String])]]);
                ("source", [`String]); ("statement_descriptor", [`String]);
                ("statement_descriptor_suffix", [`String]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("destination", [`String])]]);
                ("transfer_group", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2ddc9f381c _lvl ~op ~ctype (_x : t_2ddc9f381c) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("application_fee", match _x.application_fee with | None -> []
          | Some _x -> [`Integer]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("receipt_email", match _x.receipt_email with | None -> []
          | Some _x -> [`String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("statement_descriptor_suffix",
          match _x.statement_descriptor_suffix with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer])]]);
         ("transfer_group", match _x.transfer_group with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_2ddc9f381c) ~op ~ctype _x
  
  and _mk_body_to_t_2ddc9f381c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2ddc9f381c) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("application_fee", [`Integer]);
                ("application_fee_amount", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("receipt_email", [`String]);
                ("statement_descriptor", [`String]);
                ("statement_descriptor_suffix", [`String]);
                ("transfer_data",
                 [`ObjectN [("", [`Any]); ("amount", [`Integer])]]);
                ("transfer_group", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_124e0f7625 _lvl ~op ~ctype (_x : t_124e0f7625) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_124e0f7625) ~op ~ctype _x
  
  and _mk_body_to_t_124e0f7625 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_124e0f7625) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_99d11e1b03 _lvl ~op ~ctype (_x : t_99d11e1b03) =
    _body_of ~kind:(
      `ObjectN
        [("evidence", match _x.evidence with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("access_activity_log",
                            match _x.access_activity_log with | None -> []
                            | Some _x -> [`String]);
                           ("billing_address", match _x.billing_address with
                            | None -> [] | Some _x -> [`String]);
                           ("cancellation_policy",
                            match _x.cancellation_policy with | None -> []
                            | Some _x -> [`String]);
                           ("cancellation_policy_disclosure",
                            match _x.cancellation_policy_disclosure with
                            | None -> [] | Some _x -> [`String]);
                           ("cancellation_rebuttal",
                            match _x.cancellation_rebuttal with | None -> []
                            | Some _x -> [`String]);
                           ("customer_communication",
                            match _x.customer_communication with | None -> []
                            | Some _x -> [`String]);
                           ("customer_email_address",
                            match _x.customer_email_address with | None -> []
                            | Some _x -> [`String]);
                           ("customer_name", match _x.customer_name with
                            | None -> [] | Some _x -> [`String]);
                           ("customer_purchase_ip",
                            match _x.customer_purchase_ip with | None -> []
                            | Some _x -> [`String]);
                           ("customer_signature",
                            match _x.customer_signature with | None -> []
                            | Some _x -> [`String]);
                           ("duplicate_charge_documentation",
                            match _x.duplicate_charge_documentation with
                            | None -> [] | Some _x -> [`String]);
                           ("duplicate_charge_explanation",
                            match _x.duplicate_charge_explanation with
                            | None -> [] | Some _x -> [`String]);
                           ("duplicate_charge_id",
                            match _x.duplicate_charge_id with | None -> []
                            | Some _x -> [`String]);
                           ("product_description",
                            match _x.product_description with | None -> []
                            | Some _x -> [`String]);
                           ("receipt", match _x.receipt with | None -> []
                            | Some _x -> [`String]);
                           ("refund_policy", match _x.refund_policy with
                            | None -> [] | Some _x -> [`String]);
                           ("refund_policy_disclosure",
                            match _x.refund_policy_disclosure with
                            | None -> [] | Some _x -> [`String]);
                           ("refund_refusal_explanation",
                            match _x.refund_refusal_explanation with
                            | None -> [] | Some _x -> [`String]);
                           ("service_date", match _x.service_date with
                            | None -> [] | Some _x -> [`String]);
                           ("service_documentation",
                            match _x.service_documentation with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_address",
                            match _x.shipping_address with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_carrier",
                            match _x.shipping_carrier with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_date", match _x.shipping_date with
                            | None -> [] | Some _x -> [`String]);
                           ("shipping_documentation",
                            match _x.shipping_documentation with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_tracking_number",
                            match _x.shipping_tracking_number with
                            | None -> [] | Some _x -> [`String]);
                           ("uncategorized_file",
                            match _x.uncategorized_file with | None -> []
                            | Some _x -> [`String]);
                           ("uncategorized_text",
                            match _x.uncategorized_text with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_b9ed102c48 _x -> `ObjectN [("", [`String])]
                        | T_54e498062e _x -> `String]);
         ("submit", match _x.submit with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_99d11e1b03) ~op ~ctype _x
  
  and _mk_body_to_t_99d11e1b03 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_99d11e1b03) in _body_to
      ~kind:(`ObjectN
               [("evidence",
                 [`ObjectN
                    [("", [`Any]); ("access_activity_log", [`String]);
                     ("billing_address", [`String]);
                     ("cancellation_policy", [`String]);
                     ("cancellation_policy_disclosure", [`String]);
                     ("cancellation_rebuttal", [`String]);
                     ("customer_communication", [`String]);
                     ("customer_email_address", [`String]);
                     ("customer_name", [`String]);
                     ("customer_purchase_ip", [`String]);
                     ("customer_signature", [`String]);
                     ("duplicate_charge_documentation", [`String]);
                     ("duplicate_charge_explanation", [`String]);
                     ("duplicate_charge_id", [`String]);
                     ("product_description", [`String]);
                     ("receipt", [`String]); ("refund_policy", [`String]);
                     ("refund_policy_disclosure", [`String]);
                     ("refund_refusal_explanation", [`String]);
                     ("service_date", [`String]);
                     ("service_documentation", [`String]);
                     ("shipping_address", [`String]);
                     ("shipping_carrier", [`String]);
                     ("shipping_date", [`String]);
                     ("shipping_documentation", [`String]);
                     ("shipping_tracking_number", [`String]);
                     ("uncategorized_file", [`String]);
                     ("uncategorized_text", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("submit", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_cefa9c09fc _lvl ~op ~ctype (_x : t_cefa9c09fc) =
    _body_of ~kind:(
      `ObjectN
        [("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("fraud_details", match _x.fraud_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("user_report", let _x = _x.user_report in
                            [`String])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_98759e5f42 _x -> `ObjectN [("", [`String])]
                        | T_aee992f877 _x -> `String]);
         ("receipt_email", match _x.receipt_email with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", match _x.city with | None -> []
                                 | Some _x -> [`String]);
                                ("country", match _x.country with
                                 | None -> [] | Some _x -> [`String]);
                                ("line1", match _x.line1 with | None -> []
                                 | Some _x -> [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", match _x.postal_code with
                                 | None -> [] | Some _x -> [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]]);
                           ("carrier", match _x.carrier with | None -> []
                            | Some _x -> [`String]);
                           ("name", let _x = _x.name in [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("tracking_number", match _x.tracking_number with
                            | None -> [] | Some _x -> [`String])]]);
         ("transfer_group", match _x.transfer_group with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_cefa9c09fc) ~op ~ctype _x
  
  and _mk_body_to_t_cefa9c09fc _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_cefa9c09fc) in _body_to
      ~kind:(`ObjectN
               [("customer", [`String]); ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("fraud_details",
                 [`ObjectN [("", [`Any]); ("user_report", [`String])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("receipt_email", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("carrier", [`String]); ("name", [`String]);
                     ("phone", [`String]); ("tracking_number", [`String])]]);
                ("transfer_group", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_4a6ca66503 _lvl ~op ~ctype (_x : t_4a6ca66503) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("instructions_email", match _x.instructions_email with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_6ded1e6388 _x -> `ObjectN [("", [`String])]
                        | T_86490cc418 _x -> `String]);
         ("payment_intent", match _x.payment_intent with | None -> []
          | Some _x -> [`String]);
         ("reason", match _x.reason with | None -> [] | Some _x -> [`String]);
         ("refund_application_fee", match _x.refund_application_fee with
          | None -> [] | Some _x -> [`Boolean]);
         ("reverse_transfer", match _x.reverse_transfer with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_4a6ca66503) ~op ~ctype _x
  
  and _mk_body_to_t_4a6ca66503 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4a6ca66503) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("instructions_email", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("payment_intent", [`String]); ("reason", [`String]);
                ("refund_application_fee", [`Boolean]);
                ("reverse_transfer", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_d2b6d7f2eb _lvl ~op ~ctype (_x : t_d2b6d7f2eb) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("instructions_email", match _x.instructions_email with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_73899f54f3 _x -> `ObjectN [("", [`String])]
                        | T_d5013c5e09 _x -> `String]);
         ("origin", match _x.origin with | None -> [] | Some _x -> [`String]);
         ("payment_intent", match _x.payment_intent with | None -> []
          | Some _x -> [`String]);
         ("reason", match _x.reason with | None -> [] | Some _x -> [`String]);
         ("refund_application_fee", match _x.refund_application_fee with
          | None -> [] | Some _x -> [`Boolean]);
         ("reverse_transfer", match _x.reverse_transfer with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_d2b6d7f2eb) ~op ~ctype _x
  
  and _mk_body_to_t_d2b6d7f2eb _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d2b6d7f2eb) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("customer", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("instructions_email", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("origin", [`String]); ("payment_intent", [`String]);
                ("reason", [`String]);
                ("refund_application_fee", [`Boolean]);
                ("reverse_transfer", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_159ef19a67 _lvl ~op ~ctype (_x : t_159ef19a67) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_daeb9dac73 _x -> `ObjectN [("", [`String])]
                        | T_68c84035a2 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_159ef19a67) ~op ~ctype _x
  
  and _mk_body_to_t_159ef19a67 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_159ef19a67) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_6b60a3205c _lvl ~op ~ctype (_x : t_6b60a3205c) =
    _body_of ~kind:(
      `ObjectN
        [("after_expiration", match _x.after_expiration with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("recovery", match _x.recovery with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("allow_promotion_codes",
                                              match _x.allow_promotion_codes with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("enabled",
                                              let _x = _x.enabled in
                                              [`Boolean])]])]]);
         ("allow_promotion_codes", match _x.allow_promotion_codes with
          | None -> [] | Some _x -> [`Boolean]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("billing_address_collection",
          match _x.billing_address_collection with | None -> []
          | Some _x -> [`String]);
         ("cancel_url", match _x.cancel_url with | None -> []
          | Some _x -> [`String]);
         ("client_reference_id", match _x.client_reference_id with
          | None -> [] | Some _x -> [`String]);
         ("consent_collection", match _x.consent_collection with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("payment_method_reuse_agreement",
                            match _x.payment_method_reuse_agreement with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("position",
                                              let _x = _x.position in
                                              [`String])]]);
                           ("promotions", match _x.promotions with
                            | None -> [] | Some _x -> [`String]);
                           ("terms_of_service",
                            match _x.terms_of_service with | None -> []
                            | Some _x -> [`String])]]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("custom_fields", match _x.custom_fields with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_857fc811b6) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("dropdown", match _x.dropdown with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("options",
                                                       let _x = _x.options in
                                                       [`Null])]]);
                                    ("key", let _x = _x.key in [`String]);
                                    ("label", let _x = _x.label in
                                     [`ObjectN
                                        [("", [`Null]);
                                         ("custom", let _x = _x.custom in
                                          [`Null]);
                                         ("type", let _x = _x.type_ in
                                          [`Null])]]);
                                    ("numeric", match _x.numeric with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("maximum_length",
                                                       match _x.maximum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("minimum_length",
                                                       match _x.minimum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("optional", match _x.optional with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("text", match _x.text with | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("maximum_length",
                                                       match _x.maximum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("minimum_length",
                                                       match _x.minimum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("type", let _x = _x.type_ in [`String])]))
                              _x))]);
         ("custom_text", match _x.custom_text with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("after_submit", match _x.after_submit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_aa01dbce7a _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_51ead8b793 _x -> `String]);
                           ("shipping_address",
                            match _x.shipping_address with | None -> []
                            | Some _x -> [match _x with
                                          | T_97acd6edb7 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_cfd12ab2e5 _x -> `String]);
                           ("submit", match _x.submit with | None -> []
                            | Some _x -> [match _x with
                                          | T_cb5d0ba942 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_0ddf3f875f _x -> `String]);
                           ("terms_of_service_acceptance",
                            match _x.terms_of_service_acceptance with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_11362ad1e9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_b763c9e2f7 _x -> `String])]]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("customer_creation", match _x.customer_creation with | None -> []
          | Some _x -> [`String]);
         ("customer_email", match _x.customer_email with | None -> []
          | Some _x -> [`String]);
         ("customer_update", match _x.customer_update with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("shipping", match _x.shipping with | None -> []
                            | Some _x -> [`String])]]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_62194be3b0) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("coupon", match _x.coupon with
                                     | None -> [] | Some _x -> [`String]);
                                    ("promotion_code",
                                     match _x.promotion_code with
                                     | None -> [] | Some _x -> [`String])]))
                              _x))]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer]);
         ("invoice_creation", match _x.invoice_creation with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("invoice_data", match _x.invoice_data with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_tax_ids",
                                              match _x.account_tax_ids with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | StringList _x ->
                                                              `Array
                                                                ((List.map (fun (_x : string) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_c53b445da6 _x ->
                                                              `String]);
                                             ("custom_fields",
                                              match _x.custom_fields with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_d82c2dfb32 _x ->
                                                              `Array
                                                                ((List.map (fun (_x : t_ca7fbe8f57) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_92e00a9219 _x ->
                                                              `String]);
                                             ("description",
                                              match _x.description with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("footer", match _x.footer with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]]);
                                             ("metadata",
                                              match _x.metadata with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("",
                                                                [`String])]]);
                                             ("rendering_options",
                                              match _x.rendering_options with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_2382b4d556 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("amount_tax_display",
                                                                  match _x.amount_tax_display with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_46e4329215 _x ->
                                                              `String])]])]]);
         ("line_items", match _x.line_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_4b1c889018) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("adjustable_quantity",
                                     match _x.adjustable_quantity with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("enabled",
                                                       let _x = _x.enabled in
                                                       [`Null]);
                                                      ("maximum",
                                                       match _x.maximum with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("minimum",
                                                       match _x.minimum with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("dynamic_tax_rates",
                                     match _x.dynamic_tax_rates with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : string) ->
                                                         `Singleton (`Null))
                                                         _x))]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       match _x.product with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("product_data",
                                                       match _x.product_data with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("recurring",
                                                       match _x.recurring with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : string) ->
                                                         `Singleton (`Null))
                                                         _x))])])) _x))]);
         ("locale", match _x.locale with | None -> [] | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("mode", match _x.mode with | None -> [] | Some _x -> [`String]);
         ("payment_intent_data", match _x.payment_intent_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("application_fee_amount",
                            match _x.application_fee_amount with | None -> []
                            | Some _x -> [`Integer]);
                           ("capture_method", match _x.capture_method with
                            | None -> [] | Some _x -> [`String]);
                           ("description", match _x.description with
                            | None -> [] | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("on_behalf_of", match _x.on_behalf_of with
                            | None -> [] | Some _x -> [`String]);
                           ("receipt_email", match _x.receipt_email with
                            | None -> [] | Some _x -> [`String]);
                           ("setup_future_usage",
                            match _x.setup_future_usage with | None -> []
                            | Some _x -> [`String]);
                           ("shipping", match _x.shipping with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              let _x = _x.address in
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("city", match _x.city with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("country",
                                                   match _x.country with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("line1",
                                                   let _x = _x.line1 in
                                                   [`String]);
                                                  ("line2",
                                                   match _x.line2 with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("postal_code",
                                                   match _x.postal_code with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("state",
                                                   match _x.state with
                                                   | None -> []
                                                   | Some _x -> [`String])]]);
                                             ("carrier",
                                              match _x.carrier with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("name", let _x = _x.name in
                                              [`String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("tracking_number",
                                              match _x.tracking_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("statement_descriptor",
                            match _x.statement_descriptor with | None -> []
                            | Some _x -> [`String]);
                           ("statement_descriptor_suffix",
                            match _x.statement_descriptor_suffix with
                            | None -> [] | Some _x -> [`String]);
                           ("transfer_data", match _x.transfer_data with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("amount", match _x.amount with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("destination",
                                              let _x = _x.destination in
                                              [`String])]]);
                           ("transfer_group", match _x.transfer_group with
                            | None -> [] | Some _x -> [`String])]]);
         ("payment_method_collection",
          match _x.payment_method_collection with | None -> []
          | Some _x -> [`String]);
         ("payment_method_configuration",
          match _x.payment_method_configuration with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String])]]);
         ("payment_method_options", match _x.payment_method_options with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("currency",
                                              match _x.currency with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("custom_mandate_url",
                                                                match _x.custom_mandate_url with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_832c5c3a78 _x ->
                                                                  `Null]);
                                                               ("default_for",
                                                                match _x.default_for with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_bf26824317) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("interval_description",
                                                                match _x.interval_description with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("payment_schedule",
                                                                match _x.payment_schedule with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("transaction_type",
                                                                match _x.transaction_type with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("expires_after_days",
                                              match _x.expires_after_days with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("card", match _x.card with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("installments",
                                              match _x.installments with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("enabled",
                                                                match _x.enabled with
                                                                | None -> []
                                                                | Some _x -> [`Boolean])]]);
                                             ("request_three_d_secure",
                                              match _x.request_three_d_secure with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_suffix_kana",
                                              match _x.statement_descriptor_suffix_kana with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("statement_descriptor_suffix_kanji",
                                              match _x.statement_descriptor_suffix_kanji with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank_transfer",
                                              match _x.bank_transfer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("eu_bank_transfer",
                                                                match _x.eu_bank_transfer with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("country",
                                                                    let _x = _x.country in
                                                                    [`Null])]]);
                                                               ("requested_address_types",
                                                                match _x.requested_address_types with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_e6fe6908e6) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]]);
                                             ("funding_type",
                                              match _x.funding_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("expires_after_days",
                                              match _x.expires_after_days with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("expires_after_days",
                                              match _x.expires_after_days with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("tos_shown_and_accepted",
                                              match _x.tos_shown_and_accepted with
                                              | None -> []
                                              | Some _x -> [`Boolean])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("capture_method",
                                              match _x.capture_method with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("preferred_locale",
                                              match _x.preferred_locale with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("reference",
                                              match _x.reference with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("risk_correlation_id",
                                              match _x.risk_correlation_id with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("expires_after_seconds",
                                              match _x.expires_after_seconds with
                                              | None -> []
                                              | Some _x -> [`Integer])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("reference",
                                              match _x.reference with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("financial_connections",
                                              match _x.financial_connections with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("permissions",
                                                                match _x.permissions with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_19872e4190) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("prefetch",
                                                                match _x.prefetch with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_033c2966ea) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("app_id", match _x.app_id with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("client", let _x = _x.client in
                                              [`String]);
                                             ("setup_future_usage",
                                              match _x.setup_future_usage with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_50ec74e278) ->
                              `Singleton (`String)) _x))]);
         ("phone_number_collection", match _x.phone_number_collection with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("redirect_on_completion", match _x.redirect_on_completion with
          | None -> [] | Some _x -> [`String]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("saved_payment_method_options",
          match _x.saved_payment_method_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allow_redisplay_filters",
                            match _x.allow_redisplay_filters with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_177e086962) ->
                                                `Singleton (`String)) _x))]);
                           ("payment_method_save",
                            match _x.payment_method_save with | None -> []
                            | Some _x -> [`String])]]);
         ("setup_intent_data", match _x.setup_intent_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("description", match _x.description with
                            | None -> [] | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("on_behalf_of", match _x.on_behalf_of with
                            | None -> [] | Some _x -> [`String])]]);
         ("shipping_address_collection",
          match _x.shipping_address_collection with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allowed_countries",
                            let _x = _x.allowed_countries in
                            [`Array
                               ((List.map (fun (_x : t_32dae42a17) ->
                                   `Singleton (`String)) _x))])]]);
         ("shipping_options", match _x.shipping_options with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_6882b27d17) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("shipping_rate",
                                     match _x.shipping_rate with | None -> []
                                     | Some _x -> [`String]);
                                    ("shipping_rate_data",
                                     match _x.shipping_rate_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("delivery_estimate",
                                                       match _x.delivery_estimate with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("display_name",
                                                       let _x = _x.display_name in
                                                       [`Null]);
                                                      ("fixed_amount",
                                                       match _x.fixed_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("metadata",
                                                       match _x.metadata with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("tax_code",
                                                       match _x.tax_code with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("type",
                                                       match _x.type_ with
                                                       | None -> []
                                                       | Some _x -> [`Null])]])]))
                              _x))]);
         ("submit_type", match _x.submit_type with | None -> []
          | Some _x -> [`String]);
         ("subscription_data", match _x.subscription_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("application_fee_percent",
                            match _x.application_fee_percent with
                            | None -> [] | Some _x -> [`Number]);
                           ("billing_cycle_anchor",
                            match _x.billing_cycle_anchor with | None -> []
                            | Some _x -> [`Integer]);
                           ("default_tax_rates",
                            match _x.default_tax_rates with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("description", match _x.description with
                            | None -> [] | Some _x -> [`String]);
                           ("invoice_settings",
                            match _x.invoice_settings with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("on_behalf_of", match _x.on_behalf_of with
                            | None -> [] | Some _x -> [`String]);
                           ("proration_behavior",
                            match _x.proration_behavior with | None -> []
                            | Some _x -> [`String]);
                           ("transfer_data", match _x.transfer_data with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("amount_percent",
                                              match _x.amount_percent with
                                              | None -> []
                                              | Some _x -> [`Number]);
                                             ("destination",
                                              let _x = _x.destination in
                                              [`String])]]);
                           ("trial_end", match _x.trial_end with | None -> []
                            | Some _x -> [`Integer]);
                           ("trial_period_days",
                            match _x.trial_period_days with | None -> []
                            | Some _x -> [`Integer]);
                           ("trial_settings", match _x.trial_settings with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("end_behavior",
                                              let _x = _x.end_behavior in
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("missing_payment_method",
                                                   let _x = _x.missing_payment_method in
                                                   [`String])]])]])]]);
         ("success_url", match _x.success_url with | None -> []
          | Some _x -> [`String]);
         ("tax_id_collection", match _x.tax_id_collection with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("ui_mode", match _x.ui_mode with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_6b60a3205c) ~op ~ctype _x
  
  and _mk_body_to_t_6b60a3205c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6b60a3205c) in _body_to
      ~kind:(`ObjectN
               [("after_expiration",
                 [`ObjectN
                    [("", [`Any]);
                     ("recovery",
                      [`ObjectN
                         [("", [`Any]);
                          ("allow_promotion_codes", [`Boolean]);
                          ("enabled", [`Boolean])]])]]);
                ("allow_promotion_codes", [`Boolean]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("billing_address_collection", [`String]);
                ("cancel_url", [`String]);
                ("client_reference_id", [`String]);
                ("consent_collection",
                 [`ObjectN
                    [("", [`Any]);
                     ("payment_method_reuse_agreement",
                      [`ObjectN [("", [`Any]); ("position", [`String])]]);
                     ("promotions", [`String]);
                     ("terms_of_service", [`String])]]);
                ("currency", [`String]);
                ("custom_fields",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("dropdown",
                             [`ObjectN [("", [`Null]); ("options", [`Null])]]);
                            ("key", [`String]);
                            ("label",
                             [`ObjectN
                                [("", [`Null]); ("custom", [`Null]);
                                 ("type", [`Null])]]);
                            ("numeric",
                             [`ObjectN
                                [("", [`Null]); ("maximum_length", [`Null]);
                                 ("minimum_length", [`Null])]]);
                            ("optional", [`Boolean]);
                            ("text",
                             [`ObjectN
                                [("", [`Null]); ("maximum_length", [`Null]);
                                 ("minimum_length", [`Null])]]);
                            ("type", [`String])]))]]);
                ("custom_text",
                 [`ObjectN
                    [("", [`Any]);
                     ("after_submit",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("shipping_address",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("submit",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("terms_of_service_acceptance",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String])]]);
                ("customer", [`String]); ("customer_creation", [`String]);
                ("customer_email", [`String]);
                ("customer_update",
                 [`ObjectN
                    [("", [`Any]); ("address", [`String]);
                     ("name", [`String]); ("shipping", [`String])]]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("coupon", [`String]);
                            ("promotion_code", [`String])]))]]);
                ("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer]);
                ("invoice_creation",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("invoice_data",
                      [`ObjectN
                         [("", [`Any]);
                          ("account_tax_ids",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("custom_fields",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("description", [`String]); ("footer", [`String]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]]);
                          ("metadata", [`ObjectN [("", [`String])]]);
                          ("rendering_options",
                           [`ObjectN
                              [("", [`Null]);
                               ("amount_tax_display", [`Null])];
                            `String])]])]]);
                ("line_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("adjustable_quantity",
                             [`ObjectN
                                [("", [`Null]); ("enabled", [`Null]);
                                 ("maximum", [`Null]); ("minimum", [`Null])]]);
                            ("dynamic_tax_rates", [`Array [(`List (`Null))]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("product_data", [`Null]);
                                 ("recurring", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Array [(`List (`Null))]])]))]]);
                ("locale", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("mode", [`String]);
                ("payment_intent_data",
                 [`ObjectN
                    [("", [`Any]); ("application_fee_amount", [`Integer]);
                     ("capture_method", [`String]);
                     ("description", [`String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("on_behalf_of", [`String]);
                     ("receipt_email", [`String]);
                     ("setup_future_usage", [`String]);
                     ("shipping",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String])]]);
                          ("carrier", [`String]); ("name", [`String]);
                          ("phone", [`String]);
                          ("tracking_number", [`String])]]);
                     ("statement_descriptor", [`String]);
                     ("statement_descriptor_suffix", [`String]);
                     ("transfer_data",
                      [`ObjectN
                         [("", [`Any]); ("amount", [`Integer]);
                          ("destination", [`String])]]);
                     ("transfer_group", [`String])]]);
                ("payment_method_collection", [`String]);
                ("payment_method_configuration", [`String]);
                ("payment_method_data",
                 [`ObjectN [("", [`Any]); ("allow_redisplay", [`String])]]);
                ("payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("currency", [`String]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]);
                               ("custom_mandate_url", [`Null;
                                                       `Null]);
                               ("default_for", [`Array [(`List (`Null))]]);
                               ("interval_description", [`String]);
                               ("payment_schedule", [`String]);
                               ("transaction_type", [`String])]]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])]]);
                     ("affirm",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("afterpay_clearpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("alipay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("amazon_pay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("bancontact",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("boleto",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])]]);
                     ("card",
                      [`ObjectN
                         [("", [`Any]);
                          ("installments",
                           [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                          ("request_three_d_secure", [`String]);
                          ("setup_future_usage", [`String]);
                          ("statement_descriptor_suffix_kana", [`String]);
                          ("statement_descriptor_suffix_kanji", [`String])]]);
                     ("cashapp",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("customer_balance",
                      [`ObjectN
                         [("", [`Any]);
                          ("bank_transfer",
                           [`ObjectN
                              [("", [`Any]);
                               ("eu_bank_transfer",
                                [`ObjectN
                                   [("", [`Null]); ("country", [`Null])]]);
                               ("requested_address_types",
                                [`Array [(`List (`Null))]]);
                               ("type", [`String])]]);
                          ("funding_type", [`String]);
                          ("setup_future_usage", [`String])]]);
                     ("eps",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("fpx",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("giropay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("grabpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("ideal",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("konbini",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])]]);
                     ("link",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("mobilepay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("oxxo",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])]]);
                     ("p24",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String]);
                          ("tos_shown_and_accepted", [`Boolean])]]);
                     ("paynow",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("paypal",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("reference", [`String]);
                          ("risk_correlation_id", [`String]);
                          ("setup_future_usage", [`String])]]);
                     ("pix",
                      [`ObjectN
                         [("", [`Any]);
                          ("expires_after_seconds", [`Integer])]]);
                     ("revolut_pay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("sepa_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("sofort",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])]]);
                     ("swish",
                      [`ObjectN [("", [`Any]); ("reference", [`String])]]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]);
                          ("financial_connections",
                           [`ObjectN
                              [("", [`Any]);
                               ("permissions", [`Array [(`List (`Null))]]);
                               ("prefetch", [`Array [(`List (`Null))]])]]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])]]);
                     ("wechat_pay",
                      [`ObjectN
                         [("", [`Any]); ("app_id", [`String]);
                          ("client", [`String]);
                          ("setup_future_usage", [`String])]])]]);
                ("payment_method_types", [`Array [(`List (`String))]]);
                ("phone_number_collection",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                ("redirect_on_completion", [`String]);
                ("return_url", [`String]);
                ("saved_payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("allow_redisplay_filters",
                      [`Array [(`List (`String))]]);
                     ("payment_method_save", [`String])]]);
                ("setup_intent_data",
                 [`ObjectN
                    [("", [`Any]); ("description", [`String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("on_behalf_of", [`String])]]);
                ("shipping_address_collection",
                 [`ObjectN
                    [("", [`Any]);
                     ("allowed_countries", [`Array [(`List (`String))]])]]);
                ("shipping_options",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("shipping_rate", [`String]);
                            ("shipping_rate_data",
                             [`ObjectN
                                [("", [`Null]);
                                 ("delivery_estimate", [`Null]);
                                 ("display_name", [`Null]);
                                 ("fixed_amount", [`Null]);
                                 ("metadata", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("tax_code", [`Null]); ("type", [`Null])]])]))]]);
                ("submit_type", [`String]);
                ("subscription_data",
                 [`ObjectN
                    [("", [`Any]); ("application_fee_percent", [`Number]);
                     ("billing_cycle_anchor", [`Integer]);
                     ("default_tax_rates", [`Array [(`List (`String))]]);
                     ("description", [`String]);
                     ("invoice_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("on_behalf_of", [`String]);
                     ("proration_behavior", [`String]);
                     ("transfer_data",
                      [`ObjectN
                         [("", [`Any]); ("amount_percent", [`Number]);
                          ("destination", [`String])]]);
                     ("trial_end", [`Integer]);
                     ("trial_period_days", [`Integer]);
                     ("trial_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("end_behavior",
                           [`ObjectN
                              [("", [`Any]);
                               ("missing_payment_method", [`String])]])]])]]);
                ("success_url", [`String]);
                ("tax_id_collection",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                ("ui_mode", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_63cfa38997 _lvl ~op ~ctype (_x : t_63cfa38997) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_63cfa38997) ~op ~ctype _x
  
  and _mk_body_to_t_63cfa38997 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_63cfa38997) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_be9da0bd64 _lvl ~op ~ctype (_x : t_be9da0bd64) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("beneficiary", match _x.beneficiary with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("public_name", let _x = _x.public_name in
                            [`String])]]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("metric_tons", match _x.metric_tons with | None -> []
          | Some _x -> [`String]);
         ("product", let _x = _x.product in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_be9da0bd64) ~op ~ctype _x
  
  and _mk_body_to_t_be9da0bd64 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_be9da0bd64) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("beneficiary",
                 [`ObjectN [("", [`Any]); ("public_name", [`String])]]);
                ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("metric_tons", [`String]); ("product", [`String])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_12ad0cb13f _lvl ~op ~ctype (_x : t_12ad0cb13f) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_12ad0cb13f) ~op ~ctype _x
  
  and _mk_body_to_t_12ad0cb13f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_12ad0cb13f) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_caa29d89b9 _lvl ~op ~ctype (_x : t_caa29d89b9) =
    _body_of ~kind:(
      `ObjectN
        [("beneficiary", match _x.beneficiary with | None -> []
          | Some _x -> [match _x with
                        | T_6fb09099e4 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("public_name", let _x = _x.public_name in
                              [match _x with
                               | String_ _x -> `String
                               | T_18721326d8 _x -> `String])]
                        | T_a3b3c4a880 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_caa29d89b9) ~op ~ctype _x
  
  and _mk_body_to_t_caa29d89b9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_caa29d89b9) in _body_to
      ~kind:(`ObjectN
               [("beneficiary",
                 [`ObjectN
                    [("", [`Any]); ("public_name", [`String;
                                                    `String])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_fb73b03a51 _lvl ~op ~ctype (_x : t_fb73b03a51) =
    _body_of ~kind:(
      `ObjectN
        [("amount_off", match _x.amount_off with | None -> []
          | Some _x -> [`Integer]);
         ("applies_to", match _x.applies_to with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("products", match _x.products with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))])]]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("currency_options", match _x.currency_options with | None -> []
          | Some _x -> [`ObjectN
                          [("",
                            [`ObjectN
                               [("", [`Any]); ("amount_off", [`Integer])]])]]);
         ("duration", match _x.duration with | None -> []
          | Some _x -> [`String]);
         ("duration_in_months", match _x.duration_in_months with | None -> []
          | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("id", match _x.id with | None -> [] | Some _x -> [`String]);
         ("max_redemptions", match _x.max_redemptions with | None -> []
          | Some _x -> [`Integer]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_85dc9dd9b2 _x -> `ObjectN [("", [`String])]
                        | T_764b254203 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("percent_off", match _x.percent_off with | None -> []
          | Some _x -> [`Number]);
         ("redeem_by", match _x.redeem_by with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_fb73b03a51) ~op ~ctype _x
  
  and _mk_body_to_t_fb73b03a51 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fb73b03a51) in _body_to
      ~kind:(`ObjectN
               [("amount_off", [`Integer]);
                ("applies_to",
                 [`ObjectN
                    [("", [`Any]);
                     ("products", [`Array [(`List (`String))]])]]);
                ("currency", [`String]);
                ("currency_options",
                 [`ObjectN
                    [("",
                      [`ObjectN [("", [`Any]); ("amount_off", [`Integer])]])]]);
                ("duration", [`String]); ("duration_in_months", [`Integer]);
                ("expand", [`Array [(`List (`String))]]); ("id", [`String]);
                ("max_redemptions", [`Integer]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String]); ("percent_off", [`Number]);
                ("redeem_by", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_642079a393 _lvl ~op ~ctype (_x : t_642079a393) =
    _body_of ~kind:(
      `ObjectN
        [("currency_options", match _x.currency_options with | None -> []
          | Some _x -> [`ObjectN
                          [("",
                            [`ObjectN
                               [("", [`Any]); ("amount_off", [`Integer])]])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_9937306027 _x -> `ObjectN [("", [`String])]
                        | T_84f7547b13 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_642079a393) ~op ~ctype _x
  
  and _mk_body_to_t_642079a393 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_642079a393) in _body_to
      ~kind:(`ObjectN
               [("currency_options",
                 [`ObjectN
                    [("",
                      [`ObjectN [("", [`Any]); ("amount_off", [`Integer])]])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_334f1359d4 _lvl ~op ~ctype (_x : t_334f1359d4) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("credit_amount", match _x.credit_amount with | None -> []
          | Some _x -> [`Integer]);
         ("effective_at", match _x.effective_at with | None -> []
          | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice", let _x = _x.invoice in [`String]);
         ("lines", match _x.lines with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_db16d1dfd7) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("amount", match _x.amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("description", match _x.description with
                                     | None -> [] | Some _x -> [`String]);
                                    ("invoice_line_item",
                                     match _x.invoice_line_item with
                                     | None -> [] | Some _x -> [`String]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_amounts", match _x.tax_amounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_c8216e2f3d _x -> `Null
                                                   | T_51bfbcd9c9 _x -> `Null]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_60d0d19723 _x -> `Null]);
                                    ("type", let _x = _x.type_ in [`String]);
                                    ("unit_amount", match _x.unit_amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("unit_amount_decimal",
                                     match _x.unit_amount_decimal with
                                     | None -> [] | Some _x -> [`String])]))
                              _x))]);
         ("memo", match _x.memo with | None -> [] | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("out_of_band_amount", match _x.out_of_band_amount with | None -> []
          | Some _x -> [`Integer]);
         ("reason", match _x.reason with | None -> [] | Some _x -> [`String]);
         ("refund", match _x.refund with | None -> [] | Some _x -> [`String]);
         ("refund_amount", match _x.refund_amount with | None -> []
          | Some _x -> [`Integer]);
         ("shipping_cost", match _x.shipping_cost with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("shipping_rate", match _x.shipping_rate with
                            | None -> [] | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_334f1359d4) ~op ~ctype _x
  
  and _mk_body_to_t_334f1359d4 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_334f1359d4) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("credit_amount", [`Integer]);
                ("effective_at", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice", [`String]);
                ("lines",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("amount", [`Integer]);
                            ("description", [`String]);
                            ("invoice_line_item", [`String]);
                            ("quantity", [`Integer]);
                            ("tax_amounts", [`Null;
                                             `Null]);
                            ("tax_rates", [`Null;
                                           `Null]);
                            ("type", [`String]); ("unit_amount", [`Integer]);
                            ("unit_amount_decimal", [`String])]))]]);
                ("memo", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("out_of_band_amount", [`Integer]); ("reason", [`String]);
                ("refund", [`String]); ("refund_amount", [`Integer]);
                ("shipping_cost",
                 [`ObjectN [("", [`Any]); ("shipping_rate", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_95a0b28341 _lvl ~op ~ctype (_x : t_95a0b28341) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("memo", match _x.memo with | None -> [] | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_95a0b28341) ~op ~ctype _x
  
  and _mk_body_to_t_95a0b28341 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_95a0b28341) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("memo", [`String]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_505449c1c1 _lvl ~op ~ctype (_x : t_505449c1c1) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_505449c1c1) ~op ~ctype _x
  
  and _mk_body_to_t_505449c1c1 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_505449c1c1) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_735d572a21 _lvl ~op ~ctype (_x : t_735d572a21) =
    _body_of ~kind:(
      `ObjectN
        [("components", let _x = _x.components in
          [`ObjectN
             [("", [`Any]);
              ("buy_button", match _x.buy_button with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean])]]);
              ("pricing_table", match _x.pricing_table with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("enabled", let _x = _x.enabled in
                                 [`Boolean])]])]]);
         ("customer", let _x = _x.customer in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_735d572a21) ~op ~ctype _x
  
  and _mk_body_to_t_735d572a21 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_735d572a21) in _body_to
      ~kind:(`ObjectN
               [("components",
                 [`ObjectN
                    [("", [`Any]);
                     ("buy_button",
                      [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                     ("pricing_table",
                      [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]])]]);
                ("customer", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_3a3685bf8b _lvl ~op ~ctype (_x : t_3a3685bf8b) =
    _body_of ~kind:(
      `ObjectN
        [("address", match _x.address with | None -> []
          | Some _x -> [match _x with
                        | T_383944b86d _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("city", match _x.city with | None -> []
                              | Some _x -> [`String]);
                             ("country", match _x.country with | None -> []
                              | Some _x -> [`String]);
                             ("line1", match _x.line1 with | None -> []
                              | Some _x -> [`String]);
                             ("line2", match _x.line2 with | None -> []
                              | Some _x -> [`String]);
                             ("postal_code", match _x.postal_code with
                              | None -> [] | Some _x -> [`String]);
                             ("state", match _x.state with | None -> []
                              | Some _x -> [`String])]
                        | T_8396ae3fa3 _x -> `String]);
         ("balance", match _x.balance with | None -> []
          | Some _x -> [`Integer]);
         ("cash_balance", match _x.cash_balance with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("settings", match _x.settings with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("reconciliation_mode",
                                              match _x.reconciliation_mode with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("coupon", match _x.coupon with | None -> [] | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_prefix", match _x.invoice_prefix with | None -> []
          | Some _x -> [`String]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("custom_fields", match _x.custom_fields with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_e7cf13328a _x ->
                                            `Array
                                              ((List.map (fun (_x : t_efd8bea2ba) ->
                                                  `Singleton (`Null)) _x))
                                          | T_f1093f74d9 _x -> `String]);
                           ("default_payment_method",
                            match _x.default_payment_method with | None -> []
                            | Some _x -> [`String]);
                           ("footer", match _x.footer with | None -> []
                            | Some _x -> [`String]);
                           ("rendering_options",
                            match _x.rendering_options with | None -> []
                            | Some _x -> [match _x with
                                          | T_1b74d6e5c9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("amount_tax_display",
                                                match _x.amount_tax_display with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_379c88d8fe _x -> `String])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_053c3afba8 _x -> `ObjectN [("", [`String])]
                        | T_ad7b60b324 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("next_invoice_sequence", match _x.next_invoice_sequence with
          | None -> [] | Some _x -> [`Integer]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("phone", match _x.phone with | None -> [] | Some _x -> [`String]);
         ("preferred_locales", match _x.preferred_locales with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("promotion_code", match _x.promotion_code with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [match _x with
                        | T_f000d01645 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address", let _x = _x.address in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("city", match _x.city with | None -> []
                                   | Some _x -> [`String]);
                                  ("country", match _x.country with
                                   | None -> [] | Some _x -> [`String]);
                                  ("line1", match _x.line1 with | None -> []
                                   | Some _x -> [`String]);
                                  ("line2", match _x.line2 with | None -> []
                                   | Some _x -> [`String]);
                                  ("postal_code", match _x.postal_code with
                                   | None -> [] | Some _x -> [`String]);
                                  ("state", match _x.state with | None -> []
                                   | Some _x -> [`String])]]);
                             ("name", let _x = _x.name in [`String]);
                             ("phone", match _x.phone with | None -> []
                              | Some _x -> [`String])]
                        | T_d2a499faea _x -> `String]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String]);
         ("tax", match _x.tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("ip_address", match _x.ip_address with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_d656b201e0 _x -> `String]);
                           ("validate_location",
                            match _x.validate_location with | None -> []
                            | Some _x -> [`String])]]);
         ("tax_exempt", match _x.tax_exempt with | None -> []
          | Some _x -> [`String]);
         ("tax_id_data", match _x.tax_id_data with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_fe31cec64b) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("type", let _x = _x.type_ in [`String]);
                                    ("value", let _x = _x.value in [`String])]))
                              _x))]);
         ("test_clock", match _x.test_clock with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_3a3685bf8b) ~op ~ctype _x
  
  and _mk_body_to_t_3a3685bf8b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3a3685bf8b) in _body_to
      ~kind:(`ObjectN
               [("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])];
                  `String]);
                ("balance", [`Integer]);
                ("cash_balance",
                 [`ObjectN
                    [("", [`Any]);
                     ("settings",
                      [`ObjectN
                         [("", [`Any]); ("reconciliation_mode", [`String])]])]]);
                ("coupon", [`String]); ("description", [`String]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_prefix", [`String]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("custom_fields", [`Array [(`List (`Null))];
                                        `String]);
                     ("default_payment_method", [`String]);
                     ("footer", [`String]);
                     ("rendering_options",
                      [`ObjectN
                         [("", [`Any]); ("amount_tax_display", [`String])];
                       `String])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String]); ("next_invoice_sequence", [`Integer]);
                ("payment_method", [`String]); ("phone", [`String]);
                ("preferred_locales", [`Array [(`List (`String))]]);
                ("promotion_code", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("name", [`String]); ("phone", [`String])];
                  `String]);
                ("source", [`String]);
                ("tax",
                 [`ObjectN
                    [("", [`Any]); ("ip_address", [`String;
                                                   `String]);
                     ("validate_location", [`String])]]);
                ("tax_exempt", [`String]);
                ("tax_id_data",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("type", [`String]);
                            ("value", [`String])]))]]);
                ("test_clock", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_530fb4b186 _lvl ~op ~ctype (_x : t_530fb4b186) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_dbcee85dae _x -> `ObjectN [("", [`String])]
                        | T_1d41746285 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_530fb4b186) ~op ~ctype _x
  
  and _mk_body_to_t_530fb4b186 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_530fb4b186) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_340d484029 _lvl ~op ~ctype (_x : t_340d484029) =
    _body_of ~kind:(
      `ObjectN
        [("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a4a245e871 _x -> `ObjectN [("", [`String])]
                        | T_63125fa155 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_340d484029) ~op ~ctype _x
  
  and _mk_body_to_t_340d484029 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_340d484029) in _body_to
      ~kind:(`ObjectN
               [("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_f82bce2264 _lvl ~op ~ctype (_x : t_f82bce2264) =
    _body_of ~kind:(
      `ObjectN
        [("alipay_account", match _x.alipay_account with | None -> []
          | Some _x -> [`String]);
         ("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [match _x with
                        | T_62a95be49b _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account_holder_name",
                              match _x.account_holder_name with | None -> []
                              | Some _x -> [`String]);
                             ("account_holder_type",
                              match _x.account_holder_type with | None -> []
                              | Some _x -> [`String]);
                             ("account_number", let _x = _x.account_number in
                              [`String]);
                             ("country", let _x = _x.country in [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String]);
                             ("routing_number", match _x.routing_number with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("card", match _x.card with | None -> []
          | Some _x -> [match _x with
                        | T_c24c1a981b _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address_city", match _x.address_city with
                              | None -> [] | Some _x -> [`String]);
                             ("address_country",
                              match _x.address_country with | None -> []
                              | Some _x -> [`String]);
                             ("address_line1", match _x.address_line1 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_line2", match _x.address_line2 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_state", match _x.address_state with
                              | None -> [] | Some _x -> [`String]);
                             ("address_zip", match _x.address_zip with
                              | None -> [] | Some _x -> [`String]);
                             ("cvc", match _x.cvc with | None -> []
                              | Some _x -> [`String]);
                             ("exp_month", let _x = _x.exp_month in
                              [`Integer]);
                             ("exp_year", let _x = _x.exp_year in [`Integer]);
                             ("metadata", match _x.metadata with | None -> []
                              | Some _x -> [`ObjectN [("", [`String])]]);
                             ("name", match _x.name with | None -> []
                              | Some _x -> [`String]);
                             ("number", let _x = _x.number in [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_f82bce2264) ~op ~ctype _x
  
  and _mk_body_to_t_f82bce2264 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_f82bce2264) in _body_to
      ~kind:(`ObjectN
               [("alipay_account", [`String]);
                ("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]); ("country", [`String]);
                     ("currency", [`String]); ("object", [`String]);
                     ("routing_number", [`String])];
                  `String]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("address_city", [`String]);
                     ("address_country", [`String]);
                     ("address_line1", [`String]);
                     ("address_line2", [`String]);
                     ("address_state", [`String]);
                     ("address_zip", [`String]); ("cvc", [`String]);
                     ("exp_month", [`Integer]); ("exp_year", [`Integer]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("name", [`String]); ("number", [`String]);
                     ("object", [`String])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("source", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_410ecadf3f _lvl ~op ~ctype (_x : t_410ecadf3f) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_410ecadf3f) ~op ~ctype _x
  
  and _mk_body_to_t_410ecadf3f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_410ecadf3f) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_e114c81e22 _lvl ~op ~ctype (_x : t_e114c81e22) =
    _body_of ~kind:(
      `ObjectN
        [("account_holder_name", match _x.account_holder_name with
          | None -> [] | Some _x -> [`String]);
         ("account_holder_type", match _x.account_holder_type with
          | None -> [] | Some _x -> [`String]);
         ("address_city", match _x.address_city with | None -> []
          | Some _x -> [`String]);
         ("address_country", match _x.address_country with | None -> []
          | Some _x -> [`String]);
         ("address_line1", match _x.address_line1 with | None -> []
          | Some _x -> [`String]);
         ("address_line2", match _x.address_line2 with | None -> []
          | Some _x -> [`String]);
         ("address_state", match _x.address_state with | None -> []
          | Some _x -> [`String]);
         ("address_zip", match _x.address_zip with | None -> []
          | Some _x -> [`String]);
         ("exp_month", match _x.exp_month with | None -> []
          | Some _x -> [`String]);
         ("exp_year", match _x.exp_year with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_dbf9c20f77 _x -> `ObjectN [("", [`String])]
                        | T_c01bb512e0 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("owner", match _x.owner with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_e114c81e22) ~op ~ctype _x
  
  and _mk_body_to_t_e114c81e22 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e114c81e22) in _body_to
      ~kind:(`ObjectN
               [("account_holder_name", [`String]);
                ("account_holder_type", [`String]);
                ("address_city", [`String]); ("address_country", [`String]);
                ("address_line1", [`String]); ("address_line2", [`String]);
                ("address_state", [`String]); ("address_zip", [`String]);
                ("exp_month", [`String]); ("exp_year", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String]);
                ("owner",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("email", [`String]); ("name", [`String]);
                     ("phone", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c2d5628823 _lvl ~op ~ctype (_x : t_c2d5628823) =
    _body_of ~kind:(
      `ObjectN
        [("amounts", match _x.amounts with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : int) ->
                              `Singleton (`Integer)) _x))]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_c2d5628823) ~op ~ctype _x
  
  and _mk_body_to_t_c2d5628823 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c2d5628823) in _body_to
      ~kind:(`ObjectN
               [("amounts", [`Array [(`List (`Integer))]]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_04a865718b _lvl ~op ~ctype (_x : t_04a865718b) =
    _body_of ~kind:(
      `ObjectN
        [("alipay_account", match _x.alipay_account with | None -> []
          | Some _x -> [`String]);
         ("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [match _x with
                        | T_7430f6795c _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account_holder_name",
                              match _x.account_holder_name with | None -> []
                              | Some _x -> [`String]);
                             ("account_holder_type",
                              match _x.account_holder_type with | None -> []
                              | Some _x -> [`String]);
                             ("account_number", let _x = _x.account_number in
                              [`String]);
                             ("country", let _x = _x.country in [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String]);
                             ("routing_number", match _x.routing_number with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("card", match _x.card with | None -> []
          | Some _x -> [match _x with
                        | T_8d37433f50 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address_city", match _x.address_city with
                              | None -> [] | Some _x -> [`String]);
                             ("address_country",
                              match _x.address_country with | None -> []
                              | Some _x -> [`String]);
                             ("address_line1", match _x.address_line1 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_line2", match _x.address_line2 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_state", match _x.address_state with
                              | None -> [] | Some _x -> [`String]);
                             ("address_zip", match _x.address_zip with
                              | None -> [] | Some _x -> [`String]);
                             ("cvc", match _x.cvc with | None -> []
                              | Some _x -> [`String]);
                             ("exp_month", let _x = _x.exp_month in
                              [`Integer]);
                             ("exp_year", let _x = _x.exp_year in [`Integer]);
                             ("metadata", match _x.metadata with | None -> []
                              | Some _x -> [`ObjectN [("", [`String])]]);
                             ("name", match _x.name with | None -> []
                              | Some _x -> [`String]);
                             ("number", let _x = _x.number in [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_04a865718b) ~op ~ctype _x
  
  and _mk_body_to_t_04a865718b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_04a865718b) in _body_to
      ~kind:(`ObjectN
               [("alipay_account", [`String]);
                ("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]); ("country", [`String]);
                     ("currency", [`String]); ("object", [`String]);
                     ("routing_number", [`String])];
                  `String]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("address_city", [`String]);
                     ("address_country", [`String]);
                     ("address_line1", [`String]);
                     ("address_line2", [`String]);
                     ("address_state", [`String]);
                     ("address_zip", [`String]); ("cvc", [`String]);
                     ("exp_month", [`Integer]); ("exp_year", [`Integer]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("name", [`String]); ("number", [`String]);
                     ("object", [`String])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("source", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c8c38f8382 _lvl ~op ~ctype (_x : t_c8c38f8382) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_c8c38f8382) ~op ~ctype _x
  
  and _mk_body_to_t_c8c38f8382 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c8c38f8382) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_91f2d6c84a _lvl ~op ~ctype (_x : t_91f2d6c84a) =
    _body_of ~kind:(
      `ObjectN
        [("account_holder_name", match _x.account_holder_name with
          | None -> [] | Some _x -> [`String]);
         ("account_holder_type", match _x.account_holder_type with
          | None -> [] | Some _x -> [`String]);
         ("address_city", match _x.address_city with | None -> []
          | Some _x -> [`String]);
         ("address_country", match _x.address_country with | None -> []
          | Some _x -> [`String]);
         ("address_line1", match _x.address_line1 with | None -> []
          | Some _x -> [`String]);
         ("address_line2", match _x.address_line2 with | None -> []
          | Some _x -> [`String]);
         ("address_state", match _x.address_state with | None -> []
          | Some _x -> [`String]);
         ("address_zip", match _x.address_zip with | None -> []
          | Some _x -> [`String]);
         ("exp_month", match _x.exp_month with | None -> []
          | Some _x -> [`String]);
         ("exp_year", match _x.exp_year with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a37b7e9f1b _x -> `ObjectN [("", [`String])]
                        | T_fa714f2dd5 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("owner", match _x.owner with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_91f2d6c84a) ~op ~ctype _x
  
  and _mk_body_to_t_91f2d6c84a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_91f2d6c84a) in _body_to
      ~kind:(`ObjectN
               [("account_holder_name", [`String]);
                ("account_holder_type", [`String]);
                ("address_city", [`String]); ("address_country", [`String]);
                ("address_line1", [`String]); ("address_line2", [`String]);
                ("address_state", [`String]); ("address_zip", [`String]);
                ("exp_month", [`String]); ("exp_year", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String]);
                ("owner",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("email", [`String]); ("name", [`String]);
                     ("phone", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_594de95ea4 _lvl ~op ~ctype (_x : t_594de95ea4) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("settings", match _x.settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("reconciliation_mode",
                            match _x.reconciliation_mode with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_594de95ea4) ~op ~ctype _x
  
  and _mk_body_to_t_594de95ea4 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_594de95ea4) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("settings",
                 [`ObjectN [("", [`Any]); ("reconciliation_mode", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_b5962a6fa7 _lvl ~op ~ctype (_x : t_b5962a6fa7) =
    _body_of ~kind:(
      `ObjectN
        [("bank_transfer", let _x = _x.bank_transfer in
          [`ObjectN
             [("", [`Any]);
              ("eu_bank_transfer", match _x.eu_bank_transfer with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("country", let _x = _x.country in [`String])]]);
              ("requested_address_types",
               match _x.requested_address_types with | None -> []
               | Some _x -> [`Array
                               ((List.map (fun (_x : t_c1a7e1b788) ->
                                   `Singleton (`String)) _x))]);
              ("type", let _x = _x.type_ in [`String])]]);
         ("currency", let _x = _x.currency in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("funding_type", let _x = _x.funding_type in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_b5962a6fa7) ~op ~ctype _x
  
  and _mk_body_to_t_b5962a6fa7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b5962a6fa7) in _body_to
      ~kind:(`ObjectN
               [("bank_transfer",
                 [`ObjectN
                    [("", [`Any]);
                     ("eu_bank_transfer",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("requested_address_types",
                      [`Array [(`List (`String))]]);
                     ("type", [`String])]]);
                ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("funding_type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b67e1395de _lvl ~op ~ctype (_x : t_b67e1395de) =
    _body_of ~kind:(
      `ObjectN
        [("address", match _x.address with | None -> []
          | Some _x -> [match _x with
                        | T_38c02a69e5 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("city", match _x.city with | None -> []
                              | Some _x -> [`String]);
                             ("country", match _x.country with | None -> []
                              | Some _x -> [`String]);
                             ("line1", match _x.line1 with | None -> []
                              | Some _x -> [`String]);
                             ("line2", match _x.line2 with | None -> []
                              | Some _x -> [`String]);
                             ("postal_code", match _x.postal_code with
                              | None -> [] | Some _x -> [`String]);
                             ("state", match _x.state with | None -> []
                              | Some _x -> [`String])]
                        | T_527ea6864c _x -> `String]);
         ("balance", match _x.balance with | None -> []
          | Some _x -> [`Integer]);
         ("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [match _x with
                        | T_0af7fb0a10 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account_holder_name",
                              match _x.account_holder_name with | None -> []
                              | Some _x -> [`String]);
                             ("account_holder_type",
                              match _x.account_holder_type with | None -> []
                              | Some _x -> [`String]);
                             ("account_number", let _x = _x.account_number in
                              [`String]);
                             ("country", let _x = _x.country in [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String]);
                             ("routing_number", match _x.routing_number with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("card", match _x.card with | None -> []
          | Some _x -> [match _x with
                        | T_ab88a74a41 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address_city", match _x.address_city with
                              | None -> [] | Some _x -> [`String]);
                             ("address_country",
                              match _x.address_country with | None -> []
                              | Some _x -> [`String]);
                             ("address_line1", match _x.address_line1 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_line2", match _x.address_line2 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_state", match _x.address_state with
                              | None -> [] | Some _x -> [`String]);
                             ("address_zip", match _x.address_zip with
                              | None -> [] | Some _x -> [`String]);
                             ("cvc", match _x.cvc with | None -> []
                              | Some _x -> [`String]);
                             ("exp_month", let _x = _x.exp_month in
                              [`Integer]);
                             ("exp_year", let _x = _x.exp_year in [`Integer]);
                             ("metadata", match _x.metadata with | None -> []
                              | Some _x -> [`ObjectN [("", [`String])]]);
                             ("name", match _x.name with | None -> []
                              | Some _x -> [`String]);
                             ("number", let _x = _x.number in [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("cash_balance", match _x.cash_balance with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("settings", match _x.settings with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("reconciliation_mode",
                                              match _x.reconciliation_mode with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("coupon", match _x.coupon with | None -> [] | Some _x -> [`String]);
         ("default_alipay_account", match _x.default_alipay_account with
          | None -> [] | Some _x -> [`String]);
         ("default_bank_account", match _x.default_bank_account with
          | None -> [] | Some _x -> [`String]);
         ("default_card", match _x.default_card with | None -> []
          | Some _x -> [`String]);
         ("default_source", match _x.default_source with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_prefix", match _x.invoice_prefix with | None -> []
          | Some _x -> [`String]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("custom_fields", match _x.custom_fields with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_545ec6f102 _x ->
                                            `Array
                                              ((List.map (fun (_x : t_f99282ad2b) ->
                                                  `Singleton (`Null)) _x))
                                          | T_500666bc15 _x -> `String]);
                           ("default_payment_method",
                            match _x.default_payment_method with | None -> []
                            | Some _x -> [`String]);
                           ("footer", match _x.footer with | None -> []
                            | Some _x -> [`String]);
                           ("rendering_options",
                            match _x.rendering_options with | None -> []
                            | Some _x -> [match _x with
                                          | T_ab12c7141e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("amount_tax_display",
                                                match _x.amount_tax_display with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_2ffbe485ff _x -> `String])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_2d81d76373 _x -> `ObjectN [("", [`String])]
                        | T_22be8990fa _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("next_invoice_sequence", match _x.next_invoice_sequence with
          | None -> [] | Some _x -> [`Integer]);
         ("phone", match _x.phone with | None -> [] | Some _x -> [`String]);
         ("preferred_locales", match _x.preferred_locales with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("promotion_code", match _x.promotion_code with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [match _x with
                        | T_4e704975be _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address", let _x = _x.address in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("city", match _x.city with | None -> []
                                   | Some _x -> [`String]);
                                  ("country", match _x.country with
                                   | None -> [] | Some _x -> [`String]);
                                  ("line1", match _x.line1 with | None -> []
                                   | Some _x -> [`String]);
                                  ("line2", match _x.line2 with | None -> []
                                   | Some _x -> [`String]);
                                  ("postal_code", match _x.postal_code with
                                   | None -> [] | Some _x -> [`String]);
                                  ("state", match _x.state with | None -> []
                                   | Some _x -> [`String])]]);
                             ("name", let _x = _x.name in [`String]);
                             ("phone", match _x.phone with | None -> []
                              | Some _x -> [`String])]
                        | T_e30042c9ed _x -> `String]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String]);
         ("tax", match _x.tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("ip_address", match _x.ip_address with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_d03a5627f7 _x -> `String]);
                           ("validate_location",
                            match _x.validate_location with | None -> []
                            | Some _x -> [`String])]]);
         ("tax_exempt", match _x.tax_exempt with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_b67e1395de) ~op ~ctype _x
  
  and _mk_body_to_t_b67e1395de _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b67e1395de) in _body_to
      ~kind:(`ObjectN
               [("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])];
                  `String]);
                ("balance", [`Integer]);
                ("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]); ("country", [`String]);
                     ("currency", [`String]); ("object", [`String]);
                     ("routing_number", [`String])];
                  `String]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("address_city", [`String]);
                     ("address_country", [`String]);
                     ("address_line1", [`String]);
                     ("address_line2", [`String]);
                     ("address_state", [`String]);
                     ("address_zip", [`String]); ("cvc", [`String]);
                     ("exp_month", [`Integer]); ("exp_year", [`Integer]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("name", [`String]); ("number", [`String]);
                     ("object", [`String])];
                  `String]);
                ("cash_balance",
                 [`ObjectN
                    [("", [`Any]);
                     ("settings",
                      [`ObjectN
                         [("", [`Any]); ("reconciliation_mode", [`String])]])]]);
                ("coupon", [`String]); ("default_alipay_account", [`String]);
                ("default_bank_account", [`String]);
                ("default_card", [`String]); ("default_source", [`String]);
                ("description", [`String]); ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_prefix", [`String]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("custom_fields", [`Array [(`List (`Null))];
                                        `String]);
                     ("default_payment_method", [`String]);
                     ("footer", [`String]);
                     ("rendering_options",
                      [`ObjectN
                         [("", [`Any]); ("amount_tax_display", [`String])];
                       `String])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String]); ("next_invoice_sequence", [`Integer]);
                ("phone", [`String]);
                ("preferred_locales", [`Array [(`List (`String))]]);
                ("promotion_code", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("name", [`String]); ("phone", [`String])];
                  `String]);
                ("source", [`String]);
                ("tax",
                 [`ObjectN
                    [("", [`Any]); ("ip_address", [`String;
                                                   `String]);
                     ("validate_location", [`String])]]);
                ("tax_exempt", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_9e15a33c0b _lvl ~op ~ctype (_x : t_9e15a33c0b) =
    _body_of ~kind:(
      `ObjectN
        [("alipay_account", match _x.alipay_account with | None -> []
          | Some _x -> [`String]);
         ("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [match _x with
                        | T_bfa5d41d16 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("account_holder_name",
                              match _x.account_holder_name with | None -> []
                              | Some _x -> [`String]);
                             ("account_holder_type",
                              match _x.account_holder_type with | None -> []
                              | Some _x -> [`String]);
                             ("account_number", let _x = _x.account_number in
                              [`String]);
                             ("country", let _x = _x.country in [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String]);
                             ("routing_number", match _x.routing_number with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("card", match _x.card with | None -> []
          | Some _x -> [match _x with
                        | T_9613bd86f7 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address_city", match _x.address_city with
                              | None -> [] | Some _x -> [`String]);
                             ("address_country",
                              match _x.address_country with | None -> []
                              | Some _x -> [`String]);
                             ("address_line1", match _x.address_line1 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_line2", match _x.address_line2 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_state", match _x.address_state with
                              | None -> [] | Some _x -> [`String]);
                             ("address_zip", match _x.address_zip with
                              | None -> [] | Some _x -> [`String]);
                             ("cvc", match _x.cvc with | None -> []
                              | Some _x -> [`String]);
                             ("exp_month", let _x = _x.exp_month in
                              [`Integer]);
                             ("exp_year", let _x = _x.exp_year in [`Integer]);
                             ("metadata", match _x.metadata with | None -> []
                              | Some _x -> [`ObjectN [("", [`String])]]);
                             ("name", match _x.name with | None -> []
                              | Some _x -> [`String]);
                             ("number", let _x = _x.number in [`String]);
                             ("object", match _x.object_ with | None -> []
                              | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_9e15a33c0b) ~op ~ctype _x
  
  and _mk_body_to_t_9e15a33c0b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_9e15a33c0b) in _body_to
      ~kind:(`ObjectN
               [("alipay_account", [`String]);
                ("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]); ("country", [`String]);
                     ("currency", [`String]); ("object", [`String]);
                     ("routing_number", [`String])];
                  `String]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("address_city", [`String]);
                     ("address_country", [`String]);
                     ("address_line1", [`String]);
                     ("address_line2", [`String]);
                     ("address_state", [`String]);
                     ("address_zip", [`String]); ("cvc", [`String]);
                     ("exp_month", [`Integer]); ("exp_year", [`Integer]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("name", [`String]); ("number", [`String]);
                     ("object", [`String])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("source", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_67fb237393 _lvl ~op ~ctype (_x : t_67fb237393) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_67fb237393) ~op ~ctype _x
  
  and _mk_body_to_t_67fb237393 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_67fb237393) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_56fff3fa92 _lvl ~op ~ctype (_x : t_56fff3fa92) =
    _body_of ~kind:(
      `ObjectN
        [("account_holder_name", match _x.account_holder_name with
          | None -> [] | Some _x -> [`String]);
         ("account_holder_type", match _x.account_holder_type with
          | None -> [] | Some _x -> [`String]);
         ("address_city", match _x.address_city with | None -> []
          | Some _x -> [`String]);
         ("address_country", match _x.address_country with | None -> []
          | Some _x -> [`String]);
         ("address_line1", match _x.address_line1 with | None -> []
          | Some _x -> [`String]);
         ("address_line2", match _x.address_line2 with | None -> []
          | Some _x -> [`String]);
         ("address_state", match _x.address_state with | None -> []
          | Some _x -> [`String]);
         ("address_zip", match _x.address_zip with | None -> []
          | Some _x -> [`String]);
         ("exp_month", match _x.exp_month with | None -> []
          | Some _x -> [`String]);
         ("exp_year", match _x.exp_year with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_49e2568780 _x -> `ObjectN [("", [`String])]
                        | T_789403f8fe _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("owner", match _x.owner with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_56fff3fa92) ~op ~ctype _x
  
  and _mk_body_to_t_56fff3fa92 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_56fff3fa92) in _body_to
      ~kind:(`ObjectN
               [("account_holder_name", [`String]);
                ("account_holder_type", [`String]);
                ("address_city", [`String]); ("address_country", [`String]);
                ("address_line1", [`String]); ("address_line2", [`String]);
                ("address_state", [`String]); ("address_zip", [`String]);
                ("exp_month", [`String]); ("exp_year", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String]);
                ("owner",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("email", [`String]); ("name", [`String]);
                     ("phone", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2cec9492a3 _lvl ~op ~ctype (_x : t_2cec9492a3) =
    _body_of ~kind:(
      `ObjectN
        [("amounts", match _x.amounts with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : int) ->
                              `Singleton (`Integer)) _x))]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_2cec9492a3) ~op ~ctype _x
  
  and _mk_body_to_t_2cec9492a3 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2cec9492a3) in _body_to
      ~kind:(`ObjectN
               [("amounts", [`Array [(`List (`Integer))]]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_e105d89725 _lvl ~op ~ctype (_x : t_e105d89725) =
    _body_of ~kind:(
      `ObjectN
        [("add_invoice_items", match _x.add_invoice_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_689d9fda95) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : t_6535447c14) ->
                                                         `Singleton (`Null))
                                                         _x))]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_436a42896c _x -> `Null])]))
                              _x))]);
         ("application_fee_percent", match _x.application_fee_percent with
          | None -> []
          | Some _x -> [match _x with
                        | Float_ _x -> `Number
                        | T_3a23162f6d _x -> `String]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("backdate_start_date", match _x.backdate_start_date with
          | None -> [] | Some _x -> [`Integer]);
         ("billing_cycle_anchor", match _x.billing_cycle_anchor with
          | None -> [] | Some _x -> [`Integer]);
         ("billing_thresholds", match _x.billing_thresholds with | None -> []
          | Some _x -> [match _x with
                        | T_a0597ba2f5 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount_gte", match _x.amount_gte with
                              | None -> [] | Some _x -> [`Integer]);
                             ("reset_billing_cycle_anchor",
                              match _x.reset_billing_cycle_anchor with
                              | None -> [] | Some _x -> [`Boolean])]
                        | T_605d6a072f _x -> `String]);
         ("cancel_at", match _x.cancel_at with | None -> []
          | Some _x -> [`Integer]);
         ("cancel_at_period_end", match _x.cancel_at_period_end with
          | None -> [] | Some _x -> [`Boolean]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("coupon", match _x.coupon with | None -> [] | Some _x -> [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("days_until_due", match _x.days_until_due with | None -> []
          | Some _x -> [`Integer]);
         ("default_payment_method", match _x.default_payment_method with
          | None -> [] | Some _x -> [`String]);
         ("default_source", match _x.default_source with | None -> []
          | Some _x -> [`String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_f2c4d802d3 _x -> `String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_874bf9db81 _x ->
                          `Array
                            ((List.map (fun (_x : t_2b1cbe3515) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_ab71d76439 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_tax_ids", match _x.account_tax_ids with
                            | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_e1a168fdfd _x -> `String]);
                           ("issuer", match _x.issuer with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("items", match _x.items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_504950ff07) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("billing_thresholds",
                                     match _x.billing_thresholds with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_3e229a58d8 _x -> `Null
                                                   | T_e28edc761c _x -> `Null]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_c6a2df8512 _x -> `Null
                                                   | T_81b96c456e _x -> `Null]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [`ObjectN [("", [`Null])]]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("recurring",
                                                       let _x = _x.recurring in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_1845aa3aca _x -> `Null])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_625d43194e _x -> `ObjectN [("", [`String])]
                        | T_775539cef5 _x -> `String]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [`Boolean]);
         ("payment_behavior", match _x.payment_behavior with | None -> []
          | Some _x -> [`String]);
         ("payment_settings", match _x.payment_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("payment_method_options",
                            match _x.payment_method_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("acss_debit",
                                              match _x.acss_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_96d89caf4b _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_e9d285b96b _x ->
                                                              `String]);
                                             ("bancontact",
                                              match _x.bancontact with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_c86679549b _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("preferred_language",
                                                                  match _x.preferred_language with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_957e38323a _x ->
                                                              `String]);
                                             ("card", match _x.card with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_8a4cf5bfae _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("network",
                                                                  match _x.network with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("request_three_d_secure",
                                                                  match _x.request_three_d_secure with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_6522263dcd _x ->
                                                              `String]);
                                             ("customer_balance",
                                              match _x.customer_balance with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_d120b6f7e4 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("bank_transfer",
                                                                  match _x.bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("funding_type",
                                                                  match _x.funding_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_2e7897256f _x ->
                                                              `String]);
                                             ("konbini",
                                              match _x.konbini with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_34f0cfe08c _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_be3783a307 _x ->
                                                              `String]);
                                             ("sepa_debit",
                                              match _x.sepa_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_71605cecba _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_aa6d842fb7 _x ->
                                                              `String]);
                                             ("us_bank_account",
                                              match _x.us_bank_account with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_b680c44b5d _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("financial_connections",
                                                                  match _x.financial_connections with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_7db05b49ad _x ->
                                                              `String])]]);
                           ("payment_method_types",
                            match _x.payment_method_types with | None -> []
                            | Some _x -> [match _x with
                                          | T_6e97a2a256 _x ->
                                            `Array
                                              ((List.map (fun (_x : t_b35ba594f2) ->
                                                  `Singleton (`Null)) _x))
                                          | T_92bb620c81 _x -> `String]);
                           ("save_default_payment_method",
                            match _x.save_default_payment_method with
                            | None -> [] | Some _x -> [`String])]]);
         ("pending_invoice_item_interval",
          match _x.pending_invoice_item_interval with | None -> []
          | Some _x -> [match _x with
                        | T_62cc938abe _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("interval", let _x = _x.interval in [`String]);
                             ("interval_count", match _x.interval_count with
                              | None -> [] | Some _x -> [`Integer])]
                        | T_d2ad0e3dcd _x -> `String]);
         ("promotion_code", match _x.promotion_code with | None -> []
          | Some _x -> [`String]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount_percent", match _x.amount_percent with
                            | None -> [] | Some _x -> [`Number]);
                           ("destination", let _x = _x.destination in
                            [`String])]]);
         ("trial_end", match _x.trial_end with | None -> []
          | Some _x -> [match _x with
                        | T_427d7c3939 _x -> `String
                        | Ptime_t _x -> `Integer]);
         ("trial_from_plan", match _x.trial_from_plan with | None -> []
          | Some _x -> [`Boolean]);
         ("trial_period_days", match _x.trial_period_days with | None -> []
          | Some _x -> [`Integer]);
         ("trial_settings", match _x.trial_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end_behavior", let _x = _x.end_behavior in
                            [`ObjectN
                               [("", [`Any]);
                                ("missing_payment_method",
                                 let _x = _x.missing_payment_method in
                                 [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_e105d89725) ~op ~ctype _x
  
  and _mk_body_to_t_e105d89725 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e105d89725) in _body_to
      ~kind:(`ObjectN
               [("add_invoice_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("discounts", [`Array [(`List (`Null))]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("application_fee_percent", [`Number;
                                             `String]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("backdate_start_date", [`Integer]);
                ("billing_cycle_anchor", [`Integer]);
                ("billing_thresholds",
                 [`ObjectN
                    [("", [`Any]); ("amount_gte", [`Integer]);
                     ("reset_billing_cycle_anchor", [`Boolean])];
                  `String]);
                ("cancel_at", [`Integer]);
                ("cancel_at_period_end", [`Boolean]);
                ("collection_method", [`String]); ("coupon", [`String]);
                ("currency", [`String]); ("days_until_due", [`Integer]);
                ("default_payment_method", [`String]);
                ("default_source", [`String]);
                ("default_tax_rates", [`Array [(`List (`String))];
                                       `String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("account_tax_ids", [`Array [(`List (`Null))];
                                          `String]);
                     ("issuer",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("billing_thresholds", [`Null;
                                                    `Null]);
                            ("discounts", [`Null;
                                           `Null]);
                            ("metadata", [`ObjectN [("", [`Null])]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("recurring", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("off_session", [`Boolean]); ("payment_behavior", [`String]);
                ("payment_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("payment_method_options",
                      [`ObjectN
                         [("", [`Any]);
                          ("acss_debit",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("verification_method", [`Null])];
                            `String]);
                          ("bancontact",
                           [`ObjectN
                              [("", [`Null]);
                               ("preferred_language", [`Null])];
                            `String]);
                          ("card",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("network", [`Null]);
                               ("request_three_d_secure", [`Null])];
                            `String]);
                          ("customer_balance",
                           [`ObjectN
                              [("", [`Null]); ("bank_transfer", [`Null]);
                               ("funding_type", [`Null])];
                            `String]);
                          ("konbini", [`ObjectN [("", [`Null])];
                                       `String]);
                          ("sepa_debit", [`ObjectN [("", [`Null])];
                                          `String]);
                          ("us_bank_account",
                           [`ObjectN
                              [("", [`Null]);
                               ("financial_connections", [`Null]);
                               ("verification_method", [`Null])];
                            `String])]]);
                     ("payment_method_types",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("save_default_payment_method", [`String])]]);
                ("pending_invoice_item_interval",
                 [`ObjectN
                    [("", [`Any]); ("interval", [`String]);
                     ("interval_count", [`Integer])];
                  `String]);
                ("promotion_code", [`String]);
                ("proration_behavior", [`String]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount_percent", [`Number]);
                     ("destination", [`String])]]);
                ("trial_end", [`String;
                               `Integer]);
                ("trial_from_plan", [`Boolean]);
                ("trial_period_days", [`Integer]);
                ("trial_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("end_behavior",
                      [`ObjectN
                         [("", [`Any]);
                          ("missing_payment_method", [`String])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_d5207640e5 _lvl ~op ~ctype (_x : t_d5207640e5) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_now", match _x.invoice_now with | None -> []
          | Some _x -> [`Boolean]);
         ("prorate", match _x.prorate with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_d5207640e5) ~op ~ctype _x
  
  and _mk_body_to_t_d5207640e5 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d5207640e5) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("invoice_now", [`Boolean]); ("prorate", [`Boolean])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_fca42b91d3 _lvl ~op ~ctype (_x : t_fca42b91d3) =
    _body_of ~kind:(
      `ObjectN
        [("add_invoice_items", match _x.add_invoice_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_9439d14beb) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : t_021c846f51) ->
                                                         `Singleton (`Null))
                                                         _x))]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_b743a3daaf _x -> `Null])]))
                              _x))]);
         ("application_fee_percent", match _x.application_fee_percent with
          | None -> []
          | Some _x -> [match _x with
                        | Float_ _x -> `Number
                        | T_b14573063b _x -> `String]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("billing_cycle_anchor", match _x.billing_cycle_anchor with
          | None -> [] | Some _x -> [`String]);
         ("billing_thresholds", match _x.billing_thresholds with | None -> []
          | Some _x -> [match _x with
                        | T_1a6f2954bf _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount_gte", match _x.amount_gte with
                              | None -> [] | Some _x -> [`Integer]);
                             ("reset_billing_cycle_anchor",
                              match _x.reset_billing_cycle_anchor with
                              | None -> [] | Some _x -> [`Boolean])]
                        | T_fe3f75a148 _x -> `String]);
         ("cancel_at", match _x.cancel_at with | None -> []
          | Some _x -> [match _x with
                        | Ptime_t _x -> `Integer
                        | T_f3c452e223 _x -> `String]);
         ("cancel_at_period_end", match _x.cancel_at_period_end with
          | None -> [] | Some _x -> [`Boolean]);
         ("cancellation_details", match _x.cancellation_details with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("comment", match _x.comment with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_47a25cf1d5 _x -> `String]);
                           ("feedback", match _x.feedback with | None -> []
                            | Some _x -> [`String])]]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("coupon", match _x.coupon with | None -> [] | Some _x -> [`String]);
         ("days_until_due", match _x.days_until_due with | None -> []
          | Some _x -> [`Integer]);
         ("default_payment_method", match _x.default_payment_method with
          | None -> [] | Some _x -> [`String]);
         ("default_source", match _x.default_source with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_9a644c4b19 _x -> `String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_83c4fe7257 _x -> `String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_c1ad1cc505 _x ->
                          `Array
                            ((List.map (fun (_x : t_db3b1d67c7) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_812db0e612 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_tax_ids", match _x.account_tax_ids with
                            | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_f442a19f59 _x -> `String]);
                           ("issuer", match _x.issuer with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("items", match _x.items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_8dcc29a13f) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("billing_thresholds",
                                     match _x.billing_thresholds with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_721194eb15 _x -> `Null
                                                   | T_bcf4ca837f _x -> `Null]);
                                    ("clear_usage", match _x.clear_usage with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("deleted", match _x.deleted with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_d67c851010 _x -> `Null
                                                   | T_3a00d2ab79 _x -> `Null]);
                                    ("id", match _x.id with | None -> []
                                     | Some _x -> [`String]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_e2f744f195 _x -> `Null
                                                   | T_ff521f9cc1 _x -> `Null]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("recurring",
                                                       let _x = _x.recurring in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_af60786204 _x -> `Null])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a79ca76f77 _x -> `ObjectN [("", [`String])]
                        | T_b54d58d898 _x -> `String]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [`Boolean]);
         ("pause_collection", match _x.pause_collection with | None -> []
          | Some _x -> [match _x with
                        | T_6e19808bcf _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("behavior", let _x = _x.behavior in [`String]);
                             ("resumes_at", match _x.resumes_at with
                              | None -> [] | Some _x -> [`Integer])]
                        | T_ed6915e34d _x -> `String]);
         ("payment_behavior", match _x.payment_behavior with | None -> []
          | Some _x -> [`String]);
         ("payment_settings", match _x.payment_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("payment_method_options",
                            match _x.payment_method_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("acss_debit",
                                              match _x.acss_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_99d278c4c4 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_e95192e3b7 _x ->
                                                              `String]);
                                             ("bancontact",
                                              match _x.bancontact with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_c30e86710f _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("preferred_language",
                                                                  match _x.preferred_language with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_0ce154addd _x ->
                                                              `String]);
                                             ("card", match _x.card with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_61cfddc36d _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("network",
                                                                  match _x.network with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("request_three_d_secure",
                                                                  match _x.request_three_d_secure with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_619c01cdc3 _x ->
                                                              `String]);
                                             ("customer_balance",
                                              match _x.customer_balance with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_40cec7af5a _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("bank_transfer",
                                                                  match _x.bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("funding_type",
                                                                  match _x.funding_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_2ffad53524 _x ->
                                                              `String]);
                                             ("konbini",
                                              match _x.konbini with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_2d519eaebc _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_b98a5b3f43 _x ->
                                                              `String]);
                                             ("sepa_debit",
                                              match _x.sepa_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_6ba6fb65cd _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_d952c977eb _x ->
                                                              `String]);
                                             ("us_bank_account",
                                              match _x.us_bank_account with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_5fd8be6aab _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("financial_connections",
                                                                  match _x.financial_connections with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_5f6ad234f4 _x ->
                                                              `String])]]);
                           ("payment_method_types",
                            match _x.payment_method_types with | None -> []
                            | Some _x -> [match _x with
                                          | T_4176af0a1e _x ->
                                            `Array
                                              ((List.map (fun (_x : t_95ca195acb) ->
                                                  `Singleton (`Null)) _x))
                                          | T_0abbbfefa4 _x -> `String]);
                           ("save_default_payment_method",
                            match _x.save_default_payment_method with
                            | None -> [] | Some _x -> [`String])]]);
         ("pending_invoice_item_interval",
          match _x.pending_invoice_item_interval with | None -> []
          | Some _x -> [match _x with
                        | T_9e958c7e76 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("interval", let _x = _x.interval in [`String]);
                             ("interval_count", match _x.interval_count with
                              | None -> [] | Some _x -> [`Integer])]
                        | T_3003d40f2c _x -> `String]);
         ("promotion_code", match _x.promotion_code with | None -> []
          | Some _x -> [`String]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("proration_date", match _x.proration_date with | None -> []
          | Some _x -> [`Integer]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [match _x with
                        | T_4c8e64d60e _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount_percent", match _x.amount_percent with
                              | None -> [] | Some _x -> [`Number]);
                             ("destination", let _x = _x.destination in
                              [`String])]
                        | T_99e7c1ec21 _x -> `String]);
         ("trial_end", match _x.trial_end with | None -> []
          | Some _x -> [match _x with
                        | T_2b1a049d40 _x -> `String
                        | Ptime_t _x -> `Integer]);
         ("trial_from_plan", match _x.trial_from_plan with | None -> []
          | Some _x -> [`Boolean]);
         ("trial_settings", match _x.trial_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end_behavior", let _x = _x.end_behavior in
                            [`ObjectN
                               [("", [`Any]);
                                ("missing_payment_method",
                                 let _x = _x.missing_payment_method in
                                 [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_fca42b91d3) ~op ~ctype _x
  
  and _mk_body_to_t_fca42b91d3 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fca42b91d3) in _body_to
      ~kind:(`ObjectN
               [("add_invoice_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("discounts", [`Array [(`List (`Null))]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("application_fee_percent", [`Number;
                                             `String]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("billing_cycle_anchor", [`String]);
                ("billing_thresholds",
                 [`ObjectN
                    [("", [`Any]); ("amount_gte", [`Integer]);
                     ("reset_billing_cycle_anchor", [`Boolean])];
                  `String]);
                ("cancel_at", [`Integer;
                               `String]);
                ("cancel_at_period_end", [`Boolean]);
                ("cancellation_details",
                 [`ObjectN
                    [("", [`Any]); ("comment", [`String;
                                                `String]);
                     ("feedback", [`String])]]);
                ("collection_method", [`String]); ("coupon", [`String]);
                ("days_until_due", [`Integer]);
                ("default_payment_method", [`String]);
                ("default_source", [`String;
                                    `String]);
                ("default_tax_rates", [`Array [(`List (`String))];
                                       `String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("account_tax_ids", [`Array [(`List (`Null))];
                                          `String]);
                     ("issuer",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("billing_thresholds", [`Null;
                                                    `Null]);
                            ("clear_usage", [`Boolean]);
                            ("deleted", [`Boolean]);
                            ("discounts", [`Null;
                                           `Null]);
                            ("id", [`String]); ("metadata", [`Null;
                                                             `Null]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("recurring", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("off_session", [`Boolean]);
                ("pause_collection",
                 [`ObjectN
                    [("", [`Any]); ("behavior", [`String]);
                     ("resumes_at", [`Integer])];
                  `String]);
                ("payment_behavior", [`String]);
                ("payment_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("payment_method_options",
                      [`ObjectN
                         [("", [`Any]);
                          ("acss_debit",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("verification_method", [`Null])];
                            `String]);
                          ("bancontact",
                           [`ObjectN
                              [("", [`Null]);
                               ("preferred_language", [`Null])];
                            `String]);
                          ("card",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("network", [`Null]);
                               ("request_three_d_secure", [`Null])];
                            `String]);
                          ("customer_balance",
                           [`ObjectN
                              [("", [`Null]); ("bank_transfer", [`Null]);
                               ("funding_type", [`Null])];
                            `String]);
                          ("konbini", [`ObjectN [("", [`Null])];
                                       `String]);
                          ("sepa_debit", [`ObjectN [("", [`Null])];
                                          `String]);
                          ("us_bank_account",
                           [`ObjectN
                              [("", [`Null]);
                               ("financial_connections", [`Null]);
                               ("verification_method", [`Null])];
                            `String])]]);
                     ("payment_method_types",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("save_default_payment_method", [`String])]]);
                ("pending_invoice_item_interval",
                 [`ObjectN
                    [("", [`Any]); ("interval", [`String]);
                     ("interval_count", [`Integer])];
                  `String]);
                ("promotion_code", [`String]);
                ("proration_behavior", [`String]);
                ("proration_date", [`Integer]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount_percent", [`Number]);
                     ("destination", [`String])];
                  `String]);
                ("trial_end", [`String;
                               `Integer]);
                ("trial_from_plan", [`Boolean]);
                ("trial_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("end_behavior",
                      [`ObjectN
                         [("", [`Any]);
                          ("missing_payment_method", [`String])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_3fd2347cc8 _lvl ~op ~ctype (_x : t_3fd2347cc8) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("type", let _x = _x.type_ in [`String]);
         ("value", let _x = _x.value in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_3fd2347cc8) ~op ~ctype _x
  
  and _mk_body_to_t_3fd2347cc8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3fd2347cc8) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("type", [`String]); ("value", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_a4e56c6142 _lvl ~op ~ctype (_x : t_a4e56c6142) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_a4e56c6142) ~op ~ctype _x
  
  and _mk_body_to_t_a4e56c6142 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a4e56c6142) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_b6e0844000 _lvl ~op ~ctype (_x : t_b6e0844000) =
    _body_of ~kind:(
      `ObjectN
        [("evidence", match _x.evidence with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("access_activity_log",
                            match _x.access_activity_log with | None -> []
                            | Some _x -> [`String]);
                           ("billing_address", match _x.billing_address with
                            | None -> [] | Some _x -> [`String]);
                           ("cancellation_policy",
                            match _x.cancellation_policy with | None -> []
                            | Some _x -> [`String]);
                           ("cancellation_policy_disclosure",
                            match _x.cancellation_policy_disclosure with
                            | None -> [] | Some _x -> [`String]);
                           ("cancellation_rebuttal",
                            match _x.cancellation_rebuttal with | None -> []
                            | Some _x -> [`String]);
                           ("customer_communication",
                            match _x.customer_communication with | None -> []
                            | Some _x -> [`String]);
                           ("customer_email_address",
                            match _x.customer_email_address with | None -> []
                            | Some _x -> [`String]);
                           ("customer_name", match _x.customer_name with
                            | None -> [] | Some _x -> [`String]);
                           ("customer_purchase_ip",
                            match _x.customer_purchase_ip with | None -> []
                            | Some _x -> [`String]);
                           ("customer_signature",
                            match _x.customer_signature with | None -> []
                            | Some _x -> [`String]);
                           ("duplicate_charge_documentation",
                            match _x.duplicate_charge_documentation with
                            | None -> [] | Some _x -> [`String]);
                           ("duplicate_charge_explanation",
                            match _x.duplicate_charge_explanation with
                            | None -> [] | Some _x -> [`String]);
                           ("duplicate_charge_id",
                            match _x.duplicate_charge_id with | None -> []
                            | Some _x -> [`String]);
                           ("product_description",
                            match _x.product_description with | None -> []
                            | Some _x -> [`String]);
                           ("receipt", match _x.receipt with | None -> []
                            | Some _x -> [`String]);
                           ("refund_policy", match _x.refund_policy with
                            | None -> [] | Some _x -> [`String]);
                           ("refund_policy_disclosure",
                            match _x.refund_policy_disclosure with
                            | None -> [] | Some _x -> [`String]);
                           ("refund_refusal_explanation",
                            match _x.refund_refusal_explanation with
                            | None -> [] | Some _x -> [`String]);
                           ("service_date", match _x.service_date with
                            | None -> [] | Some _x -> [`String]);
                           ("service_documentation",
                            match _x.service_documentation with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_address",
                            match _x.shipping_address with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_carrier",
                            match _x.shipping_carrier with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_date", match _x.shipping_date with
                            | None -> [] | Some _x -> [`String]);
                           ("shipping_documentation",
                            match _x.shipping_documentation with | None -> []
                            | Some _x -> [`String]);
                           ("shipping_tracking_number",
                            match _x.shipping_tracking_number with
                            | None -> [] | Some _x -> [`String]);
                           ("uncategorized_file",
                            match _x.uncategorized_file with | None -> []
                            | Some _x -> [`String]);
                           ("uncategorized_text",
                            match _x.uncategorized_text with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_fe851ce5c7 _x -> `ObjectN [("", [`String])]
                        | T_7fa3ffe295 _x -> `String]);
         ("submit", match _x.submit with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_b6e0844000) ~op ~ctype _x
  
  and _mk_body_to_t_b6e0844000 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b6e0844000) in _body_to
      ~kind:(`ObjectN
               [("evidence",
                 [`ObjectN
                    [("", [`Any]); ("access_activity_log", [`String]);
                     ("billing_address", [`String]);
                     ("cancellation_policy", [`String]);
                     ("cancellation_policy_disclosure", [`String]);
                     ("cancellation_rebuttal", [`String]);
                     ("customer_communication", [`String]);
                     ("customer_email_address", [`String]);
                     ("customer_name", [`String]);
                     ("customer_purchase_ip", [`String]);
                     ("customer_signature", [`String]);
                     ("duplicate_charge_documentation", [`String]);
                     ("duplicate_charge_explanation", [`String]);
                     ("duplicate_charge_id", [`String]);
                     ("product_description", [`String]);
                     ("receipt", [`String]); ("refund_policy", [`String]);
                     ("refund_policy_disclosure", [`String]);
                     ("refund_refusal_explanation", [`String]);
                     ("service_date", [`String]);
                     ("service_documentation", [`String]);
                     ("shipping_address", [`String]);
                     ("shipping_carrier", [`String]);
                     ("shipping_date", [`String]);
                     ("shipping_documentation", [`String]);
                     ("shipping_tracking_number", [`String]);
                     ("uncategorized_file", [`String]);
                     ("uncategorized_text", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("submit", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_defb802725 _lvl ~op ~ctype (_x : t_defb802725) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("lookup_key", let _x = _x.lookup_key in [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("name", let _x = _x.name in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_defb802725) ~op ~ctype _x
  
  and _mk_body_to_t_defb802725 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_defb802725) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("lookup_key", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("name", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_54350e65da _lvl ~op ~ctype (_x : t_54350e65da) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_72a35f88f1 _x -> `ObjectN [("", [`String])]
                        | T_d88e729dd8 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_54350e65da) ~op ~ctype _x
  
  and _mk_body_to_t_54350e65da _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_54350e65da) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_ae77b5e4c1 _lvl ~op ~ctype (_x : t_ae77b5e4c1) =
    _body_of ~kind:(
      `ObjectN
        [("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("issuing_card", match _x.issuing_card with | None -> []
          | Some _x -> [`String]);
         ("nonce", match _x.nonce with | None -> [] | Some _x -> [`String]);
         ("verification_session", match _x.verification_session with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_ae77b5e4c1) ~op ~ctype _x
  
  and _mk_body_to_t_ae77b5e4c1 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_ae77b5e4c1) in _body_to
      ~kind:(`ObjectN
               [("customer", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("issuing_card", [`String]); ("nonce", [`String]);
                ("verification_session", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_4ac062b052 _lvl ~op ~ctype (_x : t_4ac062b052) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_4ac062b052) ~op ~ctype _x
  
  and _mk_body_to_t_4ac062b052 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4ac062b052) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_a43adb5ae7 _lvl ~op ~ctype (_x : t_a43adb5ae7) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer]);
         ("file", let _x = _x.file in [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_0dc97e69b2 _x -> `ObjectN [("", [`String])]
                        | T_7bfa8b5f33 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_a43adb5ae7) ~op ~ctype _x
  
  and _mk_body_to_t_a43adb5ae7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a43adb5ae7) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer]); ("file", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_759a19fa41 _lvl ~op ~ctype (_x : t_759a19fa41) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [match _x with
                        | T_f02c7e3233 _x -> `String
                        | Ptime_t _x -> `Integer
                        | T_7e22b1dbcb _x -> `String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_6ace91d674 _x -> `ObjectN [("", [`String])]
                        | T_14e751dc03 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_759a19fa41) ~op ~ctype _x
  
  and _mk_body_to_t_759a19fa41 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_759a19fa41) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`String;
                                `Integer;
                                `String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_7868c7c4cf _lvl ~op ~ctype (_x : t_7868c7c4cf) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("file", let _x = _x.file in [`String]);
         ("file_link_data", match _x.file_link_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("create", let _x = _x.create in [`Boolean]);
                           ("expires_at", match _x.expires_at with
                            | None -> [] | Some _x -> [`Integer]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [match _x with
                                          | T_8ac0b171f4 _x ->
                                            `ObjectN [("", [`String])]
                                          | T_3363a79145 _x -> `String])]]);
         ("purpose", let _x = _x.purpose in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_7868c7c4cf) ~op ~ctype _x
  
  and _mk_body_to_t_7868c7c4cf _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_7868c7c4cf) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("file", [`String]);
                ("file_link_data",
                 [`ObjectN
                    [("", [`Any]); ("create", [`Boolean]);
                     ("expires_at", [`Integer]);
                     ("metadata", [`ObjectN [("", [`String])];
                                   `String])]]);
                ("purpose", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_6242113b06 _lvl ~op ~ctype (_x : t_6242113b06) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_6242113b06) ~op ~ctype _x
  
  and _mk_body_to_t_6242113b06 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6242113b06) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_6fe3f98c90 _lvl ~op ~ctype (_x : t_6fe3f98c90) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", let _x = _x.features in
          [`Array
             ((List.map (fun (_x : t_5cfc5f2175) -> `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_6fe3f98c90) ~op ~ctype _x
  
  and _mk_body_to_t_6fe3f98c90 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6fe3f98c90) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("features", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_97b90aeba7 _lvl ~op ~ctype (_x : t_97b90aeba7) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", let _x = _x.features in
          [`Array
             ((List.map (fun (_x : t_dc38c295fb) -> `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_97b90aeba7) ~op ~ctype _x
  
  and _mk_body_to_t_97b90aeba7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_97b90aeba7) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("features", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_48a951389d _lvl ~op ~ctype (_x : t_48a951389d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", let _x = _x.features in
          [`Array
             ((List.map (fun (_x : t_625bbbce95) -> `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_48a951389d) ~op ~ctype _x
  
  and _mk_body_to_t_48a951389d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_48a951389d) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("features", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_1c3f01e00e _lvl ~op ~ctype (_x : t_1c3f01e00e) =
    _body_of ~kind:(
      `ObjectN
        [("account_holder", let _x = _x.account_holder in
          [`ObjectN
             [("", [`Any]);
              ("account", match _x.account with | None -> []
               | Some _x -> [`String]);
              ("customer", match _x.customer with | None -> []
               | Some _x -> [`String]);
              ("type", let _x = _x.type_ in [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("filters", match _x.filters with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("countries", match _x.countries with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))])]]);
         ("permissions", let _x = _x.permissions in
          [`Array
             ((List.map (fun (_x : t_a56bd6de76) -> `Singleton (`String)) _x))]);
         ("prefetch", match _x.prefetch with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_08fe862b2c) ->
                              `Singleton (`String)) _x))]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_1c3f01e00e) ~op ~ctype _x
  
  and _mk_body_to_t_1c3f01e00e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_1c3f01e00e) in _body_to
      ~kind:(`ObjectN
               [("account_holder",
                 [`ObjectN
                    [("", [`Any]); ("account", [`String]);
                     ("customer", [`String]); ("type", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("filters",
                 [`ObjectN
                    [("", [`Any]);
                     ("countries", [`Array [(`List (`String))]])]]);
                ("permissions", [`Array [(`List (`String))]]);
                ("prefetch", [`Array [(`List (`String))]]);
                ("return_url", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_5298a074bf _lvl ~op ~ctype (_x : t_5298a074bf) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("payment_method", let _x = _x.payment_method in [`String]);
         ("replacements", let _x = _x.replacements in
          [`Array
             ((List.map (fun (_x : t_81b972c6dc) -> `Singleton (`String)) _x))]);
         ("request", match _x.request with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("body", match _x.body with | None -> []
                            | Some _x -> [`String]);
                           ("headers", match _x.headers with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_9ca71ab4c0) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("name",
                                                       let _x = _x.name in
                                                       [`Null]);
                                                      ("value",
                                                       let _x = _x.value in
                                                       [`Null])])) _x))])]]);
         ("url", let _x = _x.url in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_5298a074bf) ~op ~ctype _x
  
  and _mk_body_to_t_5298a074bf _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5298a074bf) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("payment_method", [`String]);
                ("replacements", [`Array [(`List (`String))]]);
                ("request",
                 [`ObjectN
                    [("", [`Any]); ("body", [`String]);
                     ("headers",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("name", [`Null]);
                                 ("value", [`Null])]))]])]]);
                ("url", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_5f225de92f _lvl ~op ~ctype (_x : t_5f225de92f) =
    _body_of ~kind:(
      `ObjectN
        [("client_reference_id", match _x.client_reference_id with
          | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("options", match _x.options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("document", match _x.document with | None -> []
                            | Some _x -> [match _x with
                                          | T_b44845f79f _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("allowed_types",
                                                match _x.allowed_types with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : t_26eabbc587) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("require_id_number",
                                                match _x.require_id_number with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("require_live_capture",
                                                match _x.require_live_capture with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("require_matching_selfie",
                                                match _x.require_matching_selfie with
                                                | None -> []
                                                | Some _x -> [`Boolean])]
                                          | T_5c5852bd3b _x -> `String])]]);
         ("provided_details", match _x.provided_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String])]]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String]);
         ("verification_flow", match _x.verification_flow with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_5f225de92f) ~op ~ctype _x
  
  and _mk_body_to_t_5f225de92f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5f225de92f) in _body_to
      ~kind:(`ObjectN
               [("client_reference_id", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("options",
                 [`ObjectN
                    [("", [`Any]);
                     ("document",
                      [`ObjectN
                         [("", [`Any]);
                          ("allowed_types", [`Array [(`List (`Null))]]);
                          ("require_id_number", [`Boolean]);
                          ("require_live_capture", [`Boolean]);
                          ("require_matching_selfie", [`Boolean])];
                       `String])]]);
                ("provided_details",
                 [`ObjectN
                    [("", [`Any]); ("email", [`String]);
                     ("phone", [`String])]]);
                ("return_url", [`String]); ("type", [`String]);
                ("verification_flow", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_14ce04311e _lvl ~op ~ctype (_x : t_14ce04311e) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_14ce04311e) ~op ~ctype _x
  
  and _mk_body_to_t_14ce04311e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_14ce04311e) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_727310e605 _lvl ~op ~ctype (_x : t_727310e605) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("options", match _x.options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("document", match _x.document with | None -> []
                            | Some _x -> [match _x with
                                          | T_116882d4b6 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("allowed_types",
                                                match _x.allowed_types with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : t_f89a4c9557) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("require_id_number",
                                                match _x.require_id_number with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("require_live_capture",
                                                match _x.require_live_capture with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("require_matching_selfie",
                                                match _x.require_matching_selfie with
                                                | None -> []
                                                | Some _x -> [`Boolean])]
                                          | T_3476c5b3cc _x -> `String])]]);
         ("provided_details", match _x.provided_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String])]]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_727310e605) ~op ~ctype _x
  
  and _mk_body_to_t_727310e605 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_727310e605) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("options",
                 [`ObjectN
                    [("", [`Any]);
                     ("document",
                      [`ObjectN
                         [("", [`Any]);
                          ("allowed_types", [`Array [(`List (`Null))]]);
                          ("require_id_number", [`Boolean]);
                          ("require_live_capture", [`Boolean]);
                          ("require_matching_selfie", [`Boolean])];
                       `String])]]);
                ("provided_details",
                 [`ObjectN
                    [("", [`Any]); ("email", [`String]);
                     ("phone", [`String])]]);
                ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_208179bd07 _lvl ~op ~ctype (_x : t_208179bd07) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_208179bd07) ~op ~ctype _x
  
  and _mk_body_to_t_208179bd07 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_208179bd07) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_b6ba8d726e _lvl ~op ~ctype (_x : t_b6ba8d726e) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", let _x = _x.customer in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("discountable", match _x.discountable with | None -> []
          | Some _x -> [`Boolean]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_11a1f5c5d2 _x ->
                          `Array
                            ((List.map (fun (_x : t_dcecc195ab) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_aabb3c6271 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice", match _x.invoice with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_4d095faabd _x -> `ObjectN [("", [`String])]
                        | T_fb9414b453 _x -> `String]);
         ("period", match _x.period with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end", let _x = _x.end_ in [`Integer]);
                           ("start", let _x = _x.start in [`Integer])]]);
         ("price", match _x.price with | None -> [] | Some _x -> [`String]);
         ("price_data", match _x.price_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("product", let _x = _x.product in [`String]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("unit_amount", match _x.unit_amount with
                            | None -> [] | Some _x -> [`Integer]);
                           ("unit_amount_decimal",
                            match _x.unit_amount_decimal with | None -> []
                            | Some _x -> [`String])]]);
         ("quantity", match _x.quantity with | None -> []
          | Some _x -> [`Integer]);
         ("subscription", match _x.subscription with | None -> []
          | Some _x -> [`String]);
         ("tax_behavior", match _x.tax_behavior with | None -> []
          | Some _x -> [`String]);
         ("tax_code", match _x.tax_code with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_a0cb8d9158 _x -> `String]);
         ("tax_rates", match _x.tax_rates with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("unit_amount", match _x.unit_amount with | None -> []
          | Some _x -> [`Integer]);
         ("unit_amount_decimal", match _x.unit_amount_decimal with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_b6ba8d726e) ~op ~ctype _x
  
  and _mk_body_to_t_b6ba8d726e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b6ba8d726e) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("customer", [`String]); ("description", [`String]);
                ("discountable", [`Boolean]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("period",
                 [`ObjectN
                    [("", [`Any]); ("end", [`Integer]);
                     ("start", [`Integer])]]);
                ("price", [`String]);
                ("price_data",
                 [`ObjectN
                    [("", [`Any]); ("currency", [`String]);
                     ("product", [`String]); ("tax_behavior", [`String]);
                     ("unit_amount", [`Integer]);
                     ("unit_amount_decimal", [`String])]]);
                ("quantity", [`Integer]); ("subscription", [`String]);
                ("tax_behavior", [`String]);
                ("tax_code", [`String;
                              `String]);
                ("tax_rates", [`Array [(`List (`String))]]);
                ("unit_amount", [`Integer]);
                ("unit_amount_decimal", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_3c4f9109b8 _lvl ~op ~ctype (_x : t_3c4f9109b8) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("discountable", match _x.discountable with | None -> []
          | Some _x -> [`Boolean]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_3dd7e721b9 _x ->
                          `Array
                            ((List.map (fun (_x : t_748e89ca55) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_863a31d418 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_f27a1563a6 _x -> `ObjectN [("", [`String])]
                        | T_215f417cea _x -> `String]);
         ("period", match _x.period with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end", let _x = _x.end_ in [`Integer]);
                           ("start", let _x = _x.start in [`Integer])]]);
         ("price", match _x.price with | None -> [] | Some _x -> [`String]);
         ("price_data", match _x.price_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("product", let _x = _x.product in [`String]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("unit_amount", match _x.unit_amount with
                            | None -> [] | Some _x -> [`Integer]);
                           ("unit_amount_decimal",
                            match _x.unit_amount_decimal with | None -> []
                            | Some _x -> [`String])]]);
         ("quantity", match _x.quantity with | None -> []
          | Some _x -> [`Integer]);
         ("tax_behavior", match _x.tax_behavior with | None -> []
          | Some _x -> [`String]);
         ("tax_code", match _x.tax_code with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_549db614fa _x -> `String]);
         ("tax_rates", match _x.tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_53a0c30e5d _x -> `String]);
         ("unit_amount", match _x.unit_amount with | None -> []
          | Some _x -> [`Integer]);
         ("unit_amount_decimal", match _x.unit_amount_decimal with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_3c4f9109b8) ~op ~ctype _x
  
  and _mk_body_to_t_3c4f9109b8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3c4f9109b8) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("description", [`String]);
                ("discountable", [`Boolean]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("period",
                 [`ObjectN
                    [("", [`Any]); ("end", [`Integer]);
                     ("start", [`Integer])]]);
                ("price", [`String]);
                ("price_data",
                 [`ObjectN
                    [("", [`Any]); ("currency", [`String]);
                     ("product", [`String]); ("tax_behavior", [`String]);
                     ("unit_amount", [`Integer]);
                     ("unit_amount_decimal", [`String])]]);
                ("quantity", [`Integer]); ("tax_behavior", [`String]);
                ("tax_code", [`String;
                              `String]);
                ("tax_rates", [`Array [(`List (`String))];
                               `String]);
                ("unit_amount", [`Integer]);
                ("unit_amount_decimal", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_fa9ecaf73f _lvl ~op ~ctype (_x : t_fa9ecaf73f) =
    _body_of ~kind:(
      `ObjectN
        [("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("coupon", match _x.coupon with | None -> [] | Some _x -> [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("customer_details", match _x.customer_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [match _x with
                                          | T_37ff2641df _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("city", match _x.city with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("country",
                                                match _x.country with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("line1", match _x.line1 with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("line2", match _x.line2 with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("postal_code",
                                                match _x.postal_code with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("state", match _x.state with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_79fe9d634d _x -> `String]);
                           ("shipping", match _x.shipping with | None -> []
                            | Some _x -> [match _x with
                                          | T_ed1cd6d168 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("address",
                                                let _x = _x.address in
                                                [`ObjectN
                                                   [("", [`Null]);
                                                    ("city",
                                                     match _x.city with
                                                     | None -> []
                                                     | Some _x -> [`Null]);
                                                    ("country",
                                                     match _x.country with
                                                     | None -> []
                                                     | Some _x -> [`Null]);
                                                    ("line1",
                                                     match _x.line1 with
                                                     | None -> []
                                                     | Some _x -> [`Null]);
                                                    ("line2",
                                                     match _x.line2 with
                                                     | None -> []
                                                     | Some _x -> [`Null]);
                                                    ("postal_code",
                                                     match _x.postal_code with
                                                     | None -> []
                                                     | Some _x -> [`Null]);
                                                    ("state",
                                                     match _x.state with
                                                     | None -> []
                                                     | Some _x -> [`Null])]]);
                                               ("name", let _x = _x.name in
                                                [`String]);
                                               ("phone", match _x.phone with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_c2f553edd7 _x -> `String]);
                           ("tax", match _x.tax with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("ip_address",
                                              match _x.ip_address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_aafd0ede7b _x ->
                                                              `String])]]);
                           ("tax_exempt", match _x.tax_exempt with
                            | None -> [] | Some _x -> [`String]);
                           ("tax_ids", match _x.tax_ids with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_e1652f6822) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("type",
                                                       let _x = _x.type_ in
                                                       [`Null]);
                                                      ("value",
                                                       let _x = _x.value in
                                                       [`Null])])) _x))])]]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_5ac5f082c2 _x ->
                          `Array
                            ((List.map (fun (_x : t_85465ea038) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_c4936ace58 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_items", match _x.invoice_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_301c75dcce) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("amount", match _x.amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("currency", match _x.currency with
                                     | None -> [] | Some _x -> [`String]);
                                    ("description", match _x.description with
                                     | None -> [] | Some _x -> [`String]);
                                    ("discountable",
                                     match _x.discountable with | None -> []
                                     | Some _x -> [`Boolean]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_fa077bfaa2 _x -> `Null
                                                   | T_6c10d0613f _x -> `Null]);
                                    ("invoiceitem", match _x.invoiceitem with
                                     | None -> [] | Some _x -> [`String]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_489124378b _x -> `Null
                                                   | T_7448b49cc9 _x -> `Null]);
                                    ("period", match _x.period with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("end",
                                                       let _x = _x.end_ in
                                                       [`Null]);
                                                      ("start",
                                                       let _x = _x.start in
                                                       [`Null])]]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_behavior",
                                     match _x.tax_behavior with | None -> []
                                     | Some _x -> [`String]);
                                    ("tax_code", match _x.tax_code with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | String_ _x -> `Null
                                                   | T_e0f5be91e9 _x -> `Null]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_4d823fc174 _x -> `Null]);
                                    ("unit_amount", match _x.unit_amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("unit_amount_decimal",
                                     match _x.unit_amount_decimal with
                                     | None -> [] | Some _x -> [`String])]))
                              _x))]);
         ("issuer", match _x.issuer with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`String]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_bae0208499 _x -> `String]);
         ("preview_mode", match _x.preview_mode with | None -> []
          | Some _x -> [`String]);
         ("schedule", match _x.schedule with | None -> []
          | Some _x -> [`String]);
         ("schedule_details", match _x.schedule_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end_behavior", match _x.end_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("phases", match _x.phases with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_73160d9645) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("add_invoice_items",
                                                       match _x.add_invoice_items with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("application_fee_percent",
                                                       match _x.application_fee_percent with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("automatic_tax",
                                                       match _x.automatic_tax with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("billing_cycle_anchor",
                                                       match _x.billing_cycle_anchor with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("billing_thresholds",
                                                       match _x.billing_thresholds with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("collection_method",
                                                       match _x.collection_method with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("coupon",
                                                       match _x.coupon with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("default_payment_method",
                                                       match _x.default_payment_method with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("default_tax_rates",
                                                       match _x.default_tax_rates with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("description",
                                                       match _x.description with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("discounts",
                                                       match _x.discounts with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("end_date",
                                                       match _x.end_date with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("invoice_settings",
                                                       match _x.invoice_settings with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("items",
                                                       let _x = _x.items in
                                                       [`Null]);
                                                      ("iterations",
                                                       match _x.iterations with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("metadata",
                                                       match _x.metadata with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("on_behalf_of",
                                                       match _x.on_behalf_of with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("proration_behavior",
                                                       match _x.proration_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("start_date",
                                                       match _x.start_date with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("transfer_data",
                                                       match _x.transfer_data with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("trial",
                                                       match _x.trial with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("trial_end",
                                                       match _x.trial_end with
                                                       | None -> []
                                                       | Some _x -> [`Null])]))
                                                _x))]);
                           ("proration_behavior",
                            match _x.proration_behavior with | None -> []
                            | Some _x -> [`String])]]);
         ("subscription", match _x.subscription with | None -> []
          | Some _x -> [`String]);
         ("subscription_details", match _x.subscription_details with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("billing_cycle_anchor",
                            match _x.billing_cycle_anchor with | None -> []
                            | Some _x -> [match _x with
                                          | T_fdc54b8561 _x -> `String
                                          | Ptime_t _x -> `Integer]);
                           ("cancel_at", match _x.cancel_at with | None -> []
                            | Some _x -> [match _x with
                                          | Ptime_t _x -> `Integer
                                          | T_bda942b7fd _x -> `String]);
                           ("cancel_at_period_end",
                            match _x.cancel_at_period_end with | None -> []
                            | Some _x -> [`Boolean]);
                           ("cancel_now", match _x.cancel_now with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("default_tax_rates",
                            match _x.default_tax_rates with | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_5670b1e605 _x -> `String]);
                           ("items", match _x.items with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_10dc619f63) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("billing_thresholds",
                                                       match _x.billing_thresholds with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("clear_usage",
                                                       match _x.clear_usage with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("deleted",
                                                       match _x.deleted with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("discounts",
                                                       match _x.discounts with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("id", match _x.id with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("metadata",
                                                       match _x.metadata with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("price",
                                                       match _x.price with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("price_data",
                                                       match _x.price_data with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("quantity",
                                                       match _x.quantity with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("tax_rates",
                                                       match _x.tax_rates with
                                                       | None -> []
                                                       | Some _x -> [`Null])]))
                                                _x))]);
                           ("proration_behavior",
                            match _x.proration_behavior with | None -> []
                            | Some _x -> [`String]);
                           ("proration_date", match _x.proration_date with
                            | None -> [] | Some _x -> [`Integer]);
                           ("resume_at", match _x.resume_at with | None -> []
                            | Some _x -> [`String]);
                           ("start_date", match _x.start_date with
                            | None -> [] | Some _x -> [`Integer]);
                           ("trial_end", match _x.trial_end with | None -> []
                            | Some _x -> [match _x with
                                          | T_04c463fea1 _x -> `String
                                          | Ptime_t _x -> `Integer])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_fa9ecaf73f) ~op ~ctype _x
  
  and _mk_body_to_t_fa9ecaf73f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fa9ecaf73f) in _body_to
      ~kind:(`ObjectN
               [("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("coupon", [`String]); ("currency", [`String]);
                ("customer", [`String]);
                ("customer_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])];
                       `String]);
                     ("shipping",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])]]);
                          ("name", [`String]); ("phone", [`String])];
                       `String]);
                     ("tax",
                      [`ObjectN
                         [("", [`Any]); ("ip_address", [`String;
                                                        `String])]]);
                     ("tax_exempt", [`String]);
                     ("tax_ids",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("type", [`Null]);
                                 ("value", [`Null])]))]])]]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("amount", [`Integer]);
                            ("currency", [`String]);
                            ("description", [`String]);
                            ("discountable", [`Boolean]);
                            ("discounts", [`Null;
                                           `Null]);
                            ("invoiceitem", [`String]);
                            ("metadata", [`Null;
                                          `Null]);
                            ("period",
                             [`ObjectN
                                [("", [`Null]); ("end", [`Null]);
                                 ("start", [`Null])]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_behavior", [`String]);
                            ("tax_code", [`Null;
                                          `Null]);
                            ("tax_rates", [`Null;
                                           `Null]);
                            ("unit_amount", [`Integer]);
                            ("unit_amount_decimal", [`String])]))]]);
                ("issuer",
                 [`ObjectN
                    [("", [`Any]); ("account", [`String]);
                     ("type", [`String])]]);
                ("on_behalf_of", [`String;
                                  `String]);
                ("preview_mode", [`String]); ("schedule", [`String]);
                ("schedule_details",
                 [`ObjectN
                    [("", [`Any]); ("end_behavior", [`String]);
                     ("phases",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]);
                                 ("add_invoice_items", [`Null]);
                                 ("application_fee_percent", [`Null]);
                                 ("automatic_tax", [`Null]);
                                 ("billing_cycle_anchor", [`Null]);
                                 ("billing_thresholds", [`Null]);
                                 ("collection_method", [`Null]);
                                 ("coupon", [`Null]);
                                 ("default_payment_method", [`Null]);
                                 ("default_tax_rates", [`Null]);
                                 ("description", [`Null]);
                                 ("discounts", [`Null]);
                                 ("end_date", [`Null]);
                                 ("invoice_settings", [`Null]);
                                 ("items", [`Null]); ("iterations", [`Null]);
                                 ("metadata", [`Null]);
                                 ("on_behalf_of", [`Null]);
                                 ("proration_behavior", [`Null]);
                                 ("start_date", [`Null]);
                                 ("transfer_data", [`Null]);
                                 ("trial", [`Null]); ("trial_end", [`Null])]))]]);
                     ("proration_behavior", [`String])]]);
                ("subscription", [`String]);
                ("subscription_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("billing_cycle_anchor", [`String;
                                               `Integer]);
                     ("cancel_at", [`Integer;
                                    `String]);
                     ("cancel_at_period_end", [`Boolean]);
                     ("cancel_now", [`Boolean]);
                     ("default_tax_rates",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("items",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]);
                                 ("billing_thresholds", [`Null]);
                                 ("clear_usage", [`Null]);
                                 ("deleted", [`Null]);
                                 ("discounts", [`Null]); ("id", [`Null]);
                                 ("metadata", [`Null]); ("price", [`Null]);
                                 ("price_data", [`Null]);
                                 ("quantity", [`Null]);
                                 ("tax_rates", [`Null])]))]]);
                     ("proration_behavior", [`String]);
                     ("proration_date", [`Integer]);
                     ("resume_at", [`String]); ("start_date", [`Integer]);
                     ("trial_end", [`String;
                                    `Integer])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_d7648dc25d _lvl ~op ~ctype (_x : t_d7648dc25d) =
    _body_of ~kind:(
      `ObjectN
        [("account_tax_ids", match _x.account_tax_ids with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_63487b1e2c _x -> `String]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("auto_advance", match _x.auto_advance with | None -> []
          | Some _x -> [`Boolean]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("custom_fields", match _x.custom_fields with | None -> []
          | Some _x -> [match _x with
                        | T_f8371d5564 _x ->
                          `Array
                            ((List.map (fun (_x : t_33d9d8de7f) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("name", let _x = _x.name in [`Null]);
                                      ("value", let _x = _x.value in [`Null])]))
                                _x))
                        | T_47d5250a1c _x -> `String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("days_until_due", match _x.days_until_due with | None -> []
          | Some _x -> [`Integer]);
         ("default_payment_method", match _x.default_payment_method with
          | None -> [] | Some _x -> [`String]);
         ("default_source", match _x.default_source with | None -> []
          | Some _x -> [`String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_fa8ef9f7d9 _x ->
                          `Array
                            ((List.map (fun (_x : t_083cae772e) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_9a0a750ce3 _x -> `String]);
         ("due_date", match _x.due_date with | None -> []
          | Some _x -> [`Integer]);
         ("effective_at", match _x.effective_at with | None -> []
          | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("footer", match _x.footer with | None -> [] | Some _x -> [`String]);
         ("from_invoice", match _x.from_invoice with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("action", let _x = _x.action in [`String]);
                           ("invoice", let _x = _x.invoice in [`String])]]);
         ("issuer", match _x.issuer with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`String]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_12466fab3d _x -> `ObjectN [("", [`String])]
                        | T_81a5d1ccb1 _x -> `String]);
         ("number", match _x.number with | None -> [] | Some _x -> [`String]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [`String]);
         ("payment_settings", match _x.payment_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("default_mandate", match _x.default_mandate with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_15d23ade64 _x -> `String]);
                           ("payment_method_options",
                            match _x.payment_method_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("acss_debit",
                                              match _x.acss_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_ab1c80160a _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_2a5bfe6aa9 _x ->
                                                              `String]);
                                             ("bancontact",
                                              match _x.bancontact with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_b8f4588558 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("preferred_language",
                                                                  match _x.preferred_language with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_91afab95c8 _x ->
                                                              `String]);
                                             ("card", match _x.card with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_888a042380 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("installments",
                                                                  match _x.installments with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("request_three_d_secure",
                                                                  match _x.request_three_d_secure with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_7a034b221b _x ->
                                                              `String]);
                                             ("customer_balance",
                                              match _x.customer_balance with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_947491f23d _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("bank_transfer",
                                                                  match _x.bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("funding_type",
                                                                  match _x.funding_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_664f45ff38 _x ->
                                                              `String]);
                                             ("konbini",
                                              match _x.konbini with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_ff6d58da82 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_27e654b655 _x ->
                                                              `String]);
                                             ("sepa_debit",
                                              match _x.sepa_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_f816af0387 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_5a80673fb7 _x ->
                                                              `String]);
                                             ("us_bank_account",
                                              match _x.us_bank_account with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_990c23254e _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("financial_connections",
                                                                  match _x.financial_connections with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_071490923c _x ->
                                                              `String])]]);
                           ("payment_method_types",
                            match _x.payment_method_types with | None -> []
                            | Some _x -> [match _x with
                                          | T_eee66c1803 _x ->
                                            `Array
                                              ((List.map (fun (_x : t_a0182b1caa) ->
                                                  `Singleton (`Null)) _x))
                                          | T_6cad041bf6 _x -> `String])]]);
         ("pending_invoice_items_behavior",
          match _x.pending_invoice_items_behavior with | None -> []
          | Some _x -> [`String]);
         ("rendering", match _x.rendering with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount_tax_display",
                            match _x.amount_tax_display with | None -> []
                            | Some _x -> [`String]);
                           ("pdf", match _x.pdf with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("page_size",
                                              match _x.page_size with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("shipping_cost", match _x.shipping_cost with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("shipping_rate", match _x.shipping_rate with
                            | None -> [] | Some _x -> [`String]);
                           ("shipping_rate_data",
                            match _x.shipping_rate_data with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("delivery_estimate",
                                              match _x.delivery_estimate with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("maximum",
                                                                match _x.maximum with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("unit",
                                                                    let _x = _x.unit in
                                                                    [`Null]);
                                                                   ("value",
                                                                    let _x = _x.value in
                                                                    [`Null])]]);
                                                               ("minimum",
                                                                match _x.minimum with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("unit",
                                                                    let _x = _x.unit in
                                                                    [`Null]);
                                                                   ("value",
                                                                    let _x = _x.value in
                                                                    [`Null])]])]]);
                                             ("display_name",
                                              let _x = _x.display_name in
                                              [`String]);
                                             ("fixed_amount",
                                              match _x.fixed_amount with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("amount",
                                                                let _x = _x.amount in
                                                                [`Integer]);
                                                               ("currency",
                                                                let _x = _x.currency in
                                                                [`String]);
                                                               ("currency_options",
                                                                match _x.currency_options with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null])]])]]);
                                             ("metadata",
                                              match _x.metadata with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("",
                                                                [`String])]]);
                                             ("tax_behavior",
                                              match _x.tax_behavior with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("tax_code",
                                              match _x.tax_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", match _x.type_ with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("shipping_details", match _x.shipping_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", match _x.city with | None -> []
                                 | Some _x -> [`String]);
                                ("country", match _x.country with
                                 | None -> [] | Some _x -> [`String]);
                                ("line1", match _x.line1 with | None -> []
                                 | Some _x -> [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", match _x.postal_code with
                                 | None -> [] | Some _x -> [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]]);
                           ("name", let _x = _x.name in [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_f23db46393 _x -> `String])]]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("subscription", match _x.subscription with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer]);
                           ("destination", let _x = _x.destination in
                            [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_d7648dc25d) ~op ~ctype _x
  
  and _mk_body_to_t_d7648dc25d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d7648dc25d) in _body_to
      ~kind:(`ObjectN
               [("account_tax_ids", [`Array [(`List (`String))];
                                     `String]);
                ("application_fee_amount", [`Integer]);
                ("auto_advance", [`Boolean]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("collection_method", [`String]); ("currency", [`String]);
                ("custom_fields",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("name", [`Null]);
                            ("value", [`Null])]))];
                  `String]);
                ("customer", [`String]); ("days_until_due", [`Integer]);
                ("default_payment_method", [`String]);
                ("default_source", [`String]);
                ("default_tax_rates", [`Array [(`List (`String))]]);
                ("description", [`String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("due_date", [`Integer]); ("effective_at", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("footer", [`String]);
                ("from_invoice",
                 [`ObjectN
                    [("", [`Any]); ("action", [`String]);
                     ("invoice", [`String])]]);
                ("issuer",
                 [`ObjectN
                    [("", [`Any]); ("account", [`String]);
                     ("type", [`String])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("number", [`String]); ("on_behalf_of", [`String]);
                ("payment_settings",
                 [`ObjectN
                    [("", [`Any]); ("default_mandate", [`String;
                                                        `String]);
                     ("payment_method_options",
                      [`ObjectN
                         [("", [`Any]);
                          ("acss_debit",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("verification_method", [`Null])];
                            `String]);
                          ("bancontact",
                           [`ObjectN
                              [("", [`Null]);
                               ("preferred_language", [`Null])];
                            `String]);
                          ("card",
                           [`ObjectN
                              [("", [`Null]); ("installments", [`Null]);
                               ("request_three_d_secure", [`Null])];
                            `String]);
                          ("customer_balance",
                           [`ObjectN
                              [("", [`Null]); ("bank_transfer", [`Null]);
                               ("funding_type", [`Null])];
                            `String]);
                          ("konbini", [`ObjectN [("", [`Null])];
                                       `String]);
                          ("sepa_debit", [`ObjectN [("", [`Null])];
                                          `String]);
                          ("us_bank_account",
                           [`ObjectN
                              [("", [`Null]);
                               ("financial_connections", [`Null]);
                               ("verification_method", [`Null])];
                            `String])]]);
                     ("payment_method_types",
                      [`Array [(`List (`Null))];
                       `String])]]);
                ("pending_invoice_items_behavior", [`String]);
                ("rendering",
                 [`ObjectN
                    [("", [`Any]); ("amount_tax_display", [`String]);
                     ("pdf",
                      [`ObjectN [("", [`Any]); ("page_size", [`String])]])]]);
                ("shipping_cost",
                 [`ObjectN
                    [("", [`Any]); ("shipping_rate", [`String]);
                     ("shipping_rate_data",
                      [`ObjectN
                         [("", [`Any]);
                          ("delivery_estimate",
                           [`ObjectN
                              [("", [`Any]);
                               ("maximum",
                                [`ObjectN
                                   [("", [`Null]); ("unit", [`Null]);
                                    ("value", [`Null])]]);
                               ("minimum",
                                [`ObjectN
                                   [("", [`Null]); ("unit", [`Null]);
                                    ("value", [`Null])]])]]);
                          ("display_name", [`String]);
                          ("fixed_amount",
                           [`ObjectN
                              [("", [`Any]); ("amount", [`Integer]);
                               ("currency", [`String]);
                               ("currency_options",
                                [`ObjectN [("", [`Null])]])]]);
                          ("metadata", [`ObjectN [("", [`String])]]);
                          ("tax_behavior", [`String]);
                          ("tax_code", [`String]); ("type", [`String])]])]]);
                ("shipping_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("name", [`String]); ("phone", [`String;
                                                     `String])]]);
                ("statement_descriptor", [`String]);
                ("subscription", [`String]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("destination", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_5906ed3d1a _lvl ~op ~ctype (_x : t_5906ed3d1a) =
    _body_of ~kind:(
      `ObjectN
        [("auto_advance", match _x.auto_advance with | None -> []
          | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_5906ed3d1a) ~op ~ctype _x
  
  and _mk_body_to_t_5906ed3d1a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5906ed3d1a) in _body_to
      ~kind:(`ObjectN
               [("auto_advance", [`Boolean]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_5ff765fb6a _lvl ~op ~ctype (_x : t_5ff765fb6a) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("discountable", match _x.discountable with | None -> []
          | Some _x -> [`Boolean]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_6ed4e2f7e1 _x ->
                          `Array
                            ((List.map (fun (_x : t_42a2b7c5d9) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_d763c4d1ed _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_1dd980795e _x -> `ObjectN [("", [`String])]
                        | T_ad4673448b _x -> `String]);
         ("period", match _x.period with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end", let _x = _x.end_ in [`Integer]);
                           ("start", let _x = _x.start in [`Integer])]]);
         ("price", match _x.price with | None -> [] | Some _x -> [`String]);
         ("price_data", match _x.price_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("product", match _x.product with | None -> []
                            | Some _x -> [`String]);
                           ("product_data", match _x.product_data with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("description",
                                              match _x.description with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("images", match _x.images with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : string) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))]);
                                             ("metadata",
                                              match _x.metadata with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("",
                                                                [`String])]]);
                                             ("name", let _x = _x.name in
                                              [`String]);
                                             ("tax_code",
                                              match _x.tax_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("unit_amount", match _x.unit_amount with
                            | None -> [] | Some _x -> [`Integer]);
                           ("unit_amount_decimal",
                            match _x.unit_amount_decimal with | None -> []
                            | Some _x -> [`String])]]);
         ("quantity", match _x.quantity with | None -> []
          | Some _x -> [`Integer]);
         ("tax_amounts", match _x.tax_amounts with | None -> []
          | Some _x -> [match _x with
                        | T_49124bab06 _x ->
                          `Array
                            ((List.map (fun (_x : t_7847f043f0) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("amount", let _x = _x.amount in
                                       [`Null]);
                                      ("tax_rate_data",
                                       let _x = _x.tax_rate_data in [`Null]);
                                      ("taxable_amount",
                                       let _x = _x.taxable_amount in [`Null])]))
                                _x))
                        | T_f0b8422237 _x -> `String]);
         ("tax_rates", match _x.tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_a2dff5db24 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_5ff765fb6a) ~op ~ctype _x
  
  and _mk_body_to_t_5ff765fb6a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5ff765fb6a) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("description", [`String]);
                ("discountable", [`Boolean]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("period",
                 [`ObjectN
                    [("", [`Any]); ("end", [`Integer]);
                     ("start", [`Integer])]]);
                ("price", [`String]);
                ("price_data",
                 [`ObjectN
                    [("", [`Any]); ("currency", [`String]);
                     ("product", [`String]);
                     ("product_data",
                      [`ObjectN
                         [("", [`Any]); ("description", [`String]);
                          ("images", [`Array [(`List (`Null))]]);
                          ("metadata", [`ObjectN [("", [`String])]]);
                          ("name", [`String]); ("tax_code", [`String])]]);
                     ("tax_behavior", [`String]);
                     ("unit_amount", [`Integer]);
                     ("unit_amount_decimal", [`String])]]);
                ("quantity", [`Integer]);
                ("tax_amounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("amount", [`Null]);
                            ("tax_rate_data", [`Null]);
                            ("taxable_amount", [`Null])]))];
                  `String]);
                ("tax_rates", [`Array [(`List (`String))];
                               `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_358ebf3f8d _lvl ~op ~ctype (_x : t_358ebf3f8d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_358ebf3f8d) ~op ~ctype _x
  
  and _mk_body_to_t_358ebf3f8d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_358ebf3f8d) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_2a7f4d2fcb _lvl ~op ~ctype (_x : t_2a7f4d2fcb) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("forgive", match _x.forgive with | None -> []
          | Some _x -> [`Boolean]);
         ("mandate", match _x.mandate with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_eb01644363 _x -> `String]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [`Boolean]);
         ("paid_out_of_band", match _x.paid_out_of_band with | None -> []
          | Some _x -> [`Boolean]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_2a7f4d2fcb) ~op ~ctype _x
  
  and _mk_body_to_t_2a7f4d2fcb _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2a7f4d2fcb) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("forgive", [`Boolean]); ("mandate", [`String;
                                                      `String]);
                ("off_session", [`Boolean]);
                ("paid_out_of_band", [`Boolean]);
                ("payment_method", [`String]); ("source", [`String])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_1b35351ad0 _lvl ~op ~ctype (_x : t_1b35351ad0) =
    _body_of ~kind:(
      `ObjectN
        [("account_tax_ids", match _x.account_tax_ids with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_cea0d92fd7 _x -> `String]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("auto_advance", match _x.auto_advance with | None -> []
          | Some _x -> [`Boolean]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("custom_fields", match _x.custom_fields with | None -> []
          | Some _x -> [match _x with
                        | T_e60d0aadaf _x ->
                          `Array
                            ((List.map (fun (_x : t_912aba3f4a) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("name", let _x = _x.name in [`Null]);
                                      ("value", let _x = _x.value in [`Null])]))
                                _x))
                        | T_c912740bd5 _x -> `String]);
         ("days_until_due", match _x.days_until_due with | None -> []
          | Some _x -> [`Integer]);
         ("default_payment_method", match _x.default_payment_method with
          | None -> [] | Some _x -> [`String]);
         ("default_source", match _x.default_source with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_06d7517b71 _x -> `String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_edd9d89316 _x -> `String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_10478e45a5 _x ->
                          `Array
                            ((List.map (fun (_x : t_41e0134dcd) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_3c09b598a0 _x -> `String]);
         ("due_date", match _x.due_date with | None -> []
          | Some _x -> [`Integer]);
         ("effective_at", match _x.effective_at with | None -> []
          | Some _x -> [match _x with
                        | Ptime_t _x -> `Integer
                        | T_77cd519851 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("footer", match _x.footer with | None -> [] | Some _x -> [`String]);
         ("issuer", match _x.issuer with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`String]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_b7819f410a _x -> `ObjectN [("", [`String])]
                        | T_cee3e95d51 _x -> `String]);
         ("number", match _x.number with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_43123283cb _x -> `String]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_bafe6641b5 _x -> `String]);
         ("payment_settings", match _x.payment_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("default_mandate", match _x.default_mandate with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_5853c57f4e _x -> `String]);
                           ("payment_method_options",
                            match _x.payment_method_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("acss_debit",
                                              match _x.acss_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_e991a850b3 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_a53a0efe9e _x ->
                                                              `String]);
                                             ("bancontact",
                                              match _x.bancontact with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_7a5398996a _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("preferred_language",
                                                                  match _x.preferred_language with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_b2f32e9af9 _x ->
                                                              `String]);
                                             ("card", match _x.card with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_863dc343d0 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("installments",
                                                                  match _x.installments with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("request_three_d_secure",
                                                                  match _x.request_three_d_secure with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_16f874eaad _x ->
                                                              `String]);
                                             ("customer_balance",
                                              match _x.customer_balance with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_8131db6d86 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("bank_transfer",
                                                                  match _x.bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("funding_type",
                                                                  match _x.funding_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_fb20703ca7 _x ->
                                                              `String]);
                                             ("konbini",
                                              match _x.konbini with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_1dc7b6ea40 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_1e25e52cd3 _x ->
                                                              `String]);
                                             ("sepa_debit",
                                              match _x.sepa_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_36bcd38479 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_8839f9d173 _x ->
                                                              `String]);
                                             ("us_bank_account",
                                              match _x.us_bank_account with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_3fb3370a8b _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("financial_connections",
                                                                  match _x.financial_connections with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_f56bb56f4b _x ->
                                                              `String])]]);
                           ("payment_method_types",
                            match _x.payment_method_types with | None -> []
                            | Some _x -> [match _x with
                                          | T_5b68dbba76 _x ->
                                            `Array
                                              ((List.map (fun (_x : t_e020ae5147) ->
                                                  `Singleton (`Null)) _x))
                                          | T_0f47de0405 _x -> `String])]]);
         ("rendering", match _x.rendering with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount_tax_display",
                            match _x.amount_tax_display with | None -> []
                            | Some _x -> [`String]);
                           ("pdf", match _x.pdf with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("page_size",
                                              match _x.page_size with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("shipping_cost", match _x.shipping_cost with | None -> []
          | Some _x -> [match _x with
                        | T_9616fc62cc _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("shipping_rate", match _x.shipping_rate with
                              | None -> [] | Some _x -> [`String]);
                             ("shipping_rate_data",
                              match _x.shipping_rate_data with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("delivery_estimate",
                                                match _x.delivery_estimate with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("maximum",
                                                                  match _x.maximum with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("minimum",
                                                                  match _x.minimum with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("display_name",
                                                let _x = _x.display_name in
                                                [`String]);
                                               ("fixed_amount",
                                                match _x.fixed_amount with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("amount",
                                                                  let _x = _x.amount in
                                                                  [`Null]);
                                                                 ("currency",
                                                                  let _x = _x.currency in
                                                                  [`Null]);
                                                                 ("currency_options",
                                                                  match _x.currency_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("metadata",
                                                match _x.metadata with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null])]]);
                                               ("tax_behavior",
                                                match _x.tax_behavior with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("tax_code",
                                                match _x.tax_code with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("type", match _x.type_ with
                                                | None -> []
                                                | Some _x -> [`String])]])]
                        | T_aa9ea91ba3 _x -> `String]);
         ("shipping_details", match _x.shipping_details with | None -> []
          | Some _x -> [match _x with
                        | T_a10dfb2efa _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address", let _x = _x.address in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("city", match _x.city with | None -> []
                                   | Some _x -> [`String]);
                                  ("country", match _x.country with
                                   | None -> [] | Some _x -> [`String]);
                                  ("line1", match _x.line1 with | None -> []
                                   | Some _x -> [`String]);
                                  ("line2", match _x.line2 with | None -> []
                                   | Some _x -> [`String]);
                                  ("postal_code", match _x.postal_code with
                                   | None -> [] | Some _x -> [`String]);
                                  ("state", match _x.state with | None -> []
                                   | Some _x -> [`String])]]);
                             ("name", let _x = _x.name in [`String]);
                             ("phone", match _x.phone with | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_98deb84d73 _x -> `String])]
                        | T_20de1daa4c _x -> `String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [match _x with
                        | T_d78ea453d5 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount", match _x.amount with | None -> []
                              | Some _x -> [`Integer]);
                             ("destination", let _x = _x.destination in
                              [`String])]
                        | T_561204b4e0 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_1b35351ad0) ~op ~ctype _x
  
  and _mk_body_to_t_1b35351ad0 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_1b35351ad0) in _body_to
      ~kind:(`ObjectN
               [("account_tax_ids", [`Array [(`List (`String))];
                                     `String]);
                ("application_fee_amount", [`Integer]);
                ("auto_advance", [`Boolean]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("collection_method", [`String]);
                ("custom_fields",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("name", [`Null]);
                            ("value", [`Null])]))];
                  `String]);
                ("days_until_due", [`Integer]);
                ("default_payment_method", [`String]);
                ("default_source", [`String;
                                    `String]);
                ("default_tax_rates", [`Array [(`List (`String))];
                                       `String]);
                ("description", [`String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("due_date", [`Integer]);
                ("effective_at", [`Integer;
                                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("footer", [`String]);
                ("issuer",
                 [`ObjectN
                    [("", [`Any]); ("account", [`String]);
                     ("type", [`String])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("number", [`String;
                            `String]);
                ("on_behalf_of", [`String;
                                  `String]);
                ("payment_settings",
                 [`ObjectN
                    [("", [`Any]); ("default_mandate", [`String;
                                                        `String]);
                     ("payment_method_options",
                      [`ObjectN
                         [("", [`Any]);
                          ("acss_debit",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("verification_method", [`Null])];
                            `String]);
                          ("bancontact",
                           [`ObjectN
                              [("", [`Null]);
                               ("preferred_language", [`Null])];
                            `String]);
                          ("card",
                           [`ObjectN
                              [("", [`Null]); ("installments", [`Null]);
                               ("request_three_d_secure", [`Null])];
                            `String]);
                          ("customer_balance",
                           [`ObjectN
                              [("", [`Null]); ("bank_transfer", [`Null]);
                               ("funding_type", [`Null])];
                            `String]);
                          ("konbini", [`ObjectN [("", [`Null])];
                                       `String]);
                          ("sepa_debit", [`ObjectN [("", [`Null])];
                                          `String]);
                          ("us_bank_account",
                           [`ObjectN
                              [("", [`Null]);
                               ("financial_connections", [`Null]);
                               ("verification_method", [`Null])];
                            `String])]]);
                     ("payment_method_types",
                      [`Array [(`List (`Null))];
                       `String])]]);
                ("rendering",
                 [`ObjectN
                    [("", [`Any]); ("amount_tax_display", [`String]);
                     ("pdf",
                      [`ObjectN [("", [`Any]); ("page_size", [`String])]])]]);
                ("shipping_cost",
                 [`ObjectN
                    [("", [`Any]); ("shipping_rate", [`String]);
                     ("shipping_rate_data",
                      [`ObjectN
                         [("", [`Any]);
                          ("delivery_estimate",
                           [`ObjectN
                              [("", [`Null]); ("maximum", [`Null]);
                               ("minimum", [`Null])]]);
                          ("display_name", [`String]);
                          ("fixed_amount",
                           [`ObjectN
                              [("", [`Null]); ("amount", [`Null]);
                               ("currency", [`Null]);
                               ("currency_options", [`Null])]]);
                          ("metadata", [`ObjectN [("", [`Null])]]);
                          ("tax_behavior", [`String]);
                          ("tax_code", [`String]); ("type", [`String])]])];
                  `String]);
                ("shipping_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("name", [`String]); ("phone", [`String;
                                                     `String])];
                  `String]);
                ("statement_descriptor", [`String]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("destination", [`String])];
                  `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_a9be044c3d _lvl ~op ~ctype (_x : t_a9be044c3d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_a9be044c3d) ~op ~ctype _x
  
  and _mk_body_to_t_a9be044c3d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a9be044c3d) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_a5ef94f13d _lvl ~op ~ctype (_x : t_a5ef94f13d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_a5ef94f13d) ~op ~ctype _x
  
  and _mk_body_to_t_a5ef94f13d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a5ef94f13d) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_85bd60c74b _lvl ~op ~ctype (_x : t_85bd60c74b) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_0444b9cc91 _x -> `ObjectN [("", [`String])]
                        | T_f1d7a99f8f _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_85bd60c74b) ~op ~ctype _x
  
  and _mk_body_to_t_85bd60c74b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_85bd60c74b) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_639da83cc7 _lvl ~op ~ctype (_x : t_639da83cc7) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_b15378b250 _x -> `ObjectN [("", [`String])]
                        | T_eb809a11c5 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_639da83cc7) ~op ~ctype _x
  
  and _mk_body_to_t_639da83cc7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_639da83cc7) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_485bd1f95e _lvl ~op ~ctype (_x : t_485bd1f95e) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_3f09769c3a _x -> `ObjectN [("", [`String])]
                        | T_4b55008189 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_485bd1f95e) ~op ~ctype _x
  
  and _mk_body_to_t_485bd1f95e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_485bd1f95e) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_fce0724e2a _lvl ~op ~ctype (_x : t_fce0724e2a) =
    _body_of ~kind:(
      `ObjectN
        [("billing", let _x = _x.billing in
          [`ObjectN
             [("", [`Any]);
              ("address", let _x = _x.address in
               [`ObjectN
                  [("", [`Any]); ("city", let _x = _x.city in [`String]);
                   ("country", let _x = _x.country in [`String]);
                   ("line1", let _x = _x.line1 in [`String]);
                   ("line2", match _x.line2 with | None -> []
                    | Some _x -> [`String]);
                   ("postal_code", let _x = _x.postal_code in [`String]);
                   ("state", match _x.state with | None -> []
                    | Some _x -> [`String])]])]]);
         ("company", match _x.company with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("tax_id", match _x.tax_id with | None -> []
                            | Some _x -> [`String])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("individual", match _x.individual with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("user_terms_acceptance",
                                              match _x.user_terms_acceptance with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_3105c45e33 _x ->
                                                                  `Null])]])]]);
                           ("dob", match _x.dob with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("day", let _x = _x.day in
                                              [`Integer]);
                                             ("month", let _x = _x.month in
                                              [`Integer]);
                                             ("year", let _x = _x.year in
                                              [`Integer])]]);
                           ("first_name", match _x.first_name with
                            | None -> [] | Some _x -> [`String]);
                           ("last_name", match _x.last_name with | None -> []
                            | Some _x -> [`String]);
                           ("verification", match _x.verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("document",
                                              match _x.document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("name", let _x = _x.name in [`String]);
         ("phone_number", match _x.phone_number with | None -> []
          | Some _x -> [`String]);
         ("preferred_locales", match _x.preferred_locales with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_1d95a813b5) ->
                              `Singleton (`String)) _x))]);
         ("spending_controls", match _x.spending_controls with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allowed_categories",
                            match _x.allowed_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_00765c7fec) ->
                                                `Singleton (`String)) _x))]);
                           ("allowed_merchant_countries",
                            match _x.allowed_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_categories",
                            match _x.blocked_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_103ba7827a) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_merchant_countries",
                            match _x.blocked_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("spending_limits", match _x.spending_limits with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_3a43467bc5) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("amount",
                                                       let _x = _x.amount in
                                                       [`Null]);
                                                      ("categories",
                                                       match _x.categories with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("interval",
                                                       let _x = _x.interval in
                                                       [`Null])])) _x))]);
                           ("spending_limits_currency",
                            match _x.spending_limits_currency with
                            | None -> [] | Some _x -> [`String])]]);
         ("status", match _x.status with | None -> [] | Some _x -> [`String]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_fce0724e2a) ~op ~ctype _x
  
  and _mk_body_to_t_fce0724e2a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fce0724e2a) in _body_to
      ~kind:(`ObjectN
               [("billing",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]])]]);
                ("company", [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("individual",
                 [`ObjectN
                    [("", [`Any]);
                     ("card_issuing",
                      [`ObjectN
                         [("", [`Any]);
                          ("user_terms_acceptance",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]);
                               ("user_agent", [`Null;
                                               `Null])]])]]);
                     ("dob",
                      [`ObjectN
                         [("", [`Any]); ("day", [`Integer]);
                          ("month", [`Integer]); ("year", [`Integer])]]);
                     ("first_name", [`String]); ("last_name", [`String]);
                     ("verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("name", [`String]); ("phone_number", [`String]);
                ("preferred_locales", [`Array [(`List (`String))]]);
                ("spending_controls",
                 [`ObjectN
                    [("", [`Any]);
                     ("allowed_categories", [`Array [(`List (`String))]]);
                     ("allowed_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("blocked_categories", [`Array [(`List (`String))]]);
                     ("blocked_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("spending_limits",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("amount", [`Null]);
                                 ("categories", [`Null]);
                                 ("interval", [`Null])]))]]);
                     ("spending_limits_currency", [`String])]]);
                ("status", [`String]); ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_aed880c229 _lvl ~op ~ctype (_x : t_aed880c229) =
    _body_of ~kind:(
      `ObjectN
        [("billing", match _x.billing with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", let _x = _x.city in [`String]);
                                ("country", let _x = _x.country in [`String]);
                                ("line1", let _x = _x.line1 in [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", let _x = _x.postal_code in
                                 [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]])]]);
         ("company", match _x.company with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("tax_id", match _x.tax_id with | None -> []
                            | Some _x -> [`String])]]);
         ("email", match _x.email with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("individual", match _x.individual with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("user_terms_acceptance",
                                              match _x.user_terms_acceptance with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_dafbd60037 _x ->
                                                                  `Null])]])]]);
                           ("dob", match _x.dob with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("day", let _x = _x.day in
                                              [`Integer]);
                                             ("month", let _x = _x.month in
                                              [`Integer]);
                                             ("year", let _x = _x.year in
                                              [`Integer])]]);
                           ("first_name", match _x.first_name with
                            | None -> [] | Some _x -> [`String]);
                           ("last_name", match _x.last_name with | None -> []
                            | Some _x -> [`String]);
                           ("verification", match _x.verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("document",
                                              match _x.document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("phone_number", match _x.phone_number with | None -> []
          | Some _x -> [`String]);
         ("preferred_locales", match _x.preferred_locales with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_da1266afe0) ->
                              `Singleton (`String)) _x))]);
         ("spending_controls", match _x.spending_controls with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allowed_categories",
                            match _x.allowed_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_bec65f8612) ->
                                                `Singleton (`String)) _x))]);
                           ("allowed_merchant_countries",
                            match _x.allowed_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_categories",
                            match _x.blocked_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_d2dab96e75) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_merchant_countries",
                            match _x.blocked_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("spending_limits", match _x.spending_limits with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_b29784d2fc) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("amount",
                                                       let _x = _x.amount in
                                                       [`Null]);
                                                      ("categories",
                                                       match _x.categories with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("interval",
                                                       let _x = _x.interval in
                                                       [`Null])])) _x))]);
                           ("spending_limits_currency",
                            match _x.spending_limits_currency with
                            | None -> [] | Some _x -> [`String])]]);
         ("status", match _x.status with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_aed880c229) ~op ~ctype _x
  
  and _mk_body_to_t_aed880c229 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_aed880c229) in _body_to
      ~kind:(`ObjectN
               [("billing",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]])]]);
                ("company", [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                ("email", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("individual",
                 [`ObjectN
                    [("", [`Any]);
                     ("card_issuing",
                      [`ObjectN
                         [("", [`Any]);
                          ("user_terms_acceptance",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]);
                               ("user_agent", [`Null;
                                               `Null])]])]]);
                     ("dob",
                      [`ObjectN
                         [("", [`Any]); ("day", [`Integer]);
                          ("month", [`Integer]); ("year", [`Integer])]]);
                     ("first_name", [`String]); ("last_name", [`String]);
                     ("verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("phone_number", [`String]);
                ("preferred_locales", [`Array [(`List (`String))]]);
                ("spending_controls",
                 [`ObjectN
                    [("", [`Any]);
                     ("allowed_categories", [`Array [(`List (`String))]]);
                     ("allowed_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("blocked_categories", [`Array [(`List (`String))]]);
                     ("blocked_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("spending_limits",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("amount", [`Null]);
                                 ("categories", [`Null]);
                                 ("interval", [`Null])]))]]);
                     ("spending_limits_currency", [`String])]]);
                ("status", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_01c0ada085 _lvl ~op ~ctype (_x : t_01c0ada085) =
    _body_of ~kind:(
      `ObjectN
        [("cardholder", match _x.cardholder with | None -> []
          | Some _x -> [`String]);
         ("currency", let _x = _x.currency in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("financial_account", match _x.financial_account with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("personalization_design", match _x.personalization_design with
          | None -> [] | Some _x -> [`String]);
         ("pin", match _x.pin with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("encrypted_number",
                            match _x.encrypted_number with | None -> []
                            | Some _x -> [`String])]]);
         ("replacement_for", match _x.replacement_for with | None -> []
          | Some _x -> [`String]);
         ("replacement_reason", match _x.replacement_reason with | None -> []
          | Some _x -> [`String]);
         ("second_line", match _x.second_line with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_5752376211 _x -> `String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", let _x = _x.city in [`String]);
                                ("country", let _x = _x.country in [`String]);
                                ("line1", let _x = _x.line1 in [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", let _x = _x.postal_code in
                                 [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]]);
                           ("customs", match _x.customs with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("eori_number",
                                              match _x.eori_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("name", let _x = _x.name in [`String]);
                           ("phone_number", match _x.phone_number with
                            | None -> [] | Some _x -> [`String]);
                           ("require_signature",
                            match _x.require_signature with | None -> []
                            | Some _x -> [`Boolean]);
                           ("service", match _x.service with | None -> []
                            | Some _x -> [`String]);
                           ("type", match _x.type_ with | None -> []
                            | Some _x -> [`String])]]);
         ("spending_controls", match _x.spending_controls with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allowed_categories",
                            match _x.allowed_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_a55d2c045d) ->
                                                `Singleton (`String)) _x))]);
                           ("allowed_merchant_countries",
                            match _x.allowed_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_categories",
                            match _x.blocked_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_1e8d46735b) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_merchant_countries",
                            match _x.blocked_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("spending_limits", match _x.spending_limits with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_1f857a0e5d) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("amount",
                                                       let _x = _x.amount in
                                                       [`Null]);
                                                      ("categories",
                                                       match _x.categories with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("interval",
                                                       let _x = _x.interval in
                                                       [`Null])])) _x))])]]);
         ("status", match _x.status with | None -> [] | Some _x -> [`String]);
         ("type", let _x = _x.type_ in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_01c0ada085) ~op ~ctype _x
  
  and _mk_body_to_t_01c0ada085 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_01c0ada085) in _body_to
      ~kind:(`ObjectN
               [("cardholder", [`String]); ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("financial_account", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("personalization_design", [`String]);
                ("pin",
                 [`ObjectN [("", [`Any]); ("encrypted_number", [`String])]]);
                ("replacement_for", [`String]);
                ("replacement_reason", [`String]);
                ("second_line", [`String;
                                 `String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("customs",
                      [`ObjectN [("", [`Any]); ("eori_number", [`String])]]);
                     ("name", [`String]); ("phone_number", [`String]);
                     ("require_signature", [`Boolean]);
                     ("service", [`String]); ("type", [`String])]]);
                ("spending_controls",
                 [`ObjectN
                    [("", [`Any]);
                     ("allowed_categories", [`Array [(`List (`String))]]);
                     ("allowed_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("blocked_categories", [`Array [(`List (`String))]]);
                     ("blocked_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("spending_limits",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("amount", [`Null]);
                                 ("categories", [`Null]);
                                 ("interval", [`Null])]))]])]]);
                ("status", [`String]); ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2b406438a3 _lvl ~op ~ctype (_x : t_2b406438a3) =
    _body_of ~kind:(
      `ObjectN
        [("cancellation_reason", match _x.cancellation_reason with
          | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_beae05b9f7 _x -> `ObjectN [("", [`String])]
                        | T_5d669a1364 _x -> `String]);
         ("personalization_design", match _x.personalization_design with
          | None -> [] | Some _x -> [`String]);
         ("pin", match _x.pin with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("encrypted_number",
                            match _x.encrypted_number with | None -> []
                            | Some _x -> [`String])]]);
         ("spending_controls", match _x.spending_controls with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allowed_categories",
                            match _x.allowed_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_5faadea4fa) ->
                                                `Singleton (`String)) _x))]);
                           ("allowed_merchant_countries",
                            match _x.allowed_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_categories",
                            match _x.blocked_categories with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_9bfb2e5300) ->
                                                `Singleton (`String)) _x))]);
                           ("blocked_merchant_countries",
                            match _x.blocked_merchant_countries with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("spending_limits", match _x.spending_limits with
                            | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_b060d408ee) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("amount",
                                                       let _x = _x.amount in
                                                       [`Null]);
                                                      ("categories",
                                                       match _x.categories with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("interval",
                                                       let _x = _x.interval in
                                                       [`Null])])) _x))])]]);
         ("status", match _x.status with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_2b406438a3) ~op ~ctype _x
  
  and _mk_body_to_t_2b406438a3 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2b406438a3) in _body_to
      ~kind:(`ObjectN
               [("cancellation_reason", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("personalization_design", [`String]);
                ("pin",
                 [`ObjectN [("", [`Any]); ("encrypted_number", [`String])]]);
                ("spending_controls",
                 [`ObjectN
                    [("", [`Any]);
                     ("allowed_categories", [`Array [(`List (`String))]]);
                     ("allowed_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("blocked_categories", [`Array [(`List (`String))]]);
                     ("blocked_merchant_countries",
                      [`Array [(`List (`String))]]);
                     ("spending_limits",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("amount", [`Null]);
                                 ("categories", [`Null]);
                                 ("interval", [`Null])]))]])]]);
                ("status", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_1046acf59a _lvl ~op ~ctype (_x : t_1046acf59a) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("evidence", match _x.evidence with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("canceled", match _x.canceled with | None -> []
                            | Some _x -> [match _x with
                                          | T_470d469723 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_55e3ec35d4 _x ->
                                                                `Null]);
                                               ("canceled_at",
                                                match _x.canceled_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_85a9da5ea2 _x ->
                                                                `Null]);
                                               ("cancellation_policy_provided",
                                                match _x.cancellation_policy_provided with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Bool _x ->
                                                                `Null
                                                              | T_4a03281794 _x ->
                                                                `Null]);
                                               ("cancellation_reason",
                                                match _x.cancellation_reason with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_eed557db89 _x ->
                                                                `Null]);
                                               ("expected_at",
                                                match _x.expected_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_625218dd30 _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_887209c26e _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_ac5673037c _x ->
                                                                `Null]);
                                               ("product_type",
                                                match _x.product_type with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("return_status",
                                                match _x.return_status with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("returned_at",
                                                match _x.returned_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_721fd1a8cc _x ->
                                                                `Null])]
                                          | T_016e2e2582 _x -> `String]);
                           ("duplicate", match _x.duplicate with | None -> []
                            | Some _x -> [match _x with
                                          | T_ca59db3063 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_4abc58f5e4 _x ->
                                                                `Null]);
                                               ("card_statement",
                                                match _x.card_statement with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_b01e05b512 _x ->
                                                                `Null]);
                                               ("cash_receipt",
                                                match _x.cash_receipt with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_368db5a679 _x ->
                                                                `Null]);
                                               ("check_image",
                                                match _x.check_image with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_d179f746e6 _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_fdefd3986b _x ->
                                                                `Null]);
                                               ("original_transaction",
                                                match _x.original_transaction with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_118e196fe1 _x -> `String]);
                           ("fraudulent", match _x.fraudulent with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_7b844026a1 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_0c307c98aa _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_4241eed0b1 _x ->
                                                                `Null])]
                                          | T_8b54ad85e3 _x -> `String]);
                           ("merchandise_not_as_described",
                            match _x.merchandise_not_as_described with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_fbc63f2d8d _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_01383832b4 _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_94a763ebc2 _x ->
                                                                `Null]);
                                               ("received_at",
                                                match _x.received_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_91afc66c97 _x ->
                                                                `Null]);
                                               ("return_description",
                                                match _x.return_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_146f967928 _x ->
                                                                `Null]);
                                               ("return_status",
                                                match _x.return_status with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("returned_at",
                                                match _x.returned_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_7df9cb7704 _x ->
                                                                `Null])]
                                          | T_572d785ab5 _x -> `String]);
                           ("no_valid_authorization",
                            match _x.no_valid_authorization with | None -> []
                            | Some _x -> [match _x with
                                          | T_1126141cb9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_c5c1b1f0de _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_e343e5c303 _x ->
                                                                `Null])]
                                          | T_88caa6e061 _x -> `String]);
                           ("not_received", match _x.not_received with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_8807812245 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_53a400458f _x ->
                                                                `Null]);
                                               ("expected_at",
                                                match _x.expected_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_9e40d1131c _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_c99b767b79 _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_201df950fd _x ->
                                                                `Null]);
                                               ("product_type",
                                                match _x.product_type with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ae900f1066 _x -> `String]);
                           ("other", match _x.other with | None -> []
                            | Some _x -> [match _x with
                                          | T_65fd6ce76c _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_11b25e6a3f _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_52c9524309 _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_2bf9501d77 _x ->
                                                                `Null]);
                                               ("product_type",
                                                match _x.product_type with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_7e2444259a _x -> `String]);
                           ("reason", match _x.reason with | None -> []
                            | Some _x -> [`String]);
                           ("service_not_as_described",
                            match _x.service_not_as_described with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_e5679a8591 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_1e6f31c9af _x ->
                                                                `Null]);
                                               ("canceled_at",
                                                match _x.canceled_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_aed99c0d3b _x ->
                                                                `Null]);
                                               ("cancellation_reason",
                                                match _x.cancellation_reason with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_08418bd6ca _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_451e02736d _x ->
                                                                `Null]);
                                               ("received_at",
                                                match _x.received_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_a537f82be2 _x ->
                                                                `Null])]
                                          | T_070366cf59 _x -> `String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("transaction", match _x.transaction with | None -> []
          | Some _x -> [`String]);
         ("treasury", match _x.treasury with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("received_debit", let _x = _x.received_debit in
                            [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_1046acf59a) ~op ~ctype _x
  
  and _mk_body_to_t_1046acf59a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_1046acf59a) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("evidence",
                 [`ObjectN
                    [("", [`Any]);
                     ("canceled",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("canceled_at", [`Null;
                                           `Null]);
                          ("cancellation_policy_provided", [`Null;
                                                            `Null]);
                          ("cancellation_reason", [`Null;
                                                   `Null]);
                          ("expected_at", [`Null;
                                           `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("product_type", [`String]);
                          ("return_status", [`String]);
                          ("returned_at", [`Null;
                                           `Null])];
                       `String]);
                     ("duplicate",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("card_statement", [`Null;
                                              `Null]);
                          ("cash_receipt", [`Null;
                                            `Null]);
                          ("check_image", [`Null;
                                           `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("original_transaction", [`String])];
                       `String]);
                     ("fraudulent",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null])];
                       `String]);
                     ("merchandise_not_as_described",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("received_at", [`Null;
                                           `Null]);
                          ("return_description", [`Null;
                                                  `Null]);
                          ("return_status", [`String]);
                          ("returned_at", [`Null;
                                           `Null])];
                       `String]);
                     ("no_valid_authorization",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null])];
                       `String]);
                     ("not_received",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("expected_at", [`Null;
                                           `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("product_type", [`String])];
                       `String]);
                     ("other",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("product_type", [`String])];
                       `String]);
                     ("reason", [`String]);
                     ("service_not_as_described",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("canceled_at", [`Null;
                                           `Null]);
                          ("cancellation_reason", [`Null;
                                                   `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("received_at", [`Null;
                                           `Null])];
                       `String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("transaction", [`String]);
                ("treasury",
                 [`ObjectN [("", [`Any]); ("received_debit", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_bed3869825 _lvl ~op ~ctype (_x : t_bed3869825) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("evidence", match _x.evidence with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("canceled", match _x.canceled with | None -> []
                            | Some _x -> [match _x with
                                          | T_f9fc65f3d7 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_136f8dda9d _x ->
                                                                `Null]);
                                               ("canceled_at",
                                                match _x.canceled_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_ff775a443e _x ->
                                                                `Null]);
                                               ("cancellation_policy_provided",
                                                match _x.cancellation_policy_provided with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Bool _x ->
                                                                `Null
                                                              | T_ff19bb2e23 _x ->
                                                                `Null]);
                                               ("cancellation_reason",
                                                match _x.cancellation_reason with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_f6c647ade4 _x ->
                                                                `Null]);
                                               ("expected_at",
                                                match _x.expected_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_21ab0acb9f _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_767fa94ee6 _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_19663e546b _x ->
                                                                `Null]);
                                               ("product_type",
                                                match _x.product_type with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("return_status",
                                                match _x.return_status with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("returned_at",
                                                match _x.returned_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_5419a0df22 _x ->
                                                                `Null])]
                                          | T_87b6032d7b _x -> `String]);
                           ("duplicate", match _x.duplicate with | None -> []
                            | Some _x -> [match _x with
                                          | T_409af4a724 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_afd113e6ce _x ->
                                                                `Null]);
                                               ("card_statement",
                                                match _x.card_statement with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_d3c47efa88 _x ->
                                                                `Null]);
                                               ("cash_receipt",
                                                match _x.cash_receipt with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_2c7ad5a736 _x ->
                                                                `Null]);
                                               ("check_image",
                                                match _x.check_image with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_2252b51d1b _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_8cae00c505 _x ->
                                                                `Null]);
                                               ("original_transaction",
                                                match _x.original_transaction with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ce205ece91 _x -> `String]);
                           ("fraudulent", match _x.fraudulent with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_2aa1dae5d9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_f62fbe63ec _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_b6b4040649 _x ->
                                                                `Null])]
                                          | T_31fde109af _x -> `String]);
                           ("merchandise_not_as_described",
                            match _x.merchandise_not_as_described with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_8aa325c929 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_2752c7d205 _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_1dc046e5e8 _x ->
                                                                `Null]);
                                               ("received_at",
                                                match _x.received_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_0201d57125 _x ->
                                                                `Null]);
                                               ("return_description",
                                                match _x.return_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_c613218cec _x ->
                                                                `Null]);
                                               ("return_status",
                                                match _x.return_status with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("returned_at",
                                                match _x.returned_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_375036219e _x ->
                                                                `Null])]
                                          | T_99b3b06797 _x -> `String]);
                           ("no_valid_authorization",
                            match _x.no_valid_authorization with | None -> []
                            | Some _x -> [match _x with
                                          | T_865d16cfd8 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_cbe083f40e _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_6ce4ac3a18 _x ->
                                                                `Null])]
                                          | T_fd19d2692a _x -> `String]);
                           ("not_received", match _x.not_received with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_9c071032d7 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_4f94d7d527 _x ->
                                                                `Null]);
                                               ("expected_at",
                                                match _x.expected_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_430d3f7f4a _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_43c3bd69af _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_1f4cfe4108 _x ->
                                                                `Null]);
                                               ("product_type",
                                                match _x.product_type with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_f186a9d7d7 _x -> `String]);
                           ("other", match _x.other with | None -> []
                            | Some _x -> [match _x with
                                          | T_06d39f8e6e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_9f7d344263 _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_1294687595 _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_503eb7516c _x ->
                                                                `Null]);
                                               ("product_type",
                                                match _x.product_type with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_f4dba0ac4d _x -> `String]);
                           ("reason", match _x.reason with | None -> []
                            | Some _x -> [`String]);
                           ("service_not_as_described",
                            match _x.service_not_as_described with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_fde5e8ba0a _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("additional_documentation",
                                                match _x.additional_documentation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_1c3f662af2 _x ->
                                                                `Null]);
                                               ("canceled_at",
                                                match _x.canceled_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_9da09d9bc2 _x ->
                                                                `Null]);
                                               ("cancellation_reason",
                                                match _x.cancellation_reason with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_604cd143e7 _x ->
                                                                `Null]);
                                               ("explanation",
                                                match _x.explanation with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_2acf1a3cb3 _x ->
                                                                `Null]);
                                               ("received_at",
                                                match _x.received_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_a94ae03ec1 _x ->
                                                                `Null])]
                                          | T_8f18e0d949 _x -> `String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_392a18b21f _x -> `ObjectN [("", [`String])]
                        | T_b437b09eab _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_bed3869825) ~op ~ctype _x
  
  and _mk_body_to_t_bed3869825 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_bed3869825) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("evidence",
                 [`ObjectN
                    [("", [`Any]);
                     ("canceled",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("canceled_at", [`Null;
                                           `Null]);
                          ("cancellation_policy_provided", [`Null;
                                                            `Null]);
                          ("cancellation_reason", [`Null;
                                                   `Null]);
                          ("expected_at", [`Null;
                                           `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("product_type", [`String]);
                          ("return_status", [`String]);
                          ("returned_at", [`Null;
                                           `Null])];
                       `String]);
                     ("duplicate",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("card_statement", [`Null;
                                              `Null]);
                          ("cash_receipt", [`Null;
                                            `Null]);
                          ("check_image", [`Null;
                                           `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("original_transaction", [`String])];
                       `String]);
                     ("fraudulent",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null])];
                       `String]);
                     ("merchandise_not_as_described",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("received_at", [`Null;
                                           `Null]);
                          ("return_description", [`Null;
                                                  `Null]);
                          ("return_status", [`String]);
                          ("returned_at", [`Null;
                                           `Null])];
                       `String]);
                     ("no_valid_authorization",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null])];
                       `String]);
                     ("not_received",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("expected_at", [`Null;
                                           `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("product_type", [`String])];
                       `String]);
                     ("other",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("product_type", [`String])];
                       `String]);
                     ("reason", [`String]);
                     ("service_not_as_described",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_documentation", [`Null;
                                                        `Null]);
                          ("canceled_at", [`Null;
                                           `Null]);
                          ("cancellation_reason", [`Null;
                                                   `Null]);
                          ("explanation", [`Null;
                                           `Null]);
                          ("received_at", [`Null;
                                           `Null])];
                       `String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0e5ac31461 _lvl ~op ~ctype (_x : t_0e5ac31461) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_fe26431008 _x -> `ObjectN [("", [`String])]
                        | T_a95ba15ce5 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_0e5ac31461) ~op ~ctype _x
  
  and _mk_body_to_t_0e5ac31461 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0e5ac31461) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_41547624db _lvl ~op ~ctype (_x : t_41547624db) =
    _body_of ~kind:(
      `ObjectN
        [("card_logo", match _x.card_logo with | None -> []
          | Some _x -> [`String]);
         ("carrier_text", match _x.carrier_text with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("footer_body", match _x.footer_body with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_8267ecc3b6 _x -> `String]);
                           ("footer_title", match _x.footer_title with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_ea0983bbdd _x -> `String]);
                           ("header_body", match _x.header_body with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_e83b2116e5 _x -> `String]);
                           ("header_title", match _x.header_title with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_5604c6703c _x -> `String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("lookup_key", match _x.lookup_key with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("physical_bundle", let _x = _x.physical_bundle in [`String]);
         ("preferences", match _x.preferences with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("is_default", let _x = _x.is_default in
                            [`Boolean])]]);
         ("transfer_lookup_key", match _x.transfer_lookup_key with
          | None -> [] | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_41547624db) ~op ~ctype _x
  
  and _mk_body_to_t_41547624db _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_41547624db) in _body_to
      ~kind:(`ObjectN
               [("card_logo", [`String]);
                ("carrier_text",
                 [`ObjectN
                    [("", [`Any]); ("footer_body", [`String;
                                                    `String]);
                     ("footer_title", [`String;
                                       `String]);
                     ("header_body", [`String;
                                      `String]);
                     ("header_title", [`String;
                                       `String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("lookup_key", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("name", [`String]); ("physical_bundle", [`String]);
                ("preferences",
                 [`ObjectN [("", [`Any]); ("is_default", [`Boolean])]]);
                ("transfer_lookup_key", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_9d4fdffba0 _lvl ~op ~ctype (_x : t_9d4fdffba0) =
    _body_of ~kind:(
      `ObjectN
        [("card_logo", match _x.card_logo with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_fabdba64ef _x -> `String]);
         ("carrier_text", match _x.carrier_text with | None -> []
          | Some _x -> [match _x with
                        | T_4528cad6e9 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("footer_body", match _x.footer_body with
                              | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_bc81f30011 _x -> `String]);
                             ("footer_title", match _x.footer_title with
                              | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_23efd2e488 _x -> `String]);
                             ("header_body", match _x.header_body with
                              | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_760cbab1df _x -> `String]);
                             ("header_title", match _x.header_title with
                              | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_afbd17c620 _x -> `String])]
                        | T_a091202d3d _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("lookup_key", match _x.lookup_key with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_4c0f2b84e2 _x -> `String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("name", match _x.name with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_d5e0aeac83 _x -> `String]);
         ("physical_bundle", match _x.physical_bundle with | None -> []
          | Some _x -> [`String]);
         ("preferences", match _x.preferences with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("is_default", let _x = _x.is_default in
                            [`Boolean])]]);
         ("transfer_lookup_key", match _x.transfer_lookup_key with
          | None -> [] | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_9d4fdffba0) ~op ~ctype _x
  
  and _mk_body_to_t_9d4fdffba0 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_9d4fdffba0) in _body_to
      ~kind:(`ObjectN
               [("card_logo", [`String;
                               `String]);
                ("carrier_text",
                 [`ObjectN
                    [("", [`Any]); ("footer_body", [`String;
                                                    `String]);
                     ("footer_title", [`String;
                                       `String]);
                     ("header_body", [`String;
                                      `String]);
                     ("header_title", [`String;
                                       `String])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("lookup_key", [`String;
                                `String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("name", [`String;
                          `String]);
                ("physical_bundle", [`String]);
                ("preferences",
                 [`ObjectN [("", [`Any]); ("is_default", [`Boolean])]]);
                ("transfer_lookup_key", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c3aea2d0af _lvl ~op ~ctype (_x : t_c3aea2d0af) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_c3aea2d0af) ~op ~ctype _x
  
  and _mk_body_to_t_c3aea2d0af _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c3aea2d0af) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_22dd2782c4 _lvl ~op ~ctype (_x : t_22dd2782c4) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("status", let _x = _x.status in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_22dd2782c4) ~op ~ctype _x
  
  and _mk_body_to_t_22dd2782c4 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_22dd2782c4) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("status", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_36825c96f9 _lvl ~op ~ctype (_x : t_36825c96f9) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_1acb60e98e _x -> `ObjectN [("", [`String])]
                        | T_308d9244f3 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_36825c96f9) ~op ~ctype _x
  
  and _mk_body_to_t_36825c96f9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_36825c96f9) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_4d9f8cf633 _lvl ~op ~ctype (_x : t_4d9f8cf633) =
    _body_of ~kind:(
      `ObjectN
        [("account_holder", let _x = _x.account_holder in
          [`ObjectN
             [("", [`Any]);
              ("account", match _x.account with | None -> []
               | Some _x -> [`String]);
              ("customer", match _x.customer with | None -> []
               | Some _x -> [`String]);
              ("type", let _x = _x.type_ in [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("filters", match _x.filters with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("countries", match _x.countries with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))])]]);
         ("permissions", let _x = _x.permissions in
          [`Array
             ((List.map (fun (_x : t_b3b6b85bcc) -> `Singleton (`String)) _x))]);
         ("prefetch", match _x.prefetch with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_f49e269422) ->
                              `Singleton (`String)) _x))]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_4d9f8cf633) ~op ~ctype _x
  
  and _mk_body_to_t_4d9f8cf633 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4d9f8cf633) in _body_to
      ~kind:(`ObjectN
               [("account_holder",
                 [`ObjectN
                    [("", [`Any]); ("account", [`String]);
                     ("customer", [`String]); ("type", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("filters",
                 [`ObjectN
                    [("", [`Any]);
                     ("countries", [`Array [(`List (`String))]])]]);
                ("permissions", [`Array [(`List (`String))]]);
                ("prefetch", [`Array [(`List (`String))]]);
                ("return_url", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_8377bf5b33 _lvl ~op ~ctype (_x : t_8377bf5b33) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_8377bf5b33) ~op ~ctype _x
  
  and _mk_body_to_t_8377bf5b33 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_8377bf5b33) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_3147bdcb0f _lvl ~op ~ctype (_x : t_3147bdcb0f) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", let _x = _x.features in
          [`Array
             ((List.map (fun (_x : t_ffa338196f) -> `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_3147bdcb0f) ~op ~ctype _x
  
  and _mk_body_to_t_3147bdcb0f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3147bdcb0f) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("features", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_00fe61059b _lvl ~op ~ctype (_x : t_00fe61059b) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("automatic_payment_methods",
          match _x.automatic_payment_methods with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allow_redirects", match _x.allow_redirects with
                            | None -> [] | Some _x -> [`String]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("capture_method", match _x.capture_method with | None -> []
          | Some _x -> [`String]);
         ("confirm", match _x.confirm with | None -> []
          | Some _x -> [`Boolean]);
         ("confirmation_method", match _x.confirmation_method with
          | None -> [] | Some _x -> [`String]);
         ("confirmation_token", match _x.confirmation_token with | None -> []
          | Some _x -> [`String]);
         ("currency", let _x = _x.currency in [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("error_on_requires_action", match _x.error_on_requires_action with
          | None -> [] | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("mandate", match _x.mandate with | None -> []
          | Some _x -> [`String]);
         ("mandate_data", match _x.mandate_data with | None -> []
          | Some _x -> [match _x with
                        | T_98014e0c60 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("customer_acceptance",
                              let _x = _x.customer_acceptance in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("accepted_at", match _x.accepted_at with
                                   | None -> [] | Some _x -> [`Integer]);
                                  ("offline", match _x.offline with
                                   | None -> []
                                   | Some _x -> [`ObjectN [("", [`Null])]]);
                                  ("online", match _x.online with
                                   | None -> []
                                   | Some _x -> [`ObjectN
                                                   [("", [`Null]);
                                                    ("ip_address",
                                                     let _x = _x.ip_address in
                                                     [`Null]);
                                                    ("user_agent",
                                                     let _x = _x.user_agent in
                                                     [`Null])]]);
                                  ("type", let _x = _x.type_ in [`String])]])]
                        | T_496a6e9e1b _x -> `String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [match _x with
                        | Bool _x -> `Boolean
                        | T_5fc0838731 _x -> `String]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [`String]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("payment_method_configuration",
          match _x.payment_method_configuration with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("institution_number",
                                              let _x = _x.institution_number in
                                              [`String]);
                                             ("transit_number",
                                              let _x = _x.transit_number in
                                              [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("bsb_number",
                                              let _x = _x.bsb_number in
                                              [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("sort_code",
                                              match _x.sort_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_6cc1cfc116 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_ae4cd0da58 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_25ca672313 _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_38c5ad5d12 _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_1f8213cb61 _x ->
                                                              `String])]]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tax_id", let _x = _x.tax_id in
                                              [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", let _x = _x.bank in
                                              [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("day",
                                                                let _x = _x.day in
                                                                [`Integer]);
                                                               ("month",
                                                                let _x = _x.month in
                                                                [`Integer]);
                                                               ("year",
                                                                let _x = _x.year in
                                                                [`Integer])]])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("radar_options", match _x.radar_options with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("session",
                                              match _x.session with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("iban", let _x = _x.iban in
                                              [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]])]]);
         ("payment_method_options", match _x.payment_method_options with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_2aaaffedc5 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("custom_mandate_url",
                                                                  match _x.custom_mandate_url with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("interval_description",
                                                                  match _x.interval_description with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("payment_schedule",
                                                                  match _x.payment_schedule with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("transaction_type",
                                                                  match _x.transaction_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("verification_method",
                                                match _x.verification_method with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_249f54822e _x -> `String]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [match _x with
                                          | T_90d682b1c9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_060cd1a138 _x -> `String]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_b649581b59 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_b60466d082 _x -> `String]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [match _x with
                                          | T_453ddf52ce _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_fc9ad0a9d2 _x -> `String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_be0e2e1e1f _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_a7923fc632 _x -> `String]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_13905f2fa4 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_8b6b8ddd73 _x -> `String]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_c5c6623fd1 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_7c75cb1c35 _x -> `String]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_1639092fdb _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("preferred_language",
                                                match _x.preferred_language with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_85efce12cf _x -> `String]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [match _x with
                                          | T_b38b99e0ca _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("code", match _x.code with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_3d04fe20b4 _x -> `String]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [match _x with
                                          | T_885e197307 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ad5c5fa123 _x -> `String]);
                           ("card", match _x.card with | None -> []
                            | Some _x -> [match _x with
                                          | T_c8647bfc40 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("cvc_token",
                                                match _x.cvc_token with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("installments",
                                                match _x.installments with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("enabled",
                                                                  match _x.enabled with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("plan",
                                                                  match _x.plan with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("amount",
                                                                  let _x = _x.amount in
                                                                  [`Null]);
                                                                 ("amount_type",
                                                                  let _x = _x.amount_type in
                                                                  [`Null]);
                                                                 ("description",
                                                                  match _x.description with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("end_date",
                                                                  match _x.end_date with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("interval",
                                                                  let _x = _x.interval in
                                                                  [`Null]);
                                                                 ("interval_count",
                                                                  match _x.interval_count with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("reference",
                                                                  let _x = _x.reference in
                                                                  [`Null]);
                                                                 ("start_date",
                                                                  let _x = _x.start_date in
                                                                  [`Null]);
                                                                 ("supported_types",
                                                                  match _x.supported_types with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("network",
                                                match _x.network with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_extended_authorization",
                                                match _x.request_extended_authorization with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_incremental_authorization",
                                                match _x.request_incremental_authorization with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_multicapture",
                                                match _x.request_multicapture with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_overcapture",
                                                match _x.request_overcapture with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_three_d_secure",
                                                match _x.request_three_d_secure with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("require_cvc_recollection",
                                                match _x.require_cvc_recollection with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("statement_descriptor_suffix_kana",
                                                match _x.statement_descriptor_suffix_kana with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_84e3f91bdb _x ->
                                                                `Null]);
                                               ("statement_descriptor_suffix_kanji",
                                                match _x.statement_descriptor_suffix_kanji with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_c7e07e6fcb _x ->
                                                                `Null]);
                                               ("three_d_secure",
                                                match _x.three_d_secure with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("ares_trans_status",
                                                                  match _x.ares_trans_status with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("cryptogram",
                                                                  let _x = _x.cryptogram in
                                                                  [`Null]);
                                                                 ("electronic_commerce_indicator",
                                                                  match _x.electronic_commerce_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("exemption_indicator",
                                                                  match _x.exemption_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("network_options",
                                                                  match _x.network_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("requestor_challenge_indicator",
                                                                  match _x.requestor_challenge_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("transaction_id",
                                                                  let _x = _x.transaction_id in
                                                                  [`Null]);
                                                                 ("version",
                                                                  let _x = _x.version in
                                                                  [`Null])]])]
                                          | T_b8bf1d8c71 _x -> `String]);
                           ("card_present", match _x.card_present with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_bfd9d441d7 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("request_extended_authorization",
                                                match _x.request_extended_authorization with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("request_incremental_authorization_support",
                                                match _x.request_incremental_authorization_support with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("routing",
                                                match _x.routing with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("requested_priority",
                                                                  match _x.requested_priority with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]])]
                                          | T_693a928e00 _x -> `String]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [match _x with
                                          | T_39c6fe5a2c _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_37f3b206ef _x -> `String]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [match _x with
                                          | T_569e841810 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("bank_transfer",
                                                match _x.bank_transfer with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("eu_bank_transfer",
                                                                  match _x.eu_bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("requested_address_types",
                                                                  match _x.requested_address_types with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("type",
                                                                  let _x = _x.type_ in
                                                                  [`Null])]]);
                                               ("funding_type",
                                                match _x.funding_type with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_613802c0c6 _x -> `String]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [match _x with
                                          | T_52327cb11d _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_4a79bbf9aa _x -> `String]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [match _x with
                                          | T_7e151426cf _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_bf8b10a1e0 _x -> `String]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [match _x with
                                          | T_8d01eaadac _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_8e343878d1 _x -> `String]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_cfa1f7c35a _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ed92642c70 _x -> `String]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [match _x with
                                          | T_bfe839a7d8 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_9e84dd456a _x -> `String]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_7053a569c3 _x ->
                                            `ObjectN [("", [`Any])]
                                          | T_e4f568aae6 _x -> `String]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [match _x with
                                          | T_63baa442ef _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_2684d03d7c _x -> `String]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [match _x with
                                          | T_8a2ec0751e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("confirmation_number",
                                                match _x.confirmation_number with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_cc6d72ad92 _x ->
                                                                `Null]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Int _x ->
                                                                `Null
                                                              | T_e0d8d4d6aa _x ->
                                                                `Null]);
                                               ("expires_at",
                                                match _x.expires_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_ff9a566e19 _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_a7c553dd16 _x ->
                                                                `Null]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_4c50aa321c _x -> `String]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [match _x with
                                          | T_37982b77d6 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ce31d71349 _x -> `String]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [match _x with
                                          | T_f2bd2540b0 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_8c152f71ec _x -> `String]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [match _x with
                                          | T_3fe37b1143 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_9a7090e931 _x -> `String]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [match _x with
                                          | T_02086327f0 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("tos_shown_and_accepted",
                                                match _x.tos_shown_and_accepted with
                                                | None -> []
                                                | Some _x -> [`Boolean])]
                                          | T_b79298d7ed _x -> `String]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [match _x with
                                          | T_9c865ed804 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_6660a5f43a _x -> `String]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [match _x with
                                          | T_2486305ef8 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("risk_correlation_id",
                                                match _x.risk_correlation_id with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_e2a09fcda9 _x -> `String]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [match _x with
                                          | T_19284a84cf _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_seconds",
                                                match _x.expires_after_seconds with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("expires_at",
                                                match _x.expires_at with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_013c7244b7 _x -> `String]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_33a2efadca _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d8271e3462 _x -> `String]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_5feadfc136 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d1f0157cdb _x -> `String]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_9b712bcf95 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null])]]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_b95f227908 _x -> `String]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [match _x with
                                          | T_cb5a389ac5 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("preferred_language",
                                                match _x.preferred_language with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_0b81cff0a4 _x -> `String]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [match _x with
                                          | T_88adaf6348 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_8c6bf9bf75 _x ->
                                                                `Null]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_dd5b2a7725 _x -> `String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_2802f14f5d _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("financial_connections",
                                                match _x.financial_connections with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("permissions",
                                                                  match _x.permissions with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("prefetch",
                                                                  match _x.prefetch with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("return_url",
                                                                  match _x.return_url with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("collection_method",
                                                                  match _x.collection_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("networks",
                                                match _x.networks with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("requested",
                                                                  match _x.requested with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("preferred_settlement_speed",
                                                match _x.preferred_settlement_speed with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("verification_method",
                                                match _x.verification_method with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ed30519fef _x -> `String]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_4aef0d6d70 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("app_id",
                                                match _x.app_id with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("client",
                                                let _x = _x.client in
                                                [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d42b73b6d7 _x -> `String]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [match _x with
                                          | T_63c88ed7cc _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_e95e2b6772 _x -> `String])]]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("radar_options", match _x.radar_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("session", match _x.session with | None -> []
                            | Some _x -> [`String])]]);
         ("receipt_email", match _x.receipt_email with | None -> []
          | Some _x -> [`String]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("setup_future_usage", match _x.setup_future_usage with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", match _x.city with | None -> []
                                 | Some _x -> [`String]);
                                ("country", match _x.country with
                                 | None -> [] | Some _x -> [`String]);
                                ("line1", match _x.line1 with | None -> []
                                 | Some _x -> [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", match _x.postal_code with
                                 | None -> [] | Some _x -> [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]]);
                           ("carrier", match _x.carrier with | None -> []
                            | Some _x -> [`String]);
                           ("name", let _x = _x.name in [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("tracking_number", match _x.tracking_number with
                            | None -> [] | Some _x -> [`String])]]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("statement_descriptor_suffix",
          match _x.statement_descriptor_suffix with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer]);
                           ("destination", let _x = _x.destination in
                            [`String])]]);
         ("transfer_group", match _x.transfer_group with | None -> []
          | Some _x -> [`String]);
         ("use_stripe_sdk", match _x.use_stripe_sdk with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_00fe61059b) ~op ~ctype _x
  
  and _mk_body_to_t_00fe61059b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_00fe61059b) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("application_fee_amount", [`Integer]);
                ("automatic_payment_methods",
                 [`ObjectN
                    [("", [`Any]); ("allow_redirects", [`String]);
                     ("enabled", [`Boolean])]]);
                ("capture_method", [`String]); ("confirm", [`Boolean]);
                ("confirmation_method", [`String]);
                ("confirmation_token", [`String]); ("currency", [`String]);
                ("customer", [`String]); ("description", [`String]);
                ("error_on_requires_action", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("mandate", [`String]);
                ("mandate_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("customer_acceptance",
                      [`ObjectN
                         [("", [`Any]); ("accepted_at", [`Integer]);
                          ("offline", [`ObjectN [("", [`Null])]]);
                          ("online",
                           [`ObjectN
                              [("", [`Null]); ("ip_address", [`Null]);
                               ("user_agent", [`Null])]]);
                          ("type", [`String])]])];
                  `String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("off_session", [`Boolean;
                                 `String]);
                ("on_behalf_of", [`String]); ("payment_method", [`String]);
                ("payment_method_configuration", [`String]);
                ("payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("institution_number", [`String]);
                          ("transit_number", [`String])]]);
                     ("affirm", [`ObjectN [("", [`Any])]]);
                     ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                     ("alipay", [`ObjectN [("", [`Any])]]);
                     ("allow_redisplay", [`String]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("bsb_number", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("sort_code", [`String])]]);
                     ("bancontact", [`ObjectN [("", [`Any])]]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("blik", [`ObjectN [("", [`Any])]]);
                     ("boleto",
                      [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                     ("cashapp", [`ObjectN [("", [`Any])]]);
                     ("customer_balance", [`ObjectN [("", [`Any])]]);
                     ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("giropay", [`ObjectN [("", [`Any])]]);
                     ("grabpay", [`ObjectN [("", [`Any])]]);
                     ("ideal",
                      [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("interac_present", [`ObjectN [("", [`Any])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]);
                          ("dob",
                           [`ObjectN
                              [("", [`Any]); ("day", [`Integer]);
                               ("month", [`Integer]); ("year", [`Integer])]])]]);
                     ("konbini", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("mobilepay", [`ObjectN [("", [`Any])]]);
                     ("oxxo", [`ObjectN [("", [`Any])]]);
                     ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("paynow", [`ObjectN [("", [`Any])]]);
                     ("paypal", [`ObjectN [("", [`Any])]]);
                     ("pix", [`ObjectN [("", [`Any])]]);
                     ("promptpay", [`ObjectN [("", [`Any])]]);
                     ("radar_options",
                      [`ObjectN [("", [`Any]); ("session", [`String])]]);
                     ("revolut_pay", [`ObjectN [("", [`Any])]]);
                     ("sepa_debit",
                      [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                     ("sofort",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("swish", [`ObjectN [("", [`Any])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]]);
                     ("wechat_pay", [`ObjectN [("", [`Any])]]);
                     ("zip", [`ObjectN [("", [`Any])]])]]);
                ("payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]);
                               ("custom_mandate_url", [`Null]);
                               ("interval_description", [`Null]);
                               ("payment_schedule", [`Null]);
                               ("transaction_type", [`Null])]]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])];
                       `String]);
                     ("affirm",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("afterpay_clearpay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("reference", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("alipay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("amazon_pay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("bancontact",
                      [`ObjectN
                         [("", [`Any]); ("preferred_language", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("blik",
                      [`ObjectN
                         [("", [`Any]); ("code", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("boleto",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("card",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("cvc_token", [`String]);
                          ("installments",
                           [`ObjectN
                              [("", [`Null]); ("enabled", [`Null]);
                               ("plan", [`Null])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]); ("amount", [`Null]);
                               ("amount_type", [`Null]);
                               ("description", [`Null]);
                               ("end_date", [`Null]); ("interval", [`Null]);
                               ("interval_count", [`Null]);
                               ("reference", [`Null]);
                               ("start_date", [`Null]);
                               ("supported_types", [`Null])]]);
                          ("network", [`String]);
                          ("request_extended_authorization", [`String]);
                          ("request_incremental_authorization", [`String]);
                          ("request_multicapture", [`String]);
                          ("request_overcapture", [`String]);
                          ("request_three_d_secure", [`String]);
                          ("require_cvc_recollection", [`Boolean]);
                          ("setup_future_usage", [`String]);
                          ("statement_descriptor_suffix_kana",
                           [`Null;
                            `Null]);
                          ("statement_descriptor_suffix_kanji",
                           [`Null;
                            `Null]);
                          ("three_d_secure",
                           [`ObjectN
                              [("", [`Null]); ("ares_trans_status", [`Null]);
                               ("cryptogram", [`Null]);
                               ("electronic_commerce_indicator", [`Null]);
                               ("exemption_indicator", [`Null]);
                               ("network_options", [`Null]);
                               ("requestor_challenge_indicator", [`Null]);
                               ("transaction_id", [`Null]);
                               ("version", [`Null])]])];
                       `String]);
                     ("card_present",
                      [`ObjectN
                         [("", [`Any]);
                          ("request_extended_authorization", [`Boolean]);
                          ("request_incremental_authorization_support",
                           [`Boolean]);
                          ("routing",
                           [`ObjectN
                              [("", [`Null]);
                               ("requested_priority", [`Null])]])];
                       `String]);
                     ("cashapp",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("customer_balance",
                      [`ObjectN
                         [("", [`Any]);
                          ("bank_transfer",
                           [`ObjectN
                              [("", [`Null]); ("eu_bank_transfer", [`Null]);
                               ("requested_address_types", [`Null]);
                               ("type", [`Null])]]);
                          ("funding_type", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("eps",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("fpx",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("giropay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("grabpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("ideal",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("interac_present", [`ObjectN [("", [`Any])];
                                          `String]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("konbini",
                      [`ObjectN
                         [("", [`Any]);
                          ("confirmation_number", [`Null;
                                                   `Null]);
                          ("expires_after_days", [`Null;
                                                  `Null]);
                          ("expires_at", [`Null;
                                          `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("link",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("mobilepay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("oxxo",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("p24",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String]);
                          ("tos_shown_and_accepted", [`Boolean])];
                       `String]);
                     ("paynow",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("paypal",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("reference", [`String]);
                          ("risk_correlation_id", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("pix",
                      [`ObjectN
                         [("", [`Any]);
                          ("expires_after_seconds", [`Integer]);
                          ("expires_at", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("promptpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("revolut_pay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("sepa_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options", [`ObjectN [("", [`Null])]]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("sofort",
                      [`ObjectN
                         [("", [`Any]); ("preferred_language", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("swish",
                      [`ObjectN
                         [("", [`Any]); ("reference", [`Null;
                                                       `Null]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]);
                          ("financial_connections",
                           [`ObjectN
                              [("", [`Null]); ("permissions", [`Null]);
                               ("prefetch", [`Null]);
                               ("return_url", [`Null])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]); ("collection_method", [`Null])]]);
                          ("networks",
                           [`ObjectN [("", [`Null]); ("requested", [`Null])]]);
                          ("preferred_settlement_speed", [`String]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])];
                       `String]);
                     ("wechat_pay",
                      [`ObjectN
                         [("", [`Any]); ("app_id", [`String]);
                          ("client", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("zip",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String])]]);
                ("payment_method_types", [`Array [(`List (`String))]]);
                ("radar_options",
                 [`ObjectN [("", [`Any]); ("session", [`String])]]);
                ("receipt_email", [`String]); ("return_url", [`String]);
                ("setup_future_usage", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("carrier", [`String]); ("name", [`String]);
                     ("phone", [`String]); ("tracking_number", [`String])]]);
                ("statement_descriptor", [`String]);
                ("statement_descriptor_suffix", [`String]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("destination", [`String])]]);
                ("transfer_group", [`String]);
                ("use_stripe_sdk", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_ce5b122d77 _lvl ~op ~ctype (_x : t_ce5b122d77) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_ce5b122d77) ~op ~ctype _x
  
  and _mk_body_to_t_ce5b122d77 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_ce5b122d77) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_4400756710 _lvl ~op ~ctype (_x : t_4400756710) =
    _body_of ~kind:(
      `ObjectN
        [("cancellation_reason", match _x.cancellation_reason with
          | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_4400756710) ~op ~ctype _x
  
  and _mk_body_to_t_4400756710 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4400756710) in _body_to
      ~kind:(`ObjectN
               [("cancellation_reason", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_65f459585c _lvl ~op ~ctype (_x : t_65f459585c) =
    _body_of ~kind:(
      `ObjectN
        [("amount_to_capture", match _x.amount_to_capture with | None -> []
          | Some _x -> [`Integer]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("final_capture", match _x.final_capture with | None -> []
          | Some _x -> [`Boolean]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_57bb807c5a _x -> `ObjectN [("", [`String])]
                        | T_9b094b093e _x -> `String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("statement_descriptor_suffix",
          match _x.statement_descriptor_suffix with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_65f459585c) ~op ~ctype _x
  
  and _mk_body_to_t_65f459585c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_65f459585c) in _body_to
      ~kind:(`ObjectN
               [("amount_to_capture", [`Integer]);
                ("application_fee_amount", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("final_capture", [`Boolean]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("statement_descriptor", [`String]);
                ("statement_descriptor_suffix", [`String]);
                ("transfer_data",
                 [`ObjectN [("", [`Any]); ("amount", [`Integer])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_b0227442ba _lvl ~op ~ctype (_x : t_b0227442ba) =
    _body_of ~kind:(
      `ObjectN
        [("capture_method", match _x.capture_method with | None -> []
          | Some _x -> [`String]);
         ("client_secret", match _x.client_secret with | None -> []
          | Some _x -> [`String]);
         ("confirmation_token", match _x.confirmation_token with | None -> []
          | Some _x -> [`String]);
         ("error_on_requires_action", match _x.error_on_requires_action with
          | None -> [] | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("mandate", match _x.mandate with | None -> []
          | Some _x -> [`String]);
         ("mandate_data", match _x.mandate_data with | None -> []
          | Some _x -> [match _x with
                        | T_7492fba3ad _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("customer_acceptance",
                              let _x = _x.customer_acceptance in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("accepted_at", match _x.accepted_at with
                                   | None -> [] | Some _x -> [`Integer]);
                                  ("offline", match _x.offline with
                                   | None -> []
                                   | Some _x -> [`ObjectN [("", [`Null])]]);
                                  ("online", match _x.online with
                                   | None -> []
                                   | Some _x -> [`ObjectN
                                                   [("", [`Null]);
                                                    ("ip_address",
                                                     let _x = _x.ip_address in
                                                     [`Null]);
                                                    ("user_agent",
                                                     let _x = _x.user_agent in
                                                     [`Null])]]);
                                  ("type", let _x = _x.type_ in [`String])]])]
                        | T_5ac6baeff8 _x -> `String
                        | T_526f8766d4 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("customer_acceptance",
                              let _x = _x.customer_acceptance in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("online", let _x = _x.online in
                                   [`ObjectN
                                      [("", [`Null]);
                                       ("ip_address",
                                        match _x.ip_address with | None -> []
                                        | Some _x -> [`Null]);
                                       ("user_agent",
                                        match _x.user_agent with | None -> []
                                        | Some _x -> [`Null])]]);
                                  ("type", let _x = _x.type_ in [`String])]])]]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [match _x with
                        | Bool _x -> `Boolean
                        | T_4a87773a76 _x -> `String]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("institution_number",
                                              let _x = _x.institution_number in
                                              [`String]);
                                             ("transit_number",
                                              let _x = _x.transit_number in
                                              [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("bsb_number",
                                              let _x = _x.bsb_number in
                                              [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("sort_code",
                                              match _x.sort_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_f8198ae8fc _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_94771e8204 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_4aeecc86ba _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_1c71d22360 _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_24d9a42550 _x ->
                                                              `String])]]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tax_id", let _x = _x.tax_id in
                                              [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", let _x = _x.bank in
                                              [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("day",
                                                                let _x = _x.day in
                                                                [`Integer]);
                                                               ("month",
                                                                let _x = _x.month in
                                                                [`Integer]);
                                                               ("year",
                                                                let _x = _x.year in
                                                                [`Integer])]])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("radar_options", match _x.radar_options with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("session",
                                              match _x.session with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("iban", let _x = _x.iban in
                                              [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]])]]);
         ("payment_method_options", match _x.payment_method_options with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_cf5064eca3 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("custom_mandate_url",
                                                                  match _x.custom_mandate_url with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("interval_description",
                                                                  match _x.interval_description with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("payment_schedule",
                                                                  match _x.payment_schedule with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("transaction_type",
                                                                  match _x.transaction_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("verification_method",
                                                match _x.verification_method with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_80b006de29 _x -> `String]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [match _x with
                                          | T_bf98c2786d _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_4e7b3fef4f _x -> `String]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_9d8cacce25 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_420923afee _x -> `String]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [match _x with
                                          | T_7a27d7c93d _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_71881629ca _x -> `String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_05cbcc2ce4 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ea75018c0b _x -> `String]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_d033a9f115 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_474fedc3c5 _x -> `String]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_169cef92cd _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_5b70d6f1c1 _x -> `String]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_aee9a036b6 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("preferred_language",
                                                match _x.preferred_language with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_c1a1299751 _x -> `String]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [match _x with
                                          | T_2b94591641 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("code", match _x.code with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_a5a3c9fe8c _x -> `String]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [match _x with
                                          | T_eb45a886ca _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_61a9fbb168 _x -> `String]);
                           ("card", match _x.card with | None -> []
                            | Some _x -> [match _x with
                                          | T_d9cceceb44 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("cvc_token",
                                                match _x.cvc_token with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("installments",
                                                match _x.installments with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("enabled",
                                                                  match _x.enabled with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("plan",
                                                                  match _x.plan with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("amount",
                                                                  let _x = _x.amount in
                                                                  [`Null]);
                                                                 ("amount_type",
                                                                  let _x = _x.amount_type in
                                                                  [`Null]);
                                                                 ("description",
                                                                  match _x.description with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("end_date",
                                                                  match _x.end_date with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("interval",
                                                                  let _x = _x.interval in
                                                                  [`Null]);
                                                                 ("interval_count",
                                                                  match _x.interval_count with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("reference",
                                                                  let _x = _x.reference in
                                                                  [`Null]);
                                                                 ("start_date",
                                                                  let _x = _x.start_date in
                                                                  [`Null]);
                                                                 ("supported_types",
                                                                  match _x.supported_types with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("network",
                                                match _x.network with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_extended_authorization",
                                                match _x.request_extended_authorization with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_incremental_authorization",
                                                match _x.request_incremental_authorization with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_multicapture",
                                                match _x.request_multicapture with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_overcapture",
                                                match _x.request_overcapture with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_three_d_secure",
                                                match _x.request_three_d_secure with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("require_cvc_recollection",
                                                match _x.require_cvc_recollection with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("statement_descriptor_suffix_kana",
                                                match _x.statement_descriptor_suffix_kana with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_0b6922a554 _x ->
                                                                `Null]);
                                               ("statement_descriptor_suffix_kanji",
                                                match _x.statement_descriptor_suffix_kanji with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_e06127acd7 _x ->
                                                                `Null]);
                                               ("three_d_secure",
                                                match _x.three_d_secure with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("ares_trans_status",
                                                                  match _x.ares_trans_status with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("cryptogram",
                                                                  let _x = _x.cryptogram in
                                                                  [`Null]);
                                                                 ("electronic_commerce_indicator",
                                                                  match _x.electronic_commerce_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("exemption_indicator",
                                                                  match _x.exemption_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("network_options",
                                                                  match _x.network_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("requestor_challenge_indicator",
                                                                  match _x.requestor_challenge_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("transaction_id",
                                                                  let _x = _x.transaction_id in
                                                                  [`Null]);
                                                                 ("version",
                                                                  let _x = _x.version in
                                                                  [`Null])]])]
                                          | T_557cd50157 _x -> `String]);
                           ("card_present", match _x.card_present with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_4159696a11 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("request_extended_authorization",
                                                match _x.request_extended_authorization with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("request_incremental_authorization_support",
                                                match _x.request_incremental_authorization_support with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("routing",
                                                match _x.routing with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("requested_priority",
                                                                  match _x.requested_priority with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]])]
                                          | T_1d613a0086 _x -> `String]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [match _x with
                                          | T_a1fefa3fbc _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_fa1ec0e76f _x -> `String]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [match _x with
                                          | T_4929d1cde6 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("bank_transfer",
                                                match _x.bank_transfer with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("eu_bank_transfer",
                                                                  match _x.eu_bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("requested_address_types",
                                                                  match _x.requested_address_types with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("type",
                                                                  let _x = _x.type_ in
                                                                  [`Null])]]);
                                               ("funding_type",
                                                match _x.funding_type with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_334cac5601 _x -> `String]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [match _x with
                                          | T_2ac49e97a5 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_e139b4d9bb _x -> `String]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [match _x with
                                          | T_da8ffea9b9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_60b69fe278 _x -> `String]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [match _x with
                                          | T_e1ebb4c2f8 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_f5c741d30b _x -> `String]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_0b3dd3741c _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_55866c8842 _x -> `String]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [match _x with
                                          | T_45691c7e67 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_c2df4ca3b9 _x -> `String]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_c6e2d4921c _x ->
                                            `ObjectN [("", [`Any])]
                                          | T_c44111af9f _x -> `String]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [match _x with
                                          | T_a4db9e3e58 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d807604442 _x -> `String]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [match _x with
                                          | T_b4bf415ecc _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("confirmation_number",
                                                match _x.confirmation_number with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_1b44625555 _x ->
                                                                `Null]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Int _x ->
                                                                `Null
                                                              | T_a0d7efb8a7 _x ->
                                                                `Null]);
                                               ("expires_at",
                                                match _x.expires_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_c89822a288 _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_8e7be392b4 _x ->
                                                                `Null]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_b8608b30b3 _x -> `String]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [match _x with
                                          | T_9527b2c651 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_31079c274a _x -> `String]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [match _x with
                                          | T_959adebf2d _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_2353f178b3 _x -> `String]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [match _x with
                                          | T_7ead88d253 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_018d823a30 _x -> `String]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [match _x with
                                          | T_d8be97a371 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("tos_shown_and_accepted",
                                                match _x.tos_shown_and_accepted with
                                                | None -> []
                                                | Some _x -> [`Boolean])]
                                          | T_48343d8eee _x -> `String]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [match _x with
                                          | T_8a0e3322a0 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ce53d4fa35 _x -> `String]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [match _x with
                                          | T_fe751f045b _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("risk_correlation_id",
                                                match _x.risk_correlation_id with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_4773d8a970 _x -> `String]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [match _x with
                                          | T_062265aed5 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_seconds",
                                                match _x.expires_after_seconds with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("expires_at",
                                                match _x.expires_at with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d2b24eeb06 _x -> `String]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_d2935abff9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_87c204b16b _x -> `String]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_e442753f4d _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_8d000741cb _x -> `String]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_47e7f50f14 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null])]]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d7d9a7ea49 _x -> `String]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [match _x with
                                          | T_da2a1b51c9 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("preferred_language",
                                                match _x.preferred_language with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_1967f73d91 _x -> `String]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [match _x with
                                          | T_975313d4f0 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_f044ff4a93 _x ->
                                                                `Null]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_3008ad1b73 _x -> `String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_54c68d30c4 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("financial_connections",
                                                match _x.financial_connections with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("permissions",
                                                                  match _x.permissions with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("prefetch",
                                                                  match _x.prefetch with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("return_url",
                                                                  match _x.return_url with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("collection_method",
                                                                  match _x.collection_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("networks",
                                                match _x.networks with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("requested",
                                                                  match _x.requested with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("preferred_settlement_speed",
                                                match _x.preferred_settlement_speed with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("verification_method",
                                                match _x.verification_method with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_be644d9d96 _x -> `String]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_b7435c24f3 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("app_id",
                                                match _x.app_id with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("client",
                                                let _x = _x.client in
                                                [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ae198fe444 _x -> `String]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [match _x with
                                          | T_ebbe1c3c19 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_9ffeb04f3f _x -> `String])]]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("radar_options", match _x.radar_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("session", match _x.session with | None -> []
                            | Some _x -> [`String])]]);
         ("receipt_email", match _x.receipt_email with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_7cc7681c3f _x -> `String]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("setup_future_usage", match _x.setup_future_usage with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [match _x with
                        | T_11358d2572 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address", let _x = _x.address in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("city", match _x.city with | None -> []
                                   | Some _x -> [`String]);
                                  ("country", match _x.country with
                                   | None -> [] | Some _x -> [`String]);
                                  ("line1", match _x.line1 with | None -> []
                                   | Some _x -> [`String]);
                                  ("line2", match _x.line2 with | None -> []
                                   | Some _x -> [`String]);
                                  ("postal_code", match _x.postal_code with
                                   | None -> [] | Some _x -> [`String]);
                                  ("state", match _x.state with | None -> []
                                   | Some _x -> [`String])]]);
                             ("carrier", match _x.carrier with | None -> []
                              | Some _x -> [`String]);
                             ("name", let _x = _x.name in [`String]);
                             ("phone", match _x.phone with | None -> []
                              | Some _x -> [`String]);
                             ("tracking_number",
                              match _x.tracking_number with | None -> []
                              | Some _x -> [`String])]
                        | T_d037084877 _x -> `String]);
         ("use_stripe_sdk", match _x.use_stripe_sdk with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_b0227442ba) ~op ~ctype _x
  
  and _mk_body_to_t_b0227442ba _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b0227442ba) in _body_to
      ~kind:(`ObjectN
               [("capture_method", [`String]); ("client_secret", [`String]);
                ("confirmation_token", [`String]);
                ("error_on_requires_action", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("mandate", [`String]);
                ("mandate_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("customer_acceptance",
                      [`ObjectN
                         [("", [`Any]); ("accepted_at", [`Integer]);
                          ("offline", [`ObjectN [("", [`Null])]]);
                          ("online",
                           [`ObjectN
                              [("", [`Null]); ("ip_address", [`Null]);
                               ("user_agent", [`Null])]]);
                          ("type", [`String])]])];
                  `String;
                  `ObjectN
                    [("", [`Any]);
                     ("customer_acceptance",
                      [`ObjectN
                         [("", [`Any]);
                          ("online",
                           [`ObjectN
                              [("", [`Null]); ("ip_address", [`Null]);
                               ("user_agent", [`Null])]]);
                          ("type", [`String])]])]]);
                ("off_session", [`Boolean;
                                 `String]);
                ("payment_method", [`String]);
                ("payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("institution_number", [`String]);
                          ("transit_number", [`String])]]);
                     ("affirm", [`ObjectN [("", [`Any])]]);
                     ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                     ("alipay", [`ObjectN [("", [`Any])]]);
                     ("allow_redisplay", [`String]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("bsb_number", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("sort_code", [`String])]]);
                     ("bancontact", [`ObjectN [("", [`Any])]]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("blik", [`ObjectN [("", [`Any])]]);
                     ("boleto",
                      [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                     ("cashapp", [`ObjectN [("", [`Any])]]);
                     ("customer_balance", [`ObjectN [("", [`Any])]]);
                     ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("giropay", [`ObjectN [("", [`Any])]]);
                     ("grabpay", [`ObjectN [("", [`Any])]]);
                     ("ideal",
                      [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("interac_present", [`ObjectN [("", [`Any])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]);
                          ("dob",
                           [`ObjectN
                              [("", [`Any]); ("day", [`Integer]);
                               ("month", [`Integer]); ("year", [`Integer])]])]]);
                     ("konbini", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("mobilepay", [`ObjectN [("", [`Any])]]);
                     ("oxxo", [`ObjectN [("", [`Any])]]);
                     ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("paynow", [`ObjectN [("", [`Any])]]);
                     ("paypal", [`ObjectN [("", [`Any])]]);
                     ("pix", [`ObjectN [("", [`Any])]]);
                     ("promptpay", [`ObjectN [("", [`Any])]]);
                     ("radar_options",
                      [`ObjectN [("", [`Any]); ("session", [`String])]]);
                     ("revolut_pay", [`ObjectN [("", [`Any])]]);
                     ("sepa_debit",
                      [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                     ("sofort",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("swish", [`ObjectN [("", [`Any])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]]);
                     ("wechat_pay", [`ObjectN [("", [`Any])]]);
                     ("zip", [`ObjectN [("", [`Any])]])]]);
                ("payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]);
                               ("custom_mandate_url", [`Null]);
                               ("interval_description", [`Null]);
                               ("payment_schedule", [`Null]);
                               ("transaction_type", [`Null])]]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])];
                       `String]);
                     ("affirm",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("afterpay_clearpay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("reference", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("alipay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("amazon_pay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("bancontact",
                      [`ObjectN
                         [("", [`Any]); ("preferred_language", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("blik",
                      [`ObjectN
                         [("", [`Any]); ("code", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("boleto",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("card",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("cvc_token", [`String]);
                          ("installments",
                           [`ObjectN
                              [("", [`Null]); ("enabled", [`Null]);
                               ("plan", [`Null])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]); ("amount", [`Null]);
                               ("amount_type", [`Null]);
                               ("description", [`Null]);
                               ("end_date", [`Null]); ("interval", [`Null]);
                               ("interval_count", [`Null]);
                               ("reference", [`Null]);
                               ("start_date", [`Null]);
                               ("supported_types", [`Null])]]);
                          ("network", [`String]);
                          ("request_extended_authorization", [`String]);
                          ("request_incremental_authorization", [`String]);
                          ("request_multicapture", [`String]);
                          ("request_overcapture", [`String]);
                          ("request_three_d_secure", [`String]);
                          ("require_cvc_recollection", [`Boolean]);
                          ("setup_future_usage", [`String]);
                          ("statement_descriptor_suffix_kana",
                           [`Null;
                            `Null]);
                          ("statement_descriptor_suffix_kanji",
                           [`Null;
                            `Null]);
                          ("three_d_secure",
                           [`ObjectN
                              [("", [`Null]); ("ares_trans_status", [`Null]);
                               ("cryptogram", [`Null]);
                               ("electronic_commerce_indicator", [`Null]);
                               ("exemption_indicator", [`Null]);
                               ("network_options", [`Null]);
                               ("requestor_challenge_indicator", [`Null]);
                               ("transaction_id", [`Null]);
                               ("version", [`Null])]])];
                       `String]);
                     ("card_present",
                      [`ObjectN
                         [("", [`Any]);
                          ("request_extended_authorization", [`Boolean]);
                          ("request_incremental_authorization_support",
                           [`Boolean]);
                          ("routing",
                           [`ObjectN
                              [("", [`Null]);
                               ("requested_priority", [`Null])]])];
                       `String]);
                     ("cashapp",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("customer_balance",
                      [`ObjectN
                         [("", [`Any]);
                          ("bank_transfer",
                           [`ObjectN
                              [("", [`Null]); ("eu_bank_transfer", [`Null]);
                               ("requested_address_types", [`Null]);
                               ("type", [`Null])]]);
                          ("funding_type", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("eps",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("fpx",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("giropay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("grabpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("ideal",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("interac_present", [`ObjectN [("", [`Any])];
                                          `String]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("konbini",
                      [`ObjectN
                         [("", [`Any]);
                          ("confirmation_number", [`Null;
                                                   `Null]);
                          ("expires_after_days", [`Null;
                                                  `Null]);
                          ("expires_at", [`Null;
                                          `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("link",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("mobilepay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("oxxo",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("p24",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String]);
                          ("tos_shown_and_accepted", [`Boolean])];
                       `String]);
                     ("paynow",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("paypal",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("reference", [`String]);
                          ("risk_correlation_id", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("pix",
                      [`ObjectN
                         [("", [`Any]);
                          ("expires_after_seconds", [`Integer]);
                          ("expires_at", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("promptpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("revolut_pay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("sepa_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options", [`ObjectN [("", [`Null])]]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("sofort",
                      [`ObjectN
                         [("", [`Any]); ("preferred_language", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("swish",
                      [`ObjectN
                         [("", [`Any]); ("reference", [`Null;
                                                       `Null]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]);
                          ("financial_connections",
                           [`ObjectN
                              [("", [`Null]); ("permissions", [`Null]);
                               ("prefetch", [`Null]);
                               ("return_url", [`Null])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]); ("collection_method", [`Null])]]);
                          ("networks",
                           [`ObjectN [("", [`Null]); ("requested", [`Null])]]);
                          ("preferred_settlement_speed", [`String]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])];
                       `String]);
                     ("wechat_pay",
                      [`ObjectN
                         [("", [`Any]); ("app_id", [`String]);
                          ("client", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("zip",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String])]]);
                ("payment_method_types", [`Array [(`List (`String))]]);
                ("radar_options",
                 [`ObjectN [("", [`Any]); ("session", [`String])]]);
                ("receipt_email", [`String;
                                   `String]);
                ("return_url", [`String]); ("setup_future_usage", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("carrier", [`String]); ("name", [`String]);
                     ("phone", [`String]); ("tracking_number", [`String])];
                  `String]);
                ("use_stripe_sdk", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b076abc8e8 _lvl ~op ~ctype (_x : t_b076abc8e8) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_b076abc8e8) ~op ~ctype _x
  
  and _mk_body_to_t_b076abc8e8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b076abc8e8) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("application_fee_amount", [`Integer]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("statement_descriptor", [`String]);
                ("transfer_data",
                 [`ObjectN [("", [`Any]); ("amount", [`Integer])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_bef740eaba _lvl ~op ~ctype (_x : t_bef740eaba) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> []
          | Some _x -> [match _x with
                        | Int _x -> `Integer
                        | T_3367d8f27d _x -> `String]);
         ("capture_method", match _x.capture_method with | None -> []
          | Some _x -> [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_36a43363a5 _x -> `ObjectN [("", [`String])]
                        | T_ed503a2cc0 _x -> `String]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("payment_method_configuration",
          match _x.payment_method_configuration with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("institution_number",
                                              let _x = _x.institution_number in
                                              [`String]);
                                             ("transit_number",
                                              let _x = _x.transit_number in
                                              [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("bsb_number",
                                              let _x = _x.bsb_number in
                                              [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("sort_code",
                                              match _x.sort_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_4dc6585554 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_b75b8fba49 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_5c77b2ae12 _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_67c709c58e _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_6fd6f05b14 _x ->
                                                              `String])]]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tax_id", let _x = _x.tax_id in
                                              [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", let _x = _x.bank in
                                              [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("day",
                                                                let _x = _x.day in
                                                                [`Integer]);
                                                               ("month",
                                                                let _x = _x.month in
                                                                [`Integer]);
                                                               ("year",
                                                                let _x = _x.year in
                                                                [`Integer])]])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("radar_options", match _x.radar_options with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("session",
                                              match _x.session with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("iban", let _x = _x.iban in
                                              [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]])]]);
         ("payment_method_options", match _x.payment_method_options with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_786efa4639 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("custom_mandate_url",
                                                                  match _x.custom_mandate_url with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("interval_description",
                                                                  match _x.interval_description with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("payment_schedule",
                                                                  match _x.payment_schedule with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("transaction_type",
                                                                  match _x.transaction_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("verification_method",
                                                match _x.verification_method with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_c6e4b42970 _x -> `String]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [match _x with
                                          | T_b445a22630 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d1207580e3 _x -> `String]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_e08921aa92 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_467c238454 _x -> `String]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [match _x with
                                          | T_14ca1a41af _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_eee60c9ee2 _x -> `String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_11190f681e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_441e0420b3 _x -> `String]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_666fb7da71 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_16f4232959 _x -> `String]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_91fe2caff6 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_fce5121f72 _x -> `String]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_b17e13e751 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("preferred_language",
                                                match _x.preferred_language with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d10504fcb3 _x -> `String]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [match _x with
                                          | T_0b427144b7 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("code", match _x.code with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_a33c2bf778 _x -> `String]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [match _x with
                                          | T_5a947cbd12 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_ff0a6cb1f7 _x -> `String]);
                           ("card", match _x.card with | None -> []
                            | Some _x -> [match _x with
                                          | T_27bbd4b0fe _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("cvc_token",
                                                match _x.cvc_token with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("installments",
                                                match _x.installments with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("enabled",
                                                                  match _x.enabled with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("plan",
                                                                  match _x.plan with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("amount",
                                                                  let _x = _x.amount in
                                                                  [`Null]);
                                                                 ("amount_type",
                                                                  let _x = _x.amount_type in
                                                                  [`Null]);
                                                                 ("description",
                                                                  match _x.description with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("end_date",
                                                                  match _x.end_date with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("interval",
                                                                  let _x = _x.interval in
                                                                  [`Null]);
                                                                 ("interval_count",
                                                                  match _x.interval_count with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("reference",
                                                                  let _x = _x.reference in
                                                                  [`Null]);
                                                                 ("start_date",
                                                                  let _x = _x.start_date in
                                                                  [`Null]);
                                                                 ("supported_types",
                                                                  match _x.supported_types with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("network",
                                                match _x.network with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_extended_authorization",
                                                match _x.request_extended_authorization with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_incremental_authorization",
                                                match _x.request_incremental_authorization with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_multicapture",
                                                match _x.request_multicapture with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_overcapture",
                                                match _x.request_overcapture with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("request_three_d_secure",
                                                match _x.request_three_d_secure with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("require_cvc_recollection",
                                                match _x.require_cvc_recollection with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("statement_descriptor_suffix_kana",
                                                match _x.statement_descriptor_suffix_kana with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_620d3a6fc7 _x ->
                                                                `Null]);
                                               ("statement_descriptor_suffix_kanji",
                                                match _x.statement_descriptor_suffix_kanji with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_0bcacebcf4 _x ->
                                                                `Null]);
                                               ("three_d_secure",
                                                match _x.three_d_secure with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("ares_trans_status",
                                                                  match _x.ares_trans_status with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("cryptogram",
                                                                  let _x = _x.cryptogram in
                                                                  [`Null]);
                                                                 ("electronic_commerce_indicator",
                                                                  match _x.electronic_commerce_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("exemption_indicator",
                                                                  match _x.exemption_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("network_options",
                                                                  match _x.network_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("requestor_challenge_indicator",
                                                                  match _x.requestor_challenge_indicator with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("transaction_id",
                                                                  let _x = _x.transaction_id in
                                                                  [`Null]);
                                                                 ("version",
                                                                  let _x = _x.version in
                                                                  [`Null])]])]
                                          | T_543dbfeff0 _x -> `String]);
                           ("card_present", match _x.card_present with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_2fa1e335a6 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("request_extended_authorization",
                                                match _x.request_extended_authorization with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("request_incremental_authorization_support",
                                                match _x.request_incremental_authorization_support with
                                                | None -> []
                                                | Some _x -> [`Boolean]);
                                               ("routing",
                                                match _x.routing with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("requested_priority",
                                                                  match _x.requested_priority with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]])]
                                          | T_edfe1b4e79 _x -> `String]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [match _x with
                                          | T_009973ed82 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_92bf394724 _x -> `String]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [match _x with
                                          | T_d5015e355e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("bank_transfer",
                                                match _x.bank_transfer with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("eu_bank_transfer",
                                                                  match _x.eu_bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("requested_address_types",
                                                                  match _x.requested_address_types with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("type",
                                                                  let _x = _x.type_ in
                                                                  [`Null])]]);
                                               ("funding_type",
                                                match _x.funding_type with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_067f59747e _x -> `String]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [match _x with
                                          | T_2257189523 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_dc8c5ed185 _x -> `String]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [match _x with
                                          | T_965e58b2dd _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_03b79a97fe _x -> `String]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [match _x with
                                          | T_ef2d6b8b87 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_e626d1451c _x -> `String]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_025de06319 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_4383cf0139 _x -> `String]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [match _x with
                                          | T_45a018c933 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_16f12a6ea6 _x -> `String]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_9ae0352525 _x ->
                                            `ObjectN [("", [`Any])]
                                          | T_f0d43aa162 _x -> `String]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [match _x with
                                          | T_9f40d34f2b _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_d63164dd09 _x -> `String]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [match _x with
                                          | T_85bc1fca85 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("confirmation_number",
                                                match _x.confirmation_number with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_3575f78d98 _x ->
                                                                `Null]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Int _x ->
                                                                `Null
                                                              | T_c872d23f7e _x ->
                                                                `Null]);
                                               ("expires_at",
                                                match _x.expires_at with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | Ptime_t _x ->
                                                                `Null
                                                              | T_7e26f83d7d _x ->
                                                                `Null]);
                                               ("product_description",
                                                match _x.product_description with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_ee5f2508ec _x ->
                                                                `Null]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_c0134a20d5 _x -> `String]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [match _x with
                                          | T_34c37fdf6e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_c5df4de532 _x -> `String]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [match _x with
                                          | T_992d54d50c _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_47f64b5609 _x -> `String]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [match _x with
                                          | T_b1cf60ca64 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_days",
                                                match _x.expires_after_days with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_1c74cd0765 _x -> `String]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [match _x with
                                          | T_3faf95ca9a _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("tos_shown_and_accepted",
                                                match _x.tos_shown_and_accepted with
                                                | None -> []
                                                | Some _x -> [`Boolean])]
                                          | T_e2a5fd49a8 _x -> `String]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [match _x with
                                          | T_580c5f8259 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_751d038189 _x -> `String]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [match _x with
                                          | T_0c95db6a6a _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("preferred_locale",
                                                match _x.preferred_locale with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("risk_correlation_id",
                                                match _x.risk_correlation_id with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_73d220a98c _x -> `String]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [match _x with
                                          | T_9f01347320 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("expires_after_seconds",
                                                match _x.expires_after_seconds with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("expires_at",
                                                match _x.expires_at with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_bed0e60909 _x -> `String]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [match _x with
                                          | T_697da8b732 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_925c085098 _x -> `String]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_80a471563f _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("capture_method",
                                                match _x.capture_method with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_8e1465c221 _x -> `String]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_9b1a96d990 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null])]]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_cd229eea92 _x -> `String]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [match _x with
                                          | T_519c852ed0 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("preferred_language",
                                                match _x.preferred_language with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_394056e8aa _x -> `String]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [match _x with
                                          | T_dd983ba575 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("reference",
                                                match _x.reference with
                                                | None -> []
                                                | Some _x -> [match _x with
                                                              | String_ _x ->
                                                                `Null
                                                              | T_32b94dbef7 _x ->
                                                                `Null]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_4afeca5384 _x -> `String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_b01e600f12 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("financial_connections",
                                                match _x.financial_connections with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("permissions",
                                                                  match _x.permissions with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("prefetch",
                                                                  match _x.prefetch with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("return_url",
                                                                  match _x.return_url with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("mandate_options",
                                                match _x.mandate_options with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("collection_method",
                                                                  match _x.collection_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("networks",
                                                match _x.networks with
                                                | None -> []
                                                | Some _x -> [`ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("requested",
                                                                  match _x.requested with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]]);
                                               ("preferred_settlement_speed",
                                                match _x.preferred_settlement_speed with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("verification_method",
                                                match _x.verification_method with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_3a2764687a _x -> `String]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_23f104e201 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("app_id",
                                                match _x.app_id with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("client",
                                                let _x = _x.client in
                                                [`String]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_f1c8d1846d _x -> `String]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [match _x with
                                          | T_6c299717b2 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("setup_future_usage",
                                                match _x.setup_future_usage with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_29bc9e7d44 _x -> `String])]]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("receipt_email", match _x.receipt_email with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_883051d92f _x -> `String]);
         ("setup_future_usage", match _x.setup_future_usage with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [match _x with
                        | T_855cbb84f6 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address", let _x = _x.address in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("city", match _x.city with | None -> []
                                   | Some _x -> [`String]);
                                  ("country", match _x.country with
                                   | None -> [] | Some _x -> [`String]);
                                  ("line1", match _x.line1 with | None -> []
                                   | Some _x -> [`String]);
                                  ("line2", match _x.line2 with | None -> []
                                   | Some _x -> [`String]);
                                  ("postal_code", match _x.postal_code with
                                   | None -> [] | Some _x -> [`String]);
                                  ("state", match _x.state with | None -> []
                                   | Some _x -> [`String])]]);
                             ("carrier", match _x.carrier with | None -> []
                              | Some _x -> [`String]);
                             ("name", let _x = _x.name in [`String]);
                             ("phone", match _x.phone with | None -> []
                              | Some _x -> [`String]);
                             ("tracking_number",
                              match _x.tracking_number with | None -> []
                              | Some _x -> [`String])]
                        | T_d8e54be6c0 _x -> `String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("statement_descriptor_suffix",
          match _x.statement_descriptor_suffix with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer])]]);
         ("transfer_group", match _x.transfer_group with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_bef740eaba) ~op ~ctype _x
  
  and _mk_body_to_t_bef740eaba _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_bef740eaba) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("application_fee_amount", [`Integer;
                                            `String]);
                ("capture_method", [`String]); ("currency", [`String]);
                ("customer", [`String]); ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("payment_method", [`String]);
                ("payment_method_configuration", [`String]);
                ("payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("institution_number", [`String]);
                          ("transit_number", [`String])]]);
                     ("affirm", [`ObjectN [("", [`Any])]]);
                     ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                     ("alipay", [`ObjectN [("", [`Any])]]);
                     ("allow_redisplay", [`String]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("bsb_number", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("sort_code", [`String])]]);
                     ("bancontact", [`ObjectN [("", [`Any])]]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("blik", [`ObjectN [("", [`Any])]]);
                     ("boleto",
                      [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                     ("cashapp", [`ObjectN [("", [`Any])]]);
                     ("customer_balance", [`ObjectN [("", [`Any])]]);
                     ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("giropay", [`ObjectN [("", [`Any])]]);
                     ("grabpay", [`ObjectN [("", [`Any])]]);
                     ("ideal",
                      [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("interac_present", [`ObjectN [("", [`Any])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]);
                          ("dob",
                           [`ObjectN
                              [("", [`Any]); ("day", [`Integer]);
                               ("month", [`Integer]); ("year", [`Integer])]])]]);
                     ("konbini", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("mobilepay", [`ObjectN [("", [`Any])]]);
                     ("oxxo", [`ObjectN [("", [`Any])]]);
                     ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("paynow", [`ObjectN [("", [`Any])]]);
                     ("paypal", [`ObjectN [("", [`Any])]]);
                     ("pix", [`ObjectN [("", [`Any])]]);
                     ("promptpay", [`ObjectN [("", [`Any])]]);
                     ("radar_options",
                      [`ObjectN [("", [`Any]); ("session", [`String])]]);
                     ("revolut_pay", [`ObjectN [("", [`Any])]]);
                     ("sepa_debit",
                      [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                     ("sofort",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("swish", [`ObjectN [("", [`Any])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]]);
                     ("wechat_pay", [`ObjectN [("", [`Any])]]);
                     ("zip", [`ObjectN [("", [`Any])]])]]);
                ("payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]);
                               ("custom_mandate_url", [`Null]);
                               ("interval_description", [`Null]);
                               ("payment_schedule", [`Null]);
                               ("transaction_type", [`Null])]]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])];
                       `String]);
                     ("affirm",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("afterpay_clearpay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("reference", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("alipay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("amazon_pay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("bancontact",
                      [`ObjectN
                         [("", [`Any]); ("preferred_language", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("blik",
                      [`ObjectN
                         [("", [`Any]); ("code", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("boleto",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("card",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("cvc_token", [`String]);
                          ("installments",
                           [`ObjectN
                              [("", [`Null]); ("enabled", [`Null]);
                               ("plan", [`Null])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]); ("amount", [`Null]);
                               ("amount_type", [`Null]);
                               ("description", [`Null]);
                               ("end_date", [`Null]); ("interval", [`Null]);
                               ("interval_count", [`Null]);
                               ("reference", [`Null]);
                               ("start_date", [`Null]);
                               ("supported_types", [`Null])]]);
                          ("network", [`String]);
                          ("request_extended_authorization", [`String]);
                          ("request_incremental_authorization", [`String]);
                          ("request_multicapture", [`String]);
                          ("request_overcapture", [`String]);
                          ("request_three_d_secure", [`String]);
                          ("require_cvc_recollection", [`Boolean]);
                          ("setup_future_usage", [`String]);
                          ("statement_descriptor_suffix_kana",
                           [`Null;
                            `Null]);
                          ("statement_descriptor_suffix_kanji",
                           [`Null;
                            `Null]);
                          ("three_d_secure",
                           [`ObjectN
                              [("", [`Null]); ("ares_trans_status", [`Null]);
                               ("cryptogram", [`Null]);
                               ("electronic_commerce_indicator", [`Null]);
                               ("exemption_indicator", [`Null]);
                               ("network_options", [`Null]);
                               ("requestor_challenge_indicator", [`Null]);
                               ("transaction_id", [`Null]);
                               ("version", [`Null])]])];
                       `String]);
                     ("card_present",
                      [`ObjectN
                         [("", [`Any]);
                          ("request_extended_authorization", [`Boolean]);
                          ("request_incremental_authorization_support",
                           [`Boolean]);
                          ("routing",
                           [`ObjectN
                              [("", [`Null]);
                               ("requested_priority", [`Null])]])];
                       `String]);
                     ("cashapp",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("customer_balance",
                      [`ObjectN
                         [("", [`Any]);
                          ("bank_transfer",
                           [`ObjectN
                              [("", [`Null]); ("eu_bank_transfer", [`Null]);
                               ("requested_address_types", [`Null]);
                               ("type", [`Null])]]);
                          ("funding_type", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("eps",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("fpx",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("giropay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("grabpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("ideal",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("interac_present", [`ObjectN [("", [`Any])];
                                          `String]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("konbini",
                      [`ObjectN
                         [("", [`Any]);
                          ("confirmation_number", [`Null;
                                                   `Null]);
                          ("expires_after_days", [`Null;
                                                  `Null]);
                          ("expires_at", [`Null;
                                          `Null]);
                          ("product_description", [`Null;
                                                   `Null]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("link",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("mobilepay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("oxxo",
                      [`ObjectN
                         [("", [`Any]); ("expires_after_days", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("p24",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String]);
                          ("tos_shown_and_accepted", [`Boolean])];
                       `String]);
                     ("paynow",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("paypal",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("preferred_locale", [`String]);
                          ("reference", [`String]);
                          ("risk_correlation_id", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("pix",
                      [`ObjectN
                         [("", [`Any]);
                          ("expires_after_seconds", [`Integer]);
                          ("expires_at", [`Integer]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("promptpay",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String]);
                     ("revolut_pay",
                      [`ObjectN
                         [("", [`Any]); ("capture_method", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("sepa_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options", [`ObjectN [("", [`Null])]]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("sofort",
                      [`ObjectN
                         [("", [`Any]); ("preferred_language", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("swish",
                      [`ObjectN
                         [("", [`Any]); ("reference", [`Null;
                                                       `Null]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]);
                          ("financial_connections",
                           [`ObjectN
                              [("", [`Null]); ("permissions", [`Null]);
                               ("prefetch", [`Null]);
                               ("return_url", [`Null])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Null]); ("collection_method", [`Null])]]);
                          ("networks",
                           [`ObjectN [("", [`Null]); ("requested", [`Null])]]);
                          ("preferred_settlement_speed", [`String]);
                          ("setup_future_usage", [`String]);
                          ("verification_method", [`String])];
                       `String]);
                     ("wechat_pay",
                      [`ObjectN
                         [("", [`Any]); ("app_id", [`String]);
                          ("client", [`String]);
                          ("setup_future_usage", [`String])];
                       `String]);
                     ("zip",
                      [`ObjectN
                         [("", [`Any]); ("setup_future_usage", [`String])];
                       `String])]]);
                ("payment_method_types", [`Array [(`List (`String))]]);
                ("receipt_email", [`String;
                                   `String]);
                ("setup_future_usage", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("carrier", [`String]); ("name", [`String]);
                     ("phone", [`String]); ("tracking_number", [`String])];
                  `String]);
                ("statement_descriptor", [`String]);
                ("statement_descriptor_suffix", [`String]);
                ("transfer_data",
                 [`ObjectN [("", [`Any]); ("amount", [`Integer])]]);
                ("transfer_group", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_ecc3072831 _lvl ~op ~ctype (_x : t_ecc3072831) =
    _body_of ~kind:(
      `ObjectN
        [("amounts", match _x.amounts with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : int) ->
                              `Singleton (`Integer)) _x))]);
         ("client_secret", match _x.client_secret with | None -> []
          | Some _x -> [`String]);
         ("descriptor_code", match _x.descriptor_code with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_ecc3072831) ~op ~ctype _x
  
  and _mk_body_to_t_ecc3072831 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_ecc3072831) in _body_to
      ~kind:(`ObjectN
               [("amounts", [`Array [(`List (`Integer))]]);
                ("client_secret", [`String]); ("descriptor_code", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_7a9057bca1 _lvl ~op ~ctype (_x : t_7a9057bca1) =
    _body_of ~kind:(
      `ObjectN
        [("after_completion", match _x.after_completion with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("hosted_confirmation",
                            match _x.hosted_confirmation with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("custom_message",
                                              match _x.custom_message with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("redirect", match _x.redirect with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("url", let _x = _x.url in
                                              [`String])]]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("allow_promotion_codes", match _x.allow_promotion_codes with
          | None -> [] | Some _x -> [`Boolean]);
         ("application_fee_amount", match _x.application_fee_amount with
          | None -> [] | Some _x -> [`Integer]);
         ("application_fee_percent", match _x.application_fee_percent with
          | None -> [] | Some _x -> [`Number]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("billing_address_collection",
          match _x.billing_address_collection with | None -> []
          | Some _x -> [`String]);
         ("consent_collection", match _x.consent_collection with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("payment_method_reuse_agreement",
                            match _x.payment_method_reuse_agreement with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("position",
                                              let _x = _x.position in
                                              [`String])]]);
                           ("promotions", match _x.promotions with
                            | None -> [] | Some _x -> [`String]);
                           ("terms_of_service",
                            match _x.terms_of_service with | None -> []
                            | Some _x -> [`String])]]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("custom_fields", match _x.custom_fields with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_b24f251939) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("dropdown", match _x.dropdown with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("options",
                                                       let _x = _x.options in
                                                       [`Null])]]);
                                    ("key", let _x = _x.key in [`String]);
                                    ("label", let _x = _x.label in
                                     [`ObjectN
                                        [("", [`Null]);
                                         ("custom", let _x = _x.custom in
                                          [`Null]);
                                         ("type", let _x = _x.type_ in
                                          [`Null])]]);
                                    ("numeric", match _x.numeric with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("maximum_length",
                                                       match _x.maximum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("minimum_length",
                                                       match _x.minimum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("optional", match _x.optional with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("text", match _x.text with | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("maximum_length",
                                                       match _x.maximum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("minimum_length",
                                                       match _x.minimum_length with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("type", let _x = _x.type_ in [`String])]))
                              _x))]);
         ("custom_text", match _x.custom_text with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("after_submit", match _x.after_submit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_c4675ece32 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_a6366eda97 _x -> `String]);
                           ("shipping_address",
                            match _x.shipping_address with | None -> []
                            | Some _x -> [match _x with
                                          | T_39d321bdbe _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_e228e8a720 _x -> `String]);
                           ("submit", match _x.submit with | None -> []
                            | Some _x -> [match _x with
                                          | T_ed8646c66e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_506461ab75 _x -> `String]);
                           ("terms_of_service_acceptance",
                            match _x.terms_of_service_acceptance with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_5203fb7581 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_fe521a33a9 _x -> `String])]]);
         ("customer_creation", match _x.customer_creation with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("inactive_message", match _x.inactive_message with | None -> []
          | Some _x -> [`String]);
         ("invoice_creation", match _x.invoice_creation with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("invoice_data", match _x.invoice_data with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_tax_ids",
                                              match _x.account_tax_ids with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | StringList _x ->
                                                              `Array
                                                                ((List.map (fun (_x : string) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_3998b34e77 _x ->
                                                              `String]);
                                             ("custom_fields",
                                              match _x.custom_fields with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_f217335930 _x ->
                                                              `Array
                                                                ((List.map (fun (_x : t_ad4cc9f81b) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_63515f4727 _x ->
                                                              `String]);
                                             ("description",
                                              match _x.description with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("footer", match _x.footer with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]]);
                                             ("metadata",
                                              match _x.metadata with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_6e315d5564 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_9199569113 _x ->
                                                              `String]);
                                             ("rendering_options",
                                              match _x.rendering_options with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_f28f99fbaf _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("amount_tax_display",
                                                                  match _x.amount_tax_display with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_5eabac1807 _x ->
                                                              `String])]])]]);
         ("line_items", let _x = _x.line_items in
          [`Array
             ((List.map (fun (_x : t_849d54fe94) ->
                 `Singleton
                   (`ObjectN
                      [("", [`Any]);
                       ("adjustable_quantity",
                        match _x.adjustable_quantity with | None -> []
                        | Some _x -> [`ObjectN
                                        [("", [`Null]);
                                         ("enabled", let _x = _x.enabled in
                                          [`Null]);
                                         ("maximum", match _x.maximum with
                                          | None -> [] | Some _x -> [`Null]);
                                         ("minimum", match _x.minimum with
                                          | None -> [] | Some _x -> [`Null])]]);
                       ("price", let _x = _x.price in [`String]);
                       ("quantity", let _x = _x.quantity in [`Integer])])) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [`String]);
         ("payment_intent_data", match _x.payment_intent_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("capture_method", match _x.capture_method with
                            | None -> [] | Some _x -> [`String]);
                           ("description", match _x.description with
                            | None -> [] | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("setup_future_usage",
                            match _x.setup_future_usage with | None -> []
                            | Some _x -> [`String]);
                           ("statement_descriptor",
                            match _x.statement_descriptor with | None -> []
                            | Some _x -> [`String]);
                           ("statement_descriptor_suffix",
                            match _x.statement_descriptor_suffix with
                            | None -> [] | Some _x -> [`String]);
                           ("transfer_group", match _x.transfer_group with
                            | None -> [] | Some _x -> [`String])]]);
         ("payment_method_collection",
          match _x.payment_method_collection with | None -> []
          | Some _x -> [`String]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_c99f767c40) ->
                              `Singleton (`String)) _x))]);
         ("phone_number_collection", match _x.phone_number_collection with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("restrictions", match _x.restrictions with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("completed_sessions",
                            let _x = _x.completed_sessions in
                            [`ObjectN
                               [("", [`Any]);
                                ("limit", let _x = _x.limit in [`Integer])]])]]);
         ("shipping_address_collection",
          match _x.shipping_address_collection with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allowed_countries",
                            let _x = _x.allowed_countries in
                            [`Array
                               ((List.map (fun (_x : t_2bec385606) ->
                                   `Singleton (`String)) _x))])]]);
         ("shipping_options", match _x.shipping_options with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_74a6067bd6) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("shipping_rate",
                                     match _x.shipping_rate with | None -> []
                                     | Some _x -> [`String])])) _x))]);
         ("submit_type", match _x.submit_type with | None -> []
          | Some _x -> [`String]);
         ("subscription_data", match _x.subscription_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("description", match _x.description with
                            | None -> [] | Some _x -> [`String]);
                           ("invoice_settings",
                            match _x.invoice_settings with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("trial_period_days",
                            match _x.trial_period_days with | None -> []
                            | Some _x -> [`Integer]);
                           ("trial_settings", match _x.trial_settings with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("end_behavior",
                                              let _x = _x.end_behavior in
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("missing_payment_method",
                                                   let _x = _x.missing_payment_method in
                                                   [`String])]])]])]]);
         ("tax_id_collection", match _x.tax_id_collection with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer]);
                           ("destination", let _x = _x.destination in
                            [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_7a9057bca1) ~op ~ctype _x
  
  and _mk_body_to_t_7a9057bca1 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_7a9057bca1) in _body_to
      ~kind:(`ObjectN
               [("after_completion",
                 [`ObjectN
                    [("", [`Any]);
                     ("hosted_confirmation",
                      [`ObjectN [("", [`Any]); ("custom_message", [`String])]]);
                     ("redirect",
                      [`ObjectN [("", [`Any]); ("url", [`String])]]);
                     ("type", [`String])]]);
                ("allow_promotion_codes", [`Boolean]);
                ("application_fee_amount", [`Integer]);
                ("application_fee_percent", [`Number]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("billing_address_collection", [`String]);
                ("consent_collection",
                 [`ObjectN
                    [("", [`Any]);
                     ("payment_method_reuse_agreement",
                      [`ObjectN [("", [`Any]); ("position", [`String])]]);
                     ("promotions", [`String]);
                     ("terms_of_service", [`String])]]);
                ("currency", [`String]);
                ("custom_fields",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("dropdown",
                             [`ObjectN [("", [`Null]); ("options", [`Null])]]);
                            ("key", [`String]);
                            ("label",
                             [`ObjectN
                                [("", [`Null]); ("custom", [`Null]);
                                 ("type", [`Null])]]);
                            ("numeric",
                             [`ObjectN
                                [("", [`Null]); ("maximum_length", [`Null]);
                                 ("minimum_length", [`Null])]]);
                            ("optional", [`Boolean]);
                            ("text",
                             [`ObjectN
                                [("", [`Null]); ("maximum_length", [`Null]);
                                 ("minimum_length", [`Null])]]);
                            ("type", [`String])]))]]);
                ("custom_text",
                 [`ObjectN
                    [("", [`Any]);
                     ("after_submit",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("shipping_address",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("submit",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("terms_of_service_acceptance",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String])]]);
                ("customer_creation", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("inactive_message", [`String]);
                ("invoice_creation",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("invoice_data",
                      [`ObjectN
                         [("", [`Any]);
                          ("account_tax_ids",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("custom_fields",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("description", [`String]); ("footer", [`String]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]]);
                          ("metadata", [`ObjectN [("", [`Null])];
                                        `String]);
                          ("rendering_options",
                           [`ObjectN
                              [("", [`Null]);
                               ("amount_tax_display", [`Null])];
                            `String])]])]]);
                ("line_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("adjustable_quantity",
                             [`ObjectN
                                [("", [`Null]); ("enabled", [`Null]);
                                 ("maximum", [`Null]); ("minimum", [`Null])]]);
                            ("price", [`String]); ("quantity", [`Integer])]))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("on_behalf_of", [`String]);
                ("payment_intent_data",
                 [`ObjectN
                    [("", [`Any]); ("capture_method", [`String]);
                     ("description", [`String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("setup_future_usage", [`String]);
                     ("statement_descriptor", [`String]);
                     ("statement_descriptor_suffix", [`String]);
                     ("transfer_group", [`String])]]);
                ("payment_method_collection", [`String]);
                ("payment_method_types", [`Array [(`List (`String))]]);
                ("phone_number_collection",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                ("restrictions",
                 [`ObjectN
                    [("", [`Any]);
                     ("completed_sessions",
                      [`ObjectN [("", [`Any]); ("limit", [`Integer])]])]]);
                ("shipping_address_collection",
                 [`ObjectN
                    [("", [`Any]);
                     ("allowed_countries", [`Array [(`List (`String))]])]]);
                ("shipping_options",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("shipping_rate", [`String])]))]]);
                ("submit_type", [`String]);
                ("subscription_data",
                 [`ObjectN
                    [("", [`Any]); ("description", [`String]);
                     ("invoice_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("trial_period_days", [`Integer]);
                     ("trial_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("end_behavior",
                           [`ObjectN
                              [("", [`Any]);
                               ("missing_payment_method", [`String])]])]])]]);
                ("tax_id_collection",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])]]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("destination", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_d37b238f78 _lvl ~op ~ctype (_x : t_d37b238f78) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("after_completion", match _x.after_completion with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("hosted_confirmation",
                            match _x.hosted_confirmation with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("custom_message",
                                              match _x.custom_message with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("redirect", match _x.redirect with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("url", let _x = _x.url in
                                              [`String])]]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("allow_promotion_codes", match _x.allow_promotion_codes with
          | None -> [] | Some _x -> [`Boolean]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("billing_address_collection",
          match _x.billing_address_collection with | None -> []
          | Some _x -> [`String]);
         ("custom_fields", match _x.custom_fields with | None -> []
          | Some _x -> [match _x with
                        | T_c14cc8d4af _x ->
                          `Array
                            ((List.map (fun (_x : t_7ed069217f) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("dropdown", match _x.dropdown with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("key", let _x = _x.key in [`Null]);
                                      ("label", let _x = _x.label in [`Null]);
                                      ("numeric", match _x.numeric with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("optional", match _x.optional with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("text", match _x.text with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("type", let _x = _x.type_ in [`Null])]))
                                _x))
                        | T_86503d6646 _x -> `String]);
         ("custom_text", match _x.custom_text with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("after_submit", match _x.after_submit with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_d7c928e5ab _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_61fb19ff6b _x -> `String]);
                           ("shipping_address",
                            match _x.shipping_address with | None -> []
                            | Some _x -> [match _x with
                                          | T_23cc712435 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_83ad6b1a82 _x -> `String]);
                           ("submit", match _x.submit with | None -> []
                            | Some _x -> [match _x with
                                          | T_226fa398b8 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_8aa75101b1 _x -> `String]);
                           ("terms_of_service_acceptance",
                            match _x.terms_of_service_acceptance with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_aa3bea79c1 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("message",
                                                let _x = _x.message in
                                                [`String])]
                                          | T_5749eeb79b _x -> `String])]]);
         ("customer_creation", match _x.customer_creation with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("inactive_message", match _x.inactive_message with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_89b107e6ef _x -> `String]);
         ("invoice_creation", match _x.invoice_creation with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("invoice_data", match _x.invoice_data with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_tax_ids",
                                              match _x.account_tax_ids with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | StringList _x ->
                                                              `Array
                                                                ((List.map (fun (_x : string) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_3e69d97f64 _x ->
                                                              `String]);
                                             ("custom_fields",
                                              match _x.custom_fields with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_5fc7c7a9d0 _x ->
                                                              `Array
                                                                ((List.map (fun (_x : t_465c25a1c9) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_8bbd0bdb01 _x ->
                                                              `String]);
                                             ("description",
                                              match _x.description with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("footer", match _x.footer with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]]);
                                             ("metadata",
                                              match _x.metadata with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_9523f2c5d6 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_805c709f8b _x ->
                                                              `String]);
                                             ("rendering_options",
                                              match _x.rendering_options with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_24ee859250 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("amount_tax_display",
                                                                  match _x.amount_tax_display with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_d1bfb4cb2e _x ->
                                                              `String])]])]]);
         ("line_items", match _x.line_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_d4362f32b8) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("adjustable_quantity",
                                     match _x.adjustable_quantity with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("enabled",
                                                       let _x = _x.enabled in
                                                       [`Null]);
                                                      ("maximum",
                                                       match _x.maximum with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("minimum",
                                                       match _x.minimum with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("id", let _x = _x.id in [`String]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("payment_intent_data", match _x.payment_intent_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("description", match _x.description with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_281752bc0d _x -> `String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [match _x with
                                          | T_c1f5842f7f _x ->
                                            `ObjectN [("", [`String])]
                                          | T_74ad048588 _x -> `String]);
                           ("statement_descriptor",
                            match _x.statement_descriptor with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_209766d43e _x -> `String]);
                           ("statement_descriptor_suffix",
                            match _x.statement_descriptor_suffix with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_7c2cca4152 _x -> `String]);
                           ("transfer_group", match _x.transfer_group with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_9ca8108b1c _x -> `String])]]);
         ("payment_method_collection",
          match _x.payment_method_collection with | None -> []
          | Some _x -> [`String]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [match _x with
                        | T_cd9ebb009a _x ->
                          `Array
                            ((List.map (fun (_x : t_0b09c5985b) ->
                                `Singleton (`String)) _x))
                        | T_46ae54e801 _x -> `String]);
         ("restrictions", match _x.restrictions with | None -> []
          | Some _x -> [match _x with
                        | T_2f0d2e38fc _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("completed_sessions",
                              let _x = _x.completed_sessions in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("limit", let _x = _x.limit in [`Integer])]])]
                        | T_57e7699479 _x -> `String]);
         ("shipping_address_collection",
          match _x.shipping_address_collection with | None -> []
          | Some _x -> [match _x with
                        | T_26fdd8a2cb _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("allowed_countries",
                              let _x = _x.allowed_countries in
                              [`Array
                                 ((List.map (fun (_x : t_c78a019162) ->
                                     `Singleton (`Null)) _x))])]
                        | T_e76e7be108 _x -> `String]);
         ("subscription_data", match _x.subscription_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("invoice_settings",
                            match _x.invoice_settings with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [match _x with
                                          | T_7021dd03c5 _x ->
                                            `ObjectN [("", [`String])]
                                          | T_958b90dbb5 _x -> `String]);
                           ("trial_settings", match _x.trial_settings with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_fb4c110a17 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("end_behavior",
                                                let _x = _x.end_behavior in
                                                [`ObjectN
                                                   [("", [`Null]);
                                                    ("missing_payment_method",
                                                     let _x = _x.missing_payment_method in
                                                     [`Null])]])]
                                          | T_7414c103cf _x -> `String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_d37b238f78) ~op ~ctype _x
  
  and _mk_body_to_t_d37b238f78 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d37b238f78) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("after_completion",
                 [`ObjectN
                    [("", [`Any]);
                     ("hosted_confirmation",
                      [`ObjectN [("", [`Any]); ("custom_message", [`String])]]);
                     ("redirect",
                      [`ObjectN [("", [`Any]); ("url", [`String])]]);
                     ("type", [`String])]]);
                ("allow_promotion_codes", [`Boolean]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("billing_address_collection", [`String]);
                ("custom_fields",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("dropdown", [`Null]);
                            ("key", [`Null]); ("label", [`Null]);
                            ("numeric", [`Null]); ("optional", [`Null]);
                            ("text", [`Null]); ("type", [`Null])]))];
                  `String]);
                ("custom_text",
                 [`ObjectN
                    [("", [`Any]);
                     ("after_submit",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("shipping_address",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("submit",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String]);
                     ("terms_of_service_acceptance",
                      [`ObjectN [("", [`Any]); ("message", [`String])];
                       `String])]]);
                ("customer_creation", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("inactive_message", [`String;
                                      `String]);
                ("invoice_creation",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("invoice_data",
                      [`ObjectN
                         [("", [`Any]);
                          ("account_tax_ids",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("custom_fields",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("description", [`String]); ("footer", [`String]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]]);
                          ("metadata", [`ObjectN [("", [`Null])];
                                        `String]);
                          ("rendering_options",
                           [`ObjectN
                              [("", [`Null]);
                               ("amount_tax_display", [`Null])];
                            `String])]])]]);
                ("line_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("adjustable_quantity",
                             [`ObjectN
                                [("", [`Null]); ("enabled", [`Null]);
                                 ("maximum", [`Null]); ("minimum", [`Null])]]);
                            ("id", [`String]); ("quantity", [`Integer])]))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("payment_intent_data",
                 [`ObjectN
                    [("", [`Any]); ("description", [`String;
                                                    `String]);
                     ("metadata", [`ObjectN [("", [`String])];
                                   `String]);
                     ("statement_descriptor", [`String;
                                               `String]);
                     ("statement_descriptor_suffix", [`String;
                                                      `String]);
                     ("transfer_group", [`String;
                                         `String])]]);
                ("payment_method_collection", [`String]);
                ("payment_method_types",
                 [`Array [(`List (`String))];
                  `String]);
                ("restrictions",
                 [`ObjectN
                    [("", [`Any]);
                     ("completed_sessions",
                      [`ObjectN [("", [`Any]); ("limit", [`Integer])]])];
                  `String]);
                ("shipping_address_collection",
                 [`ObjectN
                    [("", [`Any]);
                     ("allowed_countries", [`Array [(`List (`Null))]])];
                  `String]);
                ("subscription_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("invoice_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]])]]);
                     ("metadata", [`ObjectN [("", [`String])];
                                   `String]);
                     ("trial_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("end_behavior",
                           [`ObjectN
                              [("", [`Null]);
                               ("missing_payment_method", [`Null])]])];
                       `String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_90a3b32557 _lvl ~op ~ctype (_x : t_90a3b32557) =
    _body_of ~kind:(
      `ObjectN
        [("acss_debit", match _x.acss_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("affirm", match _x.affirm with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("afterpay_clearpay", match _x.afterpay_clearpay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("alipay", match _x.alipay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("amazon_pay", match _x.amazon_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("apple_pay", match _x.apple_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("apple_pay_later", match _x.apple_pay_later with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("au_becs_debit", match _x.au_becs_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("bacs_debit", match _x.bacs_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("bancontact", match _x.bancontact with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("blik", match _x.blik with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("boleto", match _x.boleto with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("card", match _x.card with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("cartes_bancaires", match _x.cartes_bancaires with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("cashapp", match _x.cashapp with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("customer_balance", match _x.customer_balance with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("eps", match _x.eps with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("fpx", match _x.fpx with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("giropay", match _x.giropay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("google_pay", match _x.google_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("grabpay", match _x.grabpay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("ideal", match _x.ideal with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("jcb", match _x.jcb with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("klarna", match _x.klarna with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("konbini", match _x.konbini with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("link", match _x.link with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("mobilepay", match _x.mobilepay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("oxxo", match _x.oxxo with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("p24", match _x.p24 with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("parent", match _x.parent with | None -> [] | Some _x -> [`String]);
         ("paynow", match _x.paynow with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("paypal", match _x.paypal with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("promptpay", match _x.promptpay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("revolut_pay", match _x.revolut_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("sepa_debit", match _x.sepa_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("sofort", match _x.sofort with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("swish", match _x.swish with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("us_bank_account", match _x.us_bank_account with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("wechat_pay", match _x.wechat_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("zip", match _x.zip with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_90a3b32557) ~op ~ctype _x
  
  and _mk_body_to_t_90a3b32557 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_90a3b32557) in _body_to
      ~kind:(`ObjectN
               [("acss_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("affirm",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("afterpay_clearpay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("alipay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("amazon_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("apple_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("apple_pay_later",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("au_becs_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("bacs_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("bancontact",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("blik",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("boleto",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("card",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("cartes_bancaires",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("cashapp",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("customer_balance",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("eps",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("fpx",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("giropay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("google_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("grabpay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("ideal",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("jcb",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("klarna",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("konbini",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("link",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("mobilepay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("name", [`String]);
                ("oxxo",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("p24",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("parent", [`String]);
                ("paynow",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("paypal",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("promptpay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("revolut_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("sepa_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("sofort",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("swish",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("us_bank_account",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("wechat_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("zip",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_1d2414e106 _lvl ~op ~ctype (_x : t_1d2414e106) =
    _body_of ~kind:(
      `ObjectN
        [("acss_debit", match _x.acss_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("affirm", match _x.affirm with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("afterpay_clearpay", match _x.afterpay_clearpay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("alipay", match _x.alipay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("amazon_pay", match _x.amazon_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("apple_pay", match _x.apple_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("apple_pay_later", match _x.apple_pay_later with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("au_becs_debit", match _x.au_becs_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("bacs_debit", match _x.bacs_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("bancontact", match _x.bancontact with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("blik", match _x.blik with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("boleto", match _x.boleto with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("card", match _x.card with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("cartes_bancaires", match _x.cartes_bancaires with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("cashapp", match _x.cashapp with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("customer_balance", match _x.customer_balance with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("eps", match _x.eps with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("fpx", match _x.fpx with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("giropay", match _x.giropay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("google_pay", match _x.google_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("grabpay", match _x.grabpay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("ideal", match _x.ideal with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("jcb", match _x.jcb with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("klarna", match _x.klarna with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("konbini", match _x.konbini with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("link", match _x.link with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("mobilepay", match _x.mobilepay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("oxxo", match _x.oxxo with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("p24", match _x.p24 with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("paynow", match _x.paynow with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("paypal", match _x.paypal with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("promptpay", match _x.promptpay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("revolut_pay", match _x.revolut_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("sepa_debit", match _x.sepa_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("sofort", match _x.sofort with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("swish", match _x.swish with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("us_bank_account", match _x.us_bank_account with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("wechat_pay", match _x.wechat_pay with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("zip", match _x.zip with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("display_preference",
                            match _x.display_preference with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preference",
                                              match _x.preference with
                                              | None -> []
                                              | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_1d2414e106) ~op ~ctype _x
  
  and _mk_body_to_t_1d2414e106 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_1d2414e106) in _body_to
      ~kind:(`ObjectN
               [("acss_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("active", [`Boolean]);
                ("affirm",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("afterpay_clearpay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("alipay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("amazon_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("apple_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("apple_pay_later",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("au_becs_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("bacs_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("bancontact",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("blik",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("boleto",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("card",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("cartes_bancaires",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("cashapp",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("customer_balance",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("eps",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("fpx",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("giropay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("google_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("grabpay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("ideal",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("jcb",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("klarna",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("konbini",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("link",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("mobilepay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("name", [`String]);
                ("oxxo",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("p24",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("paynow",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("paypal",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("promptpay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("revolut_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("sepa_debit",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("sofort",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("swish",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("us_bank_account",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("wechat_pay",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]]);
                ("zip",
                 [`ObjectN
                    [("", [`Any]);
                     ("display_preference",
                      [`ObjectN [("", [`Any]); ("preference", [`String])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_3902b0d8d0 _lvl ~op ~ctype (_x : t_3902b0d8d0) =
    _body_of ~kind:(
      `ObjectN
        [("domain_name", let _x = _x.domain_name in [`String]);
         ("enabled", match _x.enabled with | None -> []
          | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_3902b0d8d0) ~op ~ctype _x
  
  and _mk_body_to_t_3902b0d8d0 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3902b0d8d0) in _body_to
      ~kind:(`ObjectN
               [("domain_name", [`String]); ("enabled", [`Boolean]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_5744fbdd2a _lvl ~op ~ctype (_x : t_5744fbdd2a) =
    _body_of ~kind:(
      `ObjectN
        [("enabled", match _x.enabled with | None -> []
          | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_5744fbdd2a) ~op ~ctype _x
  
  and _mk_body_to_t_5744fbdd2a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5744fbdd2a) in _body_to
      ~kind:(`ObjectN
               [("enabled", [`Boolean]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_a6e453345c _lvl ~op ~ctype (_x : t_a6e453345c) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_a6e453345c) ~op ~ctype _x
  
  and _mk_body_to_t_a6e453345c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a6e453345c) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_24dc407bac _lvl ~op ~ctype (_x : t_24dc407bac) =
    _body_of ~kind:(
      `ObjectN
        [("acss_debit", match _x.acss_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_number", let _x = _x.account_number in
                            [`String]);
                           ("institution_number",
                            let _x = _x.institution_number in [`String]);
                           ("transit_number", let _x = _x.transit_number in
                            [`String])]]);
         ("affirm", match _x.affirm with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("afterpay_clearpay", match _x.afterpay_clearpay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("alipay", match _x.alipay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("allow_redisplay", match _x.allow_redisplay with | None -> []
          | Some _x -> [`String]);
         ("amazon_pay", match _x.amazon_pay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("au_becs_debit", match _x.au_becs_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_number", let _x = _x.account_number in
                            [`String]);
                           ("bsb_number", let _x = _x.bsb_number in
                            [`String])]]);
         ("bacs_debit", match _x.bacs_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_number", match _x.account_number with
                            | None -> [] | Some _x -> [`String]);
                           ("sort_code", match _x.sort_code with | None -> []
                            | Some _x -> [`String])]]);
         ("bancontact", match _x.bancontact with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("billing_details", match _x.billing_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [match _x with
                                          | T_0d05ac6525 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("city", match _x.city with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("country",
                                                match _x.country with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("line1", match _x.line1 with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("line2", match _x.line2 with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("postal_code",
                                                match _x.postal_code with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("state", match _x.state with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_0453b00b5e _x -> `String]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_420a8309a5 _x -> `String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_2791b58daa _x -> `String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_3195713de9 _x -> `String])]]);
         ("blik", match _x.blik with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("boleto", match _x.boleto with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("tax_id", let _x = _x.tax_id in [`String])]]);
         ("card", match _x.card with | None -> []
          | Some _x -> [match _x with
                        | T_3b3c23fc33 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("cvc", match _x.cvc with | None -> []
                              | Some _x -> [`String]);
                             ("exp_month", let _x = _x.exp_month in
                              [`Integer]);
                             ("exp_year", let _x = _x.exp_year in [`Integer]);
                             ("networks", match _x.networks with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("preferred",
                                                match _x.preferred with
                                                | None -> []
                                                | Some _x -> [`String])]]);
                             ("number", let _x = _x.number in [`String])]
                        | T_b294632a7a _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("token", let _x = _x.token in [`String])]]);
         ("cashapp", match _x.cashapp with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("customer_balance", match _x.customer_balance with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("eps", match _x.eps with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank", match _x.bank with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("fpx", match _x.fpx with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank", let _x = _x.bank in [`String])]]);
         ("giropay", match _x.giropay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("grabpay", match _x.grabpay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("ideal", match _x.ideal with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank", match _x.bank with | None -> []
                            | Some _x -> [`String])]]);
         ("interac_present", match _x.interac_present with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("klarna", match _x.klarna with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("dob", match _x.dob with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("day", let _x = _x.day in
                                              [`Integer]);
                                             ("month", let _x = _x.month in
                                              [`Integer]);
                                             ("year", let _x = _x.year in
                                              [`Integer])]])]]);
         ("konbini", match _x.konbini with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("link", match _x.link with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("mobilepay", match _x.mobilepay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("oxxo", match _x.oxxo with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("p24", match _x.p24 with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("bank", match _x.bank with | None -> []
                            | Some _x -> [`String])]]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("paynow", match _x.paynow with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("paypal", match _x.paypal with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("pix", match _x.pix with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("promptpay", match _x.promptpay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("radar_options", match _x.radar_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("session", match _x.session with | None -> []
                            | Some _x -> [`String])]]);
         ("revolut_pay", match _x.revolut_pay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("sepa_debit", match _x.sepa_debit with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("iban", let _x = _x.iban in [`String])]]);
         ("sofort", match _x.sofort with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("country", let _x = _x.country in [`String])]]);
         ("swish", match _x.swish with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String]);
         ("us_bank_account", match _x.us_bank_account with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_holder_type",
                            match _x.account_holder_type with | None -> []
                            | Some _x -> [`String]);
                           ("account_number", match _x.account_number with
                            | None -> [] | Some _x -> [`String]);
                           ("account_type", match _x.account_type with
                            | None -> [] | Some _x -> [`String]);
                           ("financial_connections_account",
                            match _x.financial_connections_account with
                            | None -> [] | Some _x -> [`String]);
                           ("routing_number", match _x.routing_number with
                            | None -> [] | Some _x -> [`String])]]);
         ("wechat_pay", match _x.wechat_pay with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("zip", match _x.zip with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_24dc407bac) ~op ~ctype _x
  
  and _mk_body_to_t_24dc407bac _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_24dc407bac) in _body_to
      ~kind:(`ObjectN
               [("acss_debit",
                 [`ObjectN
                    [("", [`Any]); ("account_number", [`String]);
                     ("institution_number", [`String]);
                     ("transit_number", [`String])]]);
                ("affirm", [`ObjectN [("", [`Any])]]);
                ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                ("alipay", [`ObjectN [("", [`Any])]]);
                ("allow_redisplay", [`String]);
                ("amazon_pay", [`ObjectN [("", [`Any])]]);
                ("au_becs_debit",
                 [`ObjectN
                    [("", [`Any]); ("account_number", [`String]);
                     ("bsb_number", [`String])]]);
                ("bacs_debit",
                 [`ObjectN
                    [("", [`Any]); ("account_number", [`String]);
                     ("sort_code", [`String])]]);
                ("bancontact", [`ObjectN [("", [`Any])]]);
                ("billing_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])];
                       `String]);
                     ("email", [`String;
                                `String]);
                     ("name", [`String;
                               `String]);
                     ("phone", [`String;
                                `String])]]);
                ("blik", [`ObjectN [("", [`Any])]]);
                ("boleto", [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("cvc", [`String]);
                     ("exp_month", [`Integer]); ("exp_year", [`Integer]);
                     ("networks",
                      [`ObjectN [("", [`Any]); ("preferred", [`String])]]);
                     ("number", [`String])];
                  `ObjectN [("", [`Any]); ("token", [`String])]]);
                ("cashapp", [`ObjectN [("", [`Any])]]);
                ("customer", [`String]);
                ("customer_balance", [`ObjectN [("", [`Any])]]);
                ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                ("giropay", [`ObjectN [("", [`Any])]]);
                ("grabpay", [`ObjectN [("", [`Any])]]);
                ("ideal", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                ("interac_present", [`ObjectN [("", [`Any])]]);
                ("klarna",
                 [`ObjectN
                    [("", [`Any]);
                     ("dob",
                      [`ObjectN
                         [("", [`Any]); ("day", [`Integer]);
                          ("month", [`Integer]); ("year", [`Integer])]])]]);
                ("konbini", [`ObjectN [("", [`Any])]]);
                ("link", [`ObjectN [("", [`Any])]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("mobilepay", [`ObjectN [("", [`Any])]]);
                ("oxxo", [`ObjectN [("", [`Any])]]);
                ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                ("payment_method", [`String]);
                ("paynow", [`ObjectN [("", [`Any])]]);
                ("paypal", [`ObjectN [("", [`Any])]]);
                ("pix", [`ObjectN [("", [`Any])]]);
                ("promptpay", [`ObjectN [("", [`Any])]]);
                ("radar_options",
                 [`ObjectN [("", [`Any]); ("session", [`String])]]);
                ("revolut_pay", [`ObjectN [("", [`Any])]]);
                ("sepa_debit",
                 [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                ("sofort", [`ObjectN [("", [`Any]); ("country", [`String])]]);
                ("swish", [`ObjectN [("", [`Any])]]); ("type", [`String]);
                ("us_bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_type", [`String]);
                     ("account_number", [`String]);
                     ("account_type", [`String]);
                     ("financial_connections_account", [`String]);
                     ("routing_number", [`String])]]);
                ("wechat_pay", [`ObjectN [("", [`Any])]]);
                ("zip", [`ObjectN [("", [`Any])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_6de8aa236a _lvl ~op ~ctype (_x : t_6de8aa236a) =
    _body_of ~kind:(
      `ObjectN
        [("customer", let _x = _x.customer in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_6de8aa236a) ~op ~ctype _x
  
  and _mk_body_to_t_6de8aa236a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6de8aa236a) in _body_to
      ~kind:(`ObjectN
               [("customer", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c188522c32 _lvl ~op ~ctype (_x : t_c188522c32) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_c188522c32) ~op ~ctype _x
  
  and _mk_body_to_t_c188522c32 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c188522c32) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_45d221f917 _lvl ~op ~ctype (_x : t_45d221f917) =
    _body_of ~kind:(
      `ObjectN
        [("allow_redisplay", match _x.allow_redisplay with | None -> []
          | Some _x -> [`String]);
         ("billing_details", match _x.billing_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [match _x with
                                          | T_cc7918c16c _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("city", match _x.city with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("country",
                                                match _x.country with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("line1", match _x.line1 with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("line2", match _x.line2 with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("postal_code",
                                                match _x.postal_code with
                                                | None -> []
                                                | Some _x -> [`String]);
                                               ("state", match _x.state with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_e888046582 _x -> `String]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_87ac67e4fa _x -> `String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_ba9d51533f _x -> `String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_48131cb9e1 _x -> `String])]]);
         ("card", match _x.card with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("exp_month", match _x.exp_month with | None -> []
                            | Some _x -> [`Integer]);
                           ("exp_year", match _x.exp_year with | None -> []
                            | Some _x -> [`Integer]);
                           ("networks", match _x.networks with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("preferred",
                                              match _x.preferred with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("link", match _x.link with | None -> []
          | Some _x -> [`ObjectN [("", [`Any])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_c19741c212 _x -> `ObjectN [("", [`String])]
                        | T_2fc0c9f127 _x -> `String]);
         ("us_bank_account", match _x.us_bank_account with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_holder_type",
                            match _x.account_holder_type with | None -> []
                            | Some _x -> [`String]);
                           ("account_type", match _x.account_type with
                            | None -> [] | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_45d221f917) ~op ~ctype _x
  
  and _mk_body_to_t_45d221f917 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_45d221f917) in _body_to
      ~kind:(`ObjectN
               [("allow_redisplay", [`String]);
                ("billing_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])];
                       `String]);
                     ("email", [`String;
                                `String]);
                     ("name", [`String;
                               `String]);
                     ("phone", [`String;
                                `String])]]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("exp_month", [`Integer]);
                     ("exp_year", [`Integer]);
                     ("networks",
                      [`ObjectN [("", [`Any]); ("preferred", [`String])]])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("link", [`ObjectN [("", [`Any])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("us_bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_type", [`String]);
                     ("account_type", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_38947bfb23 _lvl ~op ~ctype (_x : t_38947bfb23) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("destination", match _x.destination with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("method", match _x.method_ with | None -> []
          | Some _x -> [`String]);
         ("source_type", match _x.source_type with | None -> []
          | Some _x -> [`String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_38947bfb23) ~op ~ctype _x
  
  and _mk_body_to_t_38947bfb23 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_38947bfb23) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]); ("destination", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("method", [`String]); ("source_type", [`String]);
                ("statement_descriptor", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b85f8d8c81 _lvl ~op ~ctype (_x : t_b85f8d8c81) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_b85f8d8c81) ~op ~ctype _x
  
  and _mk_body_to_t_b85f8d8c81 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b85f8d8c81) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_4a2fd304c4 _lvl ~op ~ctype (_x : t_4a2fd304c4) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_c8e2a3e8e4 _x -> `ObjectN [("", [`String])]
                        | T_5500b76408 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_4a2fd304c4) ~op ~ctype _x
  
  and _mk_body_to_t_4a2fd304c4 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4a2fd304c4) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_4c281d3f89 _lvl ~op ~ctype (_x : t_4c281d3f89) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_4c281d3f89) ~op ~ctype _x
  
  and _mk_body_to_t_4c281d3f89 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4c281d3f89) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_e64c12fea8 _lvl ~op ~ctype (_x : t_e64c12fea8) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("aggregate_usage", match _x.aggregate_usage with | None -> []
          | Some _x -> [`String]);
         ("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("amount_decimal", match _x.amount_decimal with | None -> []
          | Some _x -> [`String]);
         ("billing_scheme", match _x.billing_scheme with | None -> []
          | Some _x -> [`String]);
         ("currency", let _x = _x.currency in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("id", match _x.id with | None -> [] | Some _x -> [`String]);
         ("interval", let _x = _x.interval in [`String]);
         ("interval_count", match _x.interval_count with | None -> []
          | Some _x -> [`Integer]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_273d5b0c16 _x -> `ObjectN [("", [`String])]
                        | T_1224a1d167 _x -> `String]);
         ("meter", match _x.meter with | None -> [] | Some _x -> [`String]);
         ("nickname", match _x.nickname with | None -> []
          | Some _x -> [`String]);
         ("product", match _x.product with | None -> []
          | Some _x -> [match _x with
                        | T_cc80ecee27 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("active", match _x.active with | None -> []
                              | Some _x -> [`Boolean]);
                             ("id", match _x.id with | None -> []
                              | Some _x -> [`String]);
                             ("metadata", match _x.metadata with | None -> []
                              | Some _x -> [`ObjectN [("", [`String])]]);
                             ("name", let _x = _x.name in [`String]);
                             ("statement_descriptor",
                              match _x.statement_descriptor with | None -> []
                              | Some _x -> [`String]);
                             ("tax_code", match _x.tax_code with | None -> []
                              | Some _x -> [`String]);
                             ("unit_label", match _x.unit_label with
                              | None -> [] | Some _x -> [`String])]
                        | String_ _x -> `String]);
         ("tiers", match _x.tiers with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_200ab647fa) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("flat_amount", match _x.flat_amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("flat_amount_decimal",
                                     match _x.flat_amount_decimal with
                                     | None -> [] | Some _x -> [`String]);
                                    ("unit_amount", match _x.unit_amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("unit_amount_decimal",
                                     match _x.unit_amount_decimal with
                                     | None -> [] | Some _x -> [`String]);
                                    ("up_to", let _x = _x.up_to in
                                     [match _x with
                                      | T_51ac6e2e71 _x -> `Null
                                      | Int _x -> `Null])])) _x))]);
         ("tiers_mode", match _x.tiers_mode with | None -> []
          | Some _x -> [`String]);
         ("transform_usage", match _x.transform_usage with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("divide_by", let _x = _x.divide_by in [`Integer]);
                           ("round", let _x = _x.round in [`String])]]);
         ("trial_period_days", match _x.trial_period_days with | None -> []
          | Some _x -> [`Integer]);
         ("usage_type", match _x.usage_type with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_e64c12fea8) ~op ~ctype _x
  
  and _mk_body_to_t_e64c12fea8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e64c12fea8) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]); ("aggregate_usage", [`String]);
                ("amount", [`Integer]); ("amount_decimal", [`String]);
                ("billing_scheme", [`String]); ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]); ("id", [`String]);
                ("interval", [`String]); ("interval_count", [`Integer]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("meter", [`String]); ("nickname", [`String]);
                ("product",
                 [`ObjectN
                    [("", [`Any]); ("active", [`Boolean]); ("id", [`String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("name", [`String]);
                     ("statement_descriptor", [`String]);
                     ("tax_code", [`String]); ("unit_label", [`String])];
                  `String]);
                ("tiers",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("flat_amount", [`Integer]);
                            ("flat_amount_decimal", [`String]);
                            ("unit_amount", [`Integer]);
                            ("unit_amount_decimal", [`String]);
                            ("up_to", [`Null;
                                       `Null])]))]]);
                ("tiers_mode", [`String]);
                ("transform_usage",
                 [`ObjectN
                    [("", [`Any]); ("divide_by", [`Integer]);
                     ("round", [`String])]]);
                ("trial_period_days", [`Integer]); ("usage_type", [`String])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_45ab6bbf15 _lvl ~op ~ctype (_x : t_45ab6bbf15) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_6811ae4881 _x -> `ObjectN [("", [`String])]
                        | T_58da05eee3 _x -> `String]);
         ("nickname", match _x.nickname with | None -> []
          | Some _x -> [`String]);
         ("product", match _x.product with | None -> []
          | Some _x -> [`String]);
         ("trial_period_days", match _x.trial_period_days with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_45ab6bbf15) ~op ~ctype _x
  
  and _mk_body_to_t_45ab6bbf15 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_45ab6bbf15) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("nickname", [`String]); ("product", [`String]);
                ("trial_period_days", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c9fb8c6ce1 _lvl ~op ~ctype (_x : t_c9fb8c6ce1) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("billing_scheme", match _x.billing_scheme with | None -> []
          | Some _x -> [`String]);
         ("currency", let _x = _x.currency in [`String]);
         ("currency_options", match _x.currency_options with | None -> []
          | Some _x -> [`ObjectN
                          [("",
                            [`ObjectN
                               [("", [`Any]);
                                ("custom_unit_amount",
                                 [`ObjectN
                                    [("", [`Any]); ("enabled", [`Boolean]);
                                     ("maximum", [`Integer]);
                                     ("minimum", [`Integer]);
                                     ("preset", [`Integer])]]);
                                ("tax_behavior", [`String]);
                                ("tiers", [`Array [(`List (`Null))]]);
                                ("unit_amount", [`Integer]);
                                ("unit_amount_decimal", [`String])]])]]);
         ("custom_unit_amount", match _x.custom_unit_amount with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("maximum", match _x.maximum with | None -> []
                            | Some _x -> [`Integer]);
                           ("minimum", match _x.minimum with | None -> []
                            | Some _x -> [`Integer]);
                           ("preset", match _x.preset with | None -> []
                            | Some _x -> [`Integer])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("lookup_key", match _x.lookup_key with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("nickname", match _x.nickname with | None -> []
          | Some _x -> [`String]);
         ("product", match _x.product with | None -> []
          | Some _x -> [`String]);
         ("product_data", match _x.product_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("active", match _x.active with | None -> []
                            | Some _x -> [`Boolean]);
                           ("id", match _x.id with | None -> []
                            | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("name", let _x = _x.name in [`String]);
                           ("statement_descriptor",
                            match _x.statement_descriptor with | None -> []
                            | Some _x -> [`String]);
                           ("tax_code", match _x.tax_code with | None -> []
                            | Some _x -> [`String]);
                           ("unit_label", match _x.unit_label with
                            | None -> [] | Some _x -> [`String])]]);
         ("recurring", match _x.recurring with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("aggregate_usage", match _x.aggregate_usage with
                            | None -> [] | Some _x -> [`String]);
                           ("interval", let _x = _x.interval in [`String]);
                           ("interval_count", match _x.interval_count with
                            | None -> [] | Some _x -> [`Integer]);
                           ("meter", match _x.meter with | None -> []
                            | Some _x -> [`String]);
                           ("usage_type", match _x.usage_type with
                            | None -> [] | Some _x -> [`String])]]);
         ("tax_behavior", match _x.tax_behavior with | None -> []
          | Some _x -> [`String]);
         ("tiers", match _x.tiers with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_e15225c7e2) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("flat_amount", match _x.flat_amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("flat_amount_decimal",
                                     match _x.flat_amount_decimal with
                                     | None -> [] | Some _x -> [`String]);
                                    ("unit_amount", match _x.unit_amount with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("unit_amount_decimal",
                                     match _x.unit_amount_decimal with
                                     | None -> [] | Some _x -> [`String]);
                                    ("up_to", let _x = _x.up_to in
                                     [match _x with
                                      | T_655f487b2d _x -> `Null
                                      | Int _x -> `Null])])) _x))]);
         ("tiers_mode", match _x.tiers_mode with | None -> []
          | Some _x -> [`String]);
         ("transfer_lookup_key", match _x.transfer_lookup_key with
          | None -> [] | Some _x -> [`Boolean]);
         ("transform_quantity", match _x.transform_quantity with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("divide_by", let _x = _x.divide_by in [`Integer]);
                           ("round", let _x = _x.round in [`String])]]);
         ("unit_amount", match _x.unit_amount with | None -> []
          | Some _x -> [`Integer]);
         ("unit_amount_decimal", match _x.unit_amount_decimal with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_c9fb8c6ce1) ~op ~ctype _x
  
  and _mk_body_to_t_c9fb8c6ce1 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c9fb8c6ce1) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]); ("billing_scheme", [`String]);
                ("currency", [`String]);
                ("currency_options",
                 [`ObjectN
                    [("",
                      [`ObjectN
                         [("", [`Any]);
                          ("custom_unit_amount",
                           [`ObjectN
                              [("", [`Any]); ("enabled", [`Boolean]);
                               ("maximum", [`Integer]);
                               ("minimum", [`Integer]);
                               ("preset", [`Integer])]]);
                          ("tax_behavior", [`String]);
                          ("tiers", [`Array [(`List (`Null))]]);
                          ("unit_amount", [`Integer]);
                          ("unit_amount_decimal", [`String])]])]]);
                ("custom_unit_amount",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("maximum", [`Integer]); ("minimum", [`Integer]);
                     ("preset", [`Integer])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("lookup_key", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("nickname", [`String]); ("product", [`String]);
                ("product_data",
                 [`ObjectN
                    [("", [`Any]); ("active", [`Boolean]); ("id", [`String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("name", [`String]);
                     ("statement_descriptor", [`String]);
                     ("tax_code", [`String]); ("unit_label", [`String])]]);
                ("recurring",
                 [`ObjectN
                    [("", [`Any]); ("aggregate_usage", [`String]);
                     ("interval", [`String]); ("interval_count", [`Integer]);
                     ("meter", [`String]); ("usage_type", [`String])]]);
                ("tax_behavior", [`String]);
                ("tiers",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("flat_amount", [`Integer]);
                            ("flat_amount_decimal", [`String]);
                            ("unit_amount", [`Integer]);
                            ("unit_amount_decimal", [`String]);
                            ("up_to", [`Null;
                                       `Null])]))]]);
                ("tiers_mode", [`String]);
                ("transfer_lookup_key", [`Boolean]);
                ("transform_quantity",
                 [`ObjectN
                    [("", [`Any]); ("divide_by", [`Integer]);
                     ("round", [`String])]]);
                ("unit_amount", [`Integer]);
                ("unit_amount_decimal", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_aa177c434b _lvl ~op ~ctype (_x : t_aa177c434b) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("currency_options", match _x.currency_options with | None -> []
          | Some _x -> [match _x with
                        | T_3c6ee33673 _x ->
                          `ObjectN
                            [("",
                              [`ObjectN
                                 [("", [`Any]);
                                  ("custom_unit_amount",
                                   [`ObjectN
                                      [("", [`Null]); ("enabled", [`Null]);
                                       ("maximum", [`Null]);
                                       ("minimum", [`Null]);
                                       ("preset", [`Null])]]);
                                  ("tax_behavior", [`String]);
                                  ("tiers", [`Array [(`List (`Null))]]);
                                  ("unit_amount", [`Integer]);
                                  ("unit_amount_decimal", [`String])]])]
                        | T_d03a22d96d _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("lookup_key", match _x.lookup_key with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_018171630b _x -> `ObjectN [("", [`String])]
                        | T_3da2a073b5 _x -> `String]);
         ("nickname", match _x.nickname with | None -> []
          | Some _x -> [`String]);
         ("tax_behavior", match _x.tax_behavior with | None -> []
          | Some _x -> [`String]);
         ("transfer_lookup_key", match _x.transfer_lookup_key with
          | None -> [] | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_aa177c434b) ~op ~ctype _x
  
  and _mk_body_to_t_aa177c434b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_aa177c434b) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("currency_options",
                 [`ObjectN
                    [("",
                      [`ObjectN
                         [("", [`Any]);
                          ("custom_unit_amount",
                           [`ObjectN
                              [("", [`Null]); ("enabled", [`Null]);
                               ("maximum", [`Null]); ("minimum", [`Null]);
                               ("preset", [`Null])]]);
                          ("tax_behavior", [`String]);
                          ("tiers", [`Array [(`List (`Null))]]);
                          ("unit_amount", [`Integer]);
                          ("unit_amount_decimal", [`String])]])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("lookup_key", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("nickname", [`String]); ("tax_behavior", [`String]);
                ("transfer_lookup_key", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_64330ebf8c _lvl ~op ~ctype (_x : t_64330ebf8c) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("default_price_data", match _x.default_price_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("currency_options",
                            match _x.currency_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("",
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("custom_unit_amount",
                                                   [`ObjectN
                                                      [("", [`Null]);
                                                       ("enabled", [`Null]);
                                                       ("maximum", [`Null]);
                                                       ("minimum", [`Null]);
                                                       ("preset", [`Null])]]);
                                                  ("tax_behavior", [`String]);
                                                  ("tiers",
                                                   [`Array [(`List (`Null))]]);
                                                  ("unit_amount", [`Integer]);
                                                  ("unit_amount_decimal",
                                                   [`String])]])]]);
                           ("recurring", match _x.recurring with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("interval",
                                              let _x = _x.interval in
                                              [`String]);
                                             ("interval_count",
                                              match _x.interval_count with
                                              | None -> []
                                              | Some _x -> [`Integer])]]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("unit_amount", match _x.unit_amount with
                            | None -> [] | Some _x -> [`Integer]);
                           ("unit_amount_decimal",
                            match _x.unit_amount_decimal with | None -> []
                            | Some _x -> [`String])]]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("id", match _x.id with | None -> [] | Some _x -> [`String]);
         ("images", match _x.images with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("marketing_features", match _x.marketing_features with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_f2a4103af9) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("name", let _x = _x.name in [`String])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("name", let _x = _x.name in [`String]);
         ("package_dimensions", match _x.package_dimensions with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("height", let _x = _x.height in [`Number]);
                           ("length", let _x = _x.length in [`Number]);
                           ("weight", let _x = _x.weight in [`Number]);
                           ("width", let _x = _x.width in [`Number])]]);
         ("shippable", match _x.shippable with | None -> []
          | Some _x -> [`Boolean]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("tax_code", match _x.tax_code with | None -> []
          | Some _x -> [`String]);
         ("unit_label", match _x.unit_label with | None -> []
          | Some _x -> [`String]);
         ("url", match _x.url with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_64330ebf8c) ~op ~ctype _x
  
  and _mk_body_to_t_64330ebf8c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_64330ebf8c) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("default_price_data",
                 [`ObjectN
                    [("", [`Any]); ("currency", [`String]);
                     ("currency_options",
                      [`ObjectN
                         [("",
                           [`ObjectN
                              [("", [`Any]);
                               ("custom_unit_amount",
                                [`ObjectN
                                   [("", [`Null]); ("enabled", [`Null]);
                                    ("maximum", [`Null]);
                                    ("minimum", [`Null]);
                                    ("preset", [`Null])]]);
                               ("tax_behavior", [`String]);
                               ("tiers", [`Array [(`List (`Null))]]);
                               ("unit_amount", [`Integer]);
                               ("unit_amount_decimal", [`String])]])]]);
                     ("recurring",
                      [`ObjectN
                         [("", [`Any]); ("interval", [`String]);
                          ("interval_count", [`Integer])]]);
                     ("tax_behavior", [`String]);
                     ("unit_amount", [`Integer]);
                     ("unit_amount_decimal", [`String])]]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]); ("id", [`String]);
                ("images", [`Array [(`List (`String))]]);
                ("marketing_features",
                 [`Array
                    [(`List (`ObjectN [("", [`Any]); ("name", [`String])]))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("name", [`String]);
                ("package_dimensions",
                 [`ObjectN
                    [("", [`Any]); ("height", [`Number]);
                     ("length", [`Number]); ("weight", [`Number]);
                     ("width", [`Number])]]);
                ("shippable", [`Boolean]);
                ("statement_descriptor", [`String]); ("tax_code", [`String]);
                ("unit_label", [`String]); ("url", [`String])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_917ec75f12 _lvl ~op ~ctype (_x : t_917ec75f12) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("default_price", match _x.default_price with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_e01e5bdaca _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("images", match _x.images with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_f2fb58b573 _x -> `String]);
         ("marketing_features", match _x.marketing_features with | None -> []
          | Some _x -> [match _x with
                        | T_222dc64a11 _x ->
                          `Array
                            ((List.map (fun (_x : t_22b7eb0957) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("name", let _x = _x.name in [`Null])]))
                                _x))
                        | T_1d2f2d7b97 _x -> `String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_08b8e9d27b _x -> `ObjectN [("", [`String])]
                        | T_e8c43c0c58 _x -> `String]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("package_dimensions", match _x.package_dimensions with | None -> []
          | Some _x -> [match _x with
                        | T_4cdbe57f85 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("height", let _x = _x.height in [`Number]);
                             ("length", let _x = _x.length in [`Number]);
                             ("weight", let _x = _x.weight in [`Number]);
                             ("width", let _x = _x.width in [`Number])]
                        | T_6710477c54 _x -> `String]);
         ("shippable", match _x.shippable with | None -> []
          | Some _x -> [`Boolean]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("tax_code", match _x.tax_code with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_71da64c430 _x -> `String]);
         ("unit_label", match _x.unit_label with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_6a9684a984 _x -> `String]);
         ("url", match _x.url with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_67498cb052 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_917ec75f12) ~op ~ctype _x
  
  and _mk_body_to_t_917ec75f12 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_917ec75f12) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]); ("default_price", [`String]);
                ("description", [`String;
                                 `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("images", [`Array [(`List (`String))];
                            `String]);
                ("marketing_features",
                 [`Array
                    [(`List (`ObjectN [("", [`Null]); ("name", [`Null])]))];
                  `String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("name", [`String]);
                ("package_dimensions",
                 [`ObjectN
                    [("", [`Any]); ("height", [`Number]);
                     ("length", [`Number]); ("weight", [`Number]);
                     ("width", [`Number])];
                  `String]);
                ("shippable", [`Boolean]);
                ("statement_descriptor", [`String]);
                ("tax_code", [`String;
                              `String]);
                ("unit_label", [`String;
                                `String]);
                ("url", [`String;
                         `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b6b7a35388 _lvl ~op ~ctype (_x : t_b6b7a35388) =
    _body_of ~kind:(
      `ObjectN
        [("entitlement_feature", let _x = _x.entitlement_feature in
          [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_b6b7a35388) ~op ~ctype _x
  
  and _mk_body_to_t_b6b7a35388 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b6b7a35388) in _body_to
      ~kind:(`ObjectN
               [("entitlement_feature", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0a58ca78fd _lvl ~op ~ctype (_x : t_0a58ca78fd) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("code", match _x.code with | None -> [] | Some _x -> [`String]);
         ("coupon", let _x = _x.coupon in [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer]);
         ("max_redemptions", match _x.max_redemptions with | None -> []
          | Some _x -> [`Integer]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("restrictions", match _x.restrictions with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency_options",
                            match _x.currency_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("",
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("minimum_amount",
                                                   [`Integer])]])]]);
                           ("first_time_transaction",
                            match _x.first_time_transaction with | None -> []
                            | Some _x -> [`Boolean]);
                           ("minimum_amount", match _x.minimum_amount with
                            | None -> [] | Some _x -> [`Integer]);
                           ("minimum_amount_currency",
                            match _x.minimum_amount_currency with
                            | None -> [] | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_0a58ca78fd) ~op ~ctype _x
  
  and _mk_body_to_t_0a58ca78fd _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0a58ca78fd) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]); ("code", [`String]);
                ("coupon", [`String]); ("customer", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer]); ("max_redemptions", [`Integer]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("restrictions",
                 [`ObjectN
                    [("", [`Any]);
                     ("currency_options",
                      [`ObjectN
                         [("",
                           [`ObjectN
                              [("", [`Any]); ("minimum_amount", [`Integer])]])]]);
                     ("first_time_transaction", [`Boolean]);
                     ("minimum_amount", [`Integer]);
                     ("minimum_amount_currency", [`String])]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_e4b40dec33 _lvl ~op ~ctype (_x : t_e4b40dec33) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_f198453ac9 _x -> `ObjectN [("", [`String])]
                        | T_3184a00f1d _x -> `String]);
         ("restrictions", match _x.restrictions with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency_options",
                            match _x.currency_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("",
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("minimum_amount",
                                                   [`Integer])]])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_e4b40dec33) ~op ~ctype _x
  
  and _mk_body_to_t_e4b40dec33 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e4b40dec33) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("restrictions",
                 [`ObjectN
                    [("", [`Any]);
                     ("currency_options",
                      [`ObjectN
                         [("",
                           [`ObjectN
                              [("", [`Any]); ("minimum_amount", [`Integer])]])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_0b99ff77ee _lvl ~op ~ctype (_x : t_0b99ff77ee) =
    _body_of ~kind:(
      `ObjectN
        [("application_fee_amount", match _x.application_fee_amount with
          | None -> []
          | Some _x -> [match _x with
                        | Int _x -> `Integer
                        | T_45822c7dc5 _x -> `String]);
         ("application_fee_percent", match _x.application_fee_percent with
          | None -> []
          | Some _x -> [match _x with
                        | Float_ _x -> `Number
                        | T_f4f058da1e _x -> `String]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_92e3c94cab _x -> `String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_77c1e5c608 _x -> `String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_f9d5837bc1 _x ->
                          `Array
                            ((List.map (fun (_x : t_6de8bbfc78) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_0167d62b99 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer]);
         ("footer", match _x.footer with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_0df4047555 _x -> `String]);
         ("from_quote", match _x.from_quote with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("is_revision", match _x.is_revision with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("quote", let _x = _x.quote in [`String])]]);
         ("header", match _x.header with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_b78e639285 _x -> `String]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("days_until_due", match _x.days_until_due with
                            | None -> [] | Some _x -> [`Integer]);
                           ("issuer", match _x.issuer with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("line_items", match _x.line_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_7de4933a5c) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_fbb44a6d39 _x -> `Null
                                                   | T_e92a7abe5a _x -> `Null]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("recurring",
                                                       match _x.recurring with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_cb970d6c92 _x -> `Null])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_44c4e03c02 _x -> `String]);
         ("subscription_data", match _x.subscription_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("description", match _x.description with
                            | None -> [] | Some _x -> [`String]);
                           ("effective_date", match _x.effective_date with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_c95857c16d _x -> `String
                                          | Ptime_t _x -> `Integer
                                          | T_ea4d6e9d07 _x -> `String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("trial_period_days",
                            match _x.trial_period_days with | None -> []
                            | Some _x -> [match _x with
                                          | Int _x -> `Integer
                                          | T_e7248f1339 _x -> `String])]]);
         ("test_clock", match _x.test_clock with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [match _x with
                        | T_de820a56bf _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount", match _x.amount with | None -> []
                              | Some _x -> [`Integer]);
                             ("amount_percent", match _x.amount_percent with
                              | None -> [] | Some _x -> [`Number]);
                             ("destination", let _x = _x.destination in
                              [`String])]
                        | T_df8db50e89 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_0b99ff77ee) ~op ~ctype _x
  
  and _mk_body_to_t_0b99ff77ee _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0b99ff77ee) in _body_to
      ~kind:(`ObjectN
               [("application_fee_amount", [`Integer;
                                            `String]);
                ("application_fee_percent", [`Number;
                                             `String]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("collection_method", [`String]); ("customer", [`String]);
                ("default_tax_rates", [`Array [(`List (`String))];
                                       `String]);
                ("description", [`String;
                                 `String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer]); ("footer", [`String;
                                                        `String]);
                ("from_quote",
                 [`ObjectN
                    [("", [`Any]); ("is_revision", [`Boolean]);
                     ("quote", [`String])]]);
                ("header", [`String;
                            `String]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]); ("days_until_due", [`Integer]);
                     ("issuer",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("line_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("discounts", [`Null;
                                                         `Null]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("recurring", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("on_behalf_of", [`String;
                                  `String]);
                ("subscription_data",
                 [`ObjectN
                    [("", [`Any]); ("description", [`String]);
                     ("effective_date", [`String;
                                         `Integer;
                                         `String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("trial_period_days", [`Integer;
                                            `String])]]);
                ("test_clock", [`String]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("amount_percent", [`Number]);
                     ("destination", [`String])];
                  `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_86a22f3d9a _lvl ~op ~ctype (_x : t_86a22f3d9a) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_86a22f3d9a) ~op ~ctype _x
  
  and _mk_body_to_t_86a22f3d9a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_86a22f3d9a) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_7e5b080223 _lvl ~op ~ctype (_x : t_7e5b080223) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_7e5b080223) ~op ~ctype _x
  
  and _mk_body_to_t_7e5b080223 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_7e5b080223) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_db4496c47a _lvl ~op ~ctype (_x : t_db4496c47a) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_db4496c47a) ~op ~ctype _x
  
  and _mk_body_to_t_db4496c47a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_db4496c47a) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_f460d0db0d _lvl ~op ~ctype (_x : t_f460d0db0d) =
    _body_of ~kind:(
      `ObjectN
        [("application_fee_amount", match _x.application_fee_amount with
          | None -> []
          | Some _x -> [match _x with
                        | Int _x -> `Integer
                        | T_4fdac680af _x -> `String]);
         ("application_fee_percent", match _x.application_fee_percent with
          | None -> []
          | Some _x -> [match _x with
                        | Float_ _x -> `Number
                        | T_2f0399acdf _x -> `String]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_f477de4f34 _x -> `String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_e694580b1f _x -> `String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_810f36cff5 _x ->
                          `Array
                            ((List.map (fun (_x : t_a2b8bbf9be) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_ba06bb70a6 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer]);
         ("footer", match _x.footer with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_8aeffe4bc8 _x -> `String]);
         ("header", match _x.header with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_a4e953f539 _x -> `String]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("days_until_due", match _x.days_until_due with
                            | None -> [] | Some _x -> [`Integer]);
                           ("issuer", match _x.issuer with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("line_items", match _x.line_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_2140baf264) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_a9dfa9ddae _x -> `Null
                                                   | T_8260c10eda _x -> `Null]);
                                    ("id", match _x.id with | None -> []
                                     | Some _x -> [`String]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("recurring",
                                                       match _x.recurring with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_8798782167 _x -> `Null])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_7c0e023046 _x -> `String]);
         ("subscription_data", match _x.subscription_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("description", match _x.description with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_e0e2262bd9 _x -> `String]);
                           ("effective_date", match _x.effective_date with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_c8cb95cf9c _x -> `String
                                          | Ptime_t _x -> `Integer
                                          | T_99b2cec0b2 _x -> `String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("trial_period_days",
                            match _x.trial_period_days with | None -> []
                            | Some _x -> [match _x with
                                          | Int _x -> `Integer
                                          | T_4a894baaee _x -> `String])]]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [match _x with
                        | T_6545b8d11e _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount", match _x.amount with | None -> []
                              | Some _x -> [`Integer]);
                             ("amount_percent", match _x.amount_percent with
                              | None -> [] | Some _x -> [`Number]);
                             ("destination", let _x = _x.destination in
                              [`String])]
                        | T_6e1072ba42 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_f460d0db0d) ~op ~ctype _x
  
  and _mk_body_to_t_f460d0db0d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_f460d0db0d) in _body_to
      ~kind:(`ObjectN
               [("application_fee_amount", [`Integer;
                                            `String]);
                ("application_fee_percent", [`Number;
                                             `String]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("collection_method", [`String]); ("customer", [`String]);
                ("default_tax_rates", [`Array [(`List (`String))];
                                       `String]);
                ("description", [`String;
                                 `String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer]); ("footer", [`String;
                                                        `String]);
                ("header", [`String;
                            `String]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]); ("days_until_due", [`Integer]);
                     ("issuer",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("line_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("discounts", [`Null;
                                                         `Null]);
                            ("id", [`String]); ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("recurring", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("on_behalf_of", [`String;
                                  `String]);
                ("subscription_data",
                 [`ObjectN
                    [("", [`Any]); ("description", [`String;
                                                    `String]);
                     ("effective_date", [`String;
                                         `Integer;
                                         `String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("trial_period_days", [`Integer;
                                            `String])]]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("amount_percent", [`Number]);
                     ("destination", [`String])];
                  `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_a44e2930e0 _lvl ~op ~ctype (_x : t_a44e2930e0) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("value", let _x = _x.value in [`String]);
         ("value_list", let _x = _x.value_list in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_a44e2930e0) ~op ~ctype _x
  
  and _mk_body_to_t_a44e2930e0 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a44e2930e0) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("value", [`String]); ("value_list", [`String])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_4612538979 _lvl ~op ~ctype (_x : t_4612538979) =
    _body_of ~kind:(
      `ObjectN
        [("alias", let _x = _x.alias in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("item_type", match _x.item_type with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("name", let _x = _x.name in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_4612538979) ~op ~ctype _x
  
  and _mk_body_to_t_4612538979 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4612538979) in _body_to
      ~kind:(`ObjectN
               [("alias", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("item_type", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("name", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_426f73e626 _lvl ~op ~ctype (_x : t_426f73e626) =
    _body_of ~kind:(
      `ObjectN
        [("alias", match _x.alias with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_426f73e626) ~op ~ctype _x
  
  and _mk_body_to_t_426f73e626 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_426f73e626) in _body_to
      ~kind:(`ObjectN
               [("alias", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("name", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0cf8eea095 _lvl ~op ~ctype (_x : t_0cf8eea095) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("charge", match _x.charge with | None -> [] | Some _x -> [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("instructions_email", match _x.instructions_email with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_546cd878dd _x -> `ObjectN [("", [`String])]
                        | T_ebb582a608 _x -> `String]);
         ("origin", match _x.origin with | None -> [] | Some _x -> [`String]);
         ("payment_intent", match _x.payment_intent with | None -> []
          | Some _x -> [`String]);
         ("reason", match _x.reason with | None -> [] | Some _x -> [`String]);
         ("refund_application_fee", match _x.refund_application_fee with
          | None -> [] | Some _x -> [`Boolean]);
         ("reverse_transfer", match _x.reverse_transfer with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_0cf8eea095) ~op ~ctype _x
  
  and _mk_body_to_t_0cf8eea095 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0cf8eea095) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("charge", [`String]);
                ("currency", [`String]); ("customer", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("instructions_email", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("origin", [`String]); ("payment_intent", [`String]);
                ("reason", [`String]);
                ("refund_application_fee", [`Boolean]);
                ("reverse_transfer", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_77098b9e70 _lvl ~op ~ctype (_x : t_77098b9e70) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_77098b9e70) ~op ~ctype _x
  
  and _mk_body_to_t_77098b9e70 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_77098b9e70) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_e8527333be _lvl ~op ~ctype (_x : t_e8527333be) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_b64562d457 _x -> `ObjectN [("", [`String])]
                        | T_11465dfa34 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_e8527333be) ~op ~ctype _x
  
  and _mk_body_to_t_e8527333be _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e8527333be) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0d53ea1e47 _lvl ~op ~ctype (_x : t_0d53ea1e47) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("parameters", match _x.parameters with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("columns", match _x.columns with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : string) ->
                                                `Singleton (`String)) _x))]);
                           ("connected_account",
                            match _x.connected_account with | None -> []
                            | Some _x -> [`String]);
                           ("currency", match _x.currency with | None -> []
                            | Some _x -> [`String]);
                           ("interval_end", match _x.interval_end with
                            | None -> [] | Some _x -> [`Integer]);
                           ("interval_start", match _x.interval_start with
                            | None -> [] | Some _x -> [`Integer]);
                           ("payout", match _x.payout with | None -> []
                            | Some _x -> [`String]);
                           ("reporting_category",
                            match _x.reporting_category with | None -> []
                            | Some _x -> [`String]);
                           ("timezone", match _x.timezone with | None -> []
                            | Some _x -> [`String])]]);
         ("report_type", let _x = _x.report_type in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_0d53ea1e47) ~op ~ctype _x
  
  and _mk_body_to_t_0d53ea1e47 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0d53ea1e47) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("parameters",
                 [`ObjectN
                    [("", [`Any]); ("columns", [`Array [(`List (`String))]]);
                     ("connected_account", [`String]);
                     ("currency", [`String]); ("interval_end", [`Integer]);
                     ("interval_start", [`Integer]); ("payout", [`String]);
                     ("reporting_category", [`String]);
                     ("timezone", [`String])]]);
                ("report_type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c85fd9638d _lvl ~op ~ctype (_x : t_c85fd9638d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_c85fd9638d) ~op ~ctype _x
  
  and _mk_body_to_t_c85fd9638d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c85fd9638d) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_eaa27c41ea _lvl ~op ~ctype (_x : t_eaa27c41ea) =
    _body_of ~kind:(
      `ObjectN
        [("attach_to_self", match _x.attach_to_self with | None -> []
          | Some _x -> [`Boolean]);
         ("automatic_payment_methods",
          match _x.automatic_payment_methods with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("allow_redirects", match _x.allow_redirects with
                            | None -> [] | Some _x -> [`String]);
                           ("enabled", let _x = _x.enabled in [`Boolean])]]);
         ("confirm", match _x.confirm with | None -> []
          | Some _x -> [`Boolean]);
         ("confirmation_token", match _x.confirmation_token with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("flow_directions", match _x.flow_directions with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_f1297a3ac7) ->
                              `Singleton (`String)) _x))]);
         ("mandate_data", match _x.mandate_data with | None -> []
          | Some _x -> [match _x with
                        | T_77862d9418 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("customer_acceptance",
                              let _x = _x.customer_acceptance in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("accepted_at", match _x.accepted_at with
                                   | None -> [] | Some _x -> [`Integer]);
                                  ("offline", match _x.offline with
                                   | None -> []
                                   | Some _x -> [`ObjectN [("", [`Null])]]);
                                  ("online", match _x.online with
                                   | None -> []
                                   | Some _x -> [`ObjectN
                                                   [("", [`Null]);
                                                    ("ip_address",
                                                     let _x = _x.ip_address in
                                                     [`Null]);
                                                    ("user_agent",
                                                     let _x = _x.user_agent in
                                                     [`Null])]]);
                                  ("type", let _x = _x.type_ in [`String])]])]
                        | T_28d6ba6666 _x -> `String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [`String]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("payment_method_configuration",
          match _x.payment_method_configuration with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("institution_number",
                                              let _x = _x.institution_number in
                                              [`String]);
                                             ("transit_number",
                                              let _x = _x.transit_number in
                                              [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("bsb_number",
                                              let _x = _x.bsb_number in
                                              [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("sort_code",
                                              match _x.sort_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_3b7003fcf1 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_ca9d069456 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_a25d414fdc _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_bbd8c3e032 _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_5b48de9820 _x ->
                                                              `String])]]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tax_id", let _x = _x.tax_id in
                                              [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", let _x = _x.bank in
                                              [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("day",
                                                                let _x = _x.day in
                                                                [`Integer]);
                                                               ("month",
                                                                let _x = _x.month in
                                                                [`Integer]);
                                                               ("year",
                                                                let _x = _x.year in
                                                                [`Integer])]])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("radar_options", match _x.radar_options with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("session",
                                              match _x.session with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("iban", let _x = _x.iban in
                                              [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]])]]);
         ("payment_method_options", match _x.payment_method_options with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("currency",
                                              match _x.currency with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("custom_mandate_url",
                                                                match _x.custom_mandate_url with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_23fe5c1758 _x ->
                                                                  `Null]);
                                                               ("default_for",
                                                                match _x.default_for with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_9a77245f74) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("interval_description",
                                                                match _x.interval_description with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("payment_schedule",
                                                                match _x.payment_schedule with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("transaction_type",
                                                                match _x.transaction_type with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("card", match _x.card with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("amount",
                                                                let _x = _x.amount in
                                                                [`Integer]);
                                                               ("amount_type",
                                                                let _x = _x.amount_type in
                                                                [`String]);
                                                               ("currency",
                                                                let _x = _x.currency in
                                                                [`String]);
                                                               ("description",
                                                                match _x.description with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("end_date",
                                                                match _x.end_date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("interval",
                                                                let _x = _x.interval in
                                                                [`String]);
                                                               ("interval_count",
                                                                match _x.interval_count with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("reference",
                                                                let _x = _x.reference in
                                                                [`String]);
                                                               ("start_date",
                                                                let _x = _x.start_date in
                                                                [`Integer]);
                                                               ("supported_types",
                                                                match _x.supported_types with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_dea6f3a046) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("network",
                                              match _x.network with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("request_three_d_secure",
                                              match _x.request_three_d_secure with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("three_d_secure",
                                              match _x.three_d_secure with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("ares_trans_status",
                                                                match _x.ares_trans_status with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("cryptogram",
                                                                match _x.cryptogram with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("electronic_commerce_indicator",
                                                                match _x.electronic_commerce_indicator with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("network_options",
                                                                match _x.network_options with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("cartes_bancaires",
                                                                    match _x.cartes_bancaires with
                                                                    | None -> []
                                                                    | Some _x -> [`Null])]]);
                                                               ("requestor_challenge_indicator",
                                                                match _x.requestor_challenge_indicator with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("transaction_id",
                                                                match _x.transaction_id with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("version",
                                                                match _x.version with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]]);
                           ("card_present", match _x.card_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("billing_agreement_id",
                                              match _x.billing_agreement_id with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any])]])]]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("financial_connections",
                                              match _x.financial_connections with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("permissions",
                                                                match _x.permissions with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_d3ea081eb5) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("prefetch",
                                                                match _x.prefetch with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_096aaa832f) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("return_url",
                                                                match _x.return_url with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("collection_method",
                                                                match _x.collection_method with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("networks",
                                              match _x.networks with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                match _x.requested with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_37a7a43642) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("single_use", match _x.single_use with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", let _x = _x.amount in [`Integer]);
                           ("currency", let _x = _x.currency in [`String])]]);
         ("usage", match _x.usage with | None -> [] | Some _x -> [`String]);
         ("use_stripe_sdk", match _x.use_stripe_sdk with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_eaa27c41ea) ~op ~ctype _x
  
  and _mk_body_to_t_eaa27c41ea _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_eaa27c41ea) in _body_to
      ~kind:(`ObjectN
               [("attach_to_self", [`Boolean]);
                ("automatic_payment_methods",
                 [`ObjectN
                    [("", [`Any]); ("allow_redirects", [`String]);
                     ("enabled", [`Boolean])]]);
                ("confirm", [`Boolean]); ("confirmation_token", [`String]);
                ("customer", [`String]); ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("flow_directions", [`Array [(`List (`String))]]);
                ("mandate_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("customer_acceptance",
                      [`ObjectN
                         [("", [`Any]); ("accepted_at", [`Integer]);
                          ("offline", [`ObjectN [("", [`Null])]]);
                          ("online",
                           [`ObjectN
                              [("", [`Null]); ("ip_address", [`Null]);
                               ("user_agent", [`Null])]]);
                          ("type", [`String])]])];
                  `String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("on_behalf_of", [`String]); ("payment_method", [`String]);
                ("payment_method_configuration", [`String]);
                ("payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("institution_number", [`String]);
                          ("transit_number", [`String])]]);
                     ("affirm", [`ObjectN [("", [`Any])]]);
                     ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                     ("alipay", [`ObjectN [("", [`Any])]]);
                     ("allow_redisplay", [`String]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("bsb_number", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("sort_code", [`String])]]);
                     ("bancontact", [`ObjectN [("", [`Any])]]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("blik", [`ObjectN [("", [`Any])]]);
                     ("boleto",
                      [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                     ("cashapp", [`ObjectN [("", [`Any])]]);
                     ("customer_balance", [`ObjectN [("", [`Any])]]);
                     ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("giropay", [`ObjectN [("", [`Any])]]);
                     ("grabpay", [`ObjectN [("", [`Any])]]);
                     ("ideal",
                      [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("interac_present", [`ObjectN [("", [`Any])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]);
                          ("dob",
                           [`ObjectN
                              [("", [`Any]); ("day", [`Integer]);
                               ("month", [`Integer]); ("year", [`Integer])]])]]);
                     ("konbini", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("mobilepay", [`ObjectN [("", [`Any])]]);
                     ("oxxo", [`ObjectN [("", [`Any])]]);
                     ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("paynow", [`ObjectN [("", [`Any])]]);
                     ("paypal", [`ObjectN [("", [`Any])]]);
                     ("pix", [`ObjectN [("", [`Any])]]);
                     ("promptpay", [`ObjectN [("", [`Any])]]);
                     ("radar_options",
                      [`ObjectN [("", [`Any]); ("session", [`String])]]);
                     ("revolut_pay", [`ObjectN [("", [`Any])]]);
                     ("sepa_debit",
                      [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                     ("sofort",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("swish", [`ObjectN [("", [`Any])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]]);
                     ("wechat_pay", [`ObjectN [("", [`Any])]]);
                     ("zip", [`ObjectN [("", [`Any])]])]]);
                ("payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("currency", [`String]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]);
                               ("custom_mandate_url", [`Null;
                                                       `Null]);
                               ("default_for", [`Array [(`List (`Null))]]);
                               ("interval_description", [`String]);
                               ("payment_schedule", [`String]);
                               ("transaction_type", [`String])]]);
                          ("verification_method", [`String])]]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("card",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]); ("amount", [`Integer]);
                               ("amount_type", [`String]);
                               ("currency", [`String]);
                               ("description", [`String]);
                               ("end_date", [`Integer]);
                               ("interval", [`String]);
                               ("interval_count", [`Integer]);
                               ("reference", [`String]);
                               ("start_date", [`Integer]);
                               ("supported_types",
                                [`Array [(`List (`Null))]])]]);
                          ("network", [`String]);
                          ("request_three_d_secure", [`String]);
                          ("three_d_secure",
                           [`ObjectN
                              [("", [`Any]);
                               ("ares_trans_status", [`String]);
                               ("cryptogram", [`String]);
                               ("electronic_commerce_indicator", [`String]);
                               ("network_options",
                                [`ObjectN
                                   [("", [`Null]);
                                    ("cartes_bancaires", [`Null])]]);
                               ("requestor_challenge_indicator", [`String]);
                               ("transaction_id", [`String]);
                               ("version", [`String])]])]]);
                     ("card_present", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("paypal",
                      [`ObjectN
                         [("", [`Any]); ("billing_agreement_id", [`String])]]);
                     ("sepa_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options", [`ObjectN [("", [`Any])]])]]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]);
                          ("financial_connections",
                           [`ObjectN
                              [("", [`Any]);
                               ("permissions", [`Array [(`List (`Null))]]);
                               ("prefetch", [`Array [(`List (`Null))]]);
                               ("return_url", [`String])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]);
                               ("collection_method", [`String])]]);
                          ("networks",
                           [`ObjectN
                              [("", [`Any]);
                               ("requested", [`Array [(`List (`Null))]])]]);
                          ("verification_method", [`String])]])]]);
                ("payment_method_types", [`Array [(`List (`String))]]);
                ("return_url", [`String]);
                ("single_use",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("currency", [`String])]]);
                ("usage", [`String]); ("use_stripe_sdk", [`Boolean])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_8580d60ccb _lvl ~op ~ctype (_x : t_8580d60ccb) =
    _body_of ~kind:(
      `ObjectN
        [("cancellation_reason", match _x.cancellation_reason with
          | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_8580d60ccb) ~op ~ctype _x
  
  and _mk_body_to_t_8580d60ccb _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_8580d60ccb) in _body_to
      ~kind:(`ObjectN
               [("cancellation_reason", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_89d7e83914 _lvl ~op ~ctype (_x : t_89d7e83914) =
    _body_of ~kind:(
      `ObjectN
        [("client_secret", match _x.client_secret with | None -> []
          | Some _x -> [`String]);
         ("confirmation_token", match _x.confirmation_token with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("mandate_data", match _x.mandate_data with | None -> []
          | Some _x -> [match _x with
                        | T_737179abf2 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("customer_acceptance",
                              let _x = _x.customer_acceptance in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("accepted_at", match _x.accepted_at with
                                   | None -> [] | Some _x -> [`Integer]);
                                  ("offline", match _x.offline with
                                   | None -> []
                                   | Some _x -> [`ObjectN [("", [`Null])]]);
                                  ("online", match _x.online with
                                   | None -> []
                                   | Some _x -> [`ObjectN
                                                   [("", [`Null]);
                                                    ("ip_address",
                                                     let _x = _x.ip_address in
                                                     [`Null]);
                                                    ("user_agent",
                                                     let _x = _x.user_agent in
                                                     [`Null])]]);
                                  ("type", let _x = _x.type_ in [`String])]])]
                        | T_16a35eab62 _x -> `String
                        | T_80a6340c6d _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("customer_acceptance",
                              let _x = _x.customer_acceptance in
                              [`ObjectN
                                 [("", [`Any]);
                                  ("online", let _x = _x.online in
                                   [`ObjectN
                                      [("", [`Null]);
                                       ("ip_address",
                                        match _x.ip_address with | None -> []
                                        | Some _x -> [`Null]);
                                       ("user_agent",
                                        match _x.user_agent with | None -> []
                                        | Some _x -> [`Null])]]);
                                  ("type", let _x = _x.type_ in [`String])]])]]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("institution_number",
                                              let _x = _x.institution_number in
                                              [`String]);
                                             ("transit_number",
                                              let _x = _x.transit_number in
                                              [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("bsb_number",
                                              let _x = _x.bsb_number in
                                              [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("sort_code",
                                              match _x.sort_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_55cb597745 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_b6501dd8a1 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_d1e2bf6b95 _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_1d525aa0bd _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_a0959c3844 _x ->
                                                              `String])]]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tax_id", let _x = _x.tax_id in
                                              [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", let _x = _x.bank in
                                              [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("day",
                                                                let _x = _x.day in
                                                                [`Integer]);
                                                               ("month",
                                                                let _x = _x.month in
                                                                [`Integer]);
                                                               ("year",
                                                                let _x = _x.year in
                                                                [`Integer])]])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("radar_options", match _x.radar_options with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("session",
                                              match _x.session with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("iban", let _x = _x.iban in
                                              [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]])]]);
         ("payment_method_options", match _x.payment_method_options with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("currency",
                                              match _x.currency with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("custom_mandate_url",
                                                                match _x.custom_mandate_url with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_33e651d4e7 _x ->
                                                                  `Null]);
                                                               ("default_for",
                                                                match _x.default_for with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_aea718a488) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("interval_description",
                                                                match _x.interval_description with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("payment_schedule",
                                                                match _x.payment_schedule with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("transaction_type",
                                                                match _x.transaction_type with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("card", match _x.card with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("amount",
                                                                let _x = _x.amount in
                                                                [`Integer]);
                                                               ("amount_type",
                                                                let _x = _x.amount_type in
                                                                [`String]);
                                                               ("currency",
                                                                let _x = _x.currency in
                                                                [`String]);
                                                               ("description",
                                                                match _x.description with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("end_date",
                                                                match _x.end_date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("interval",
                                                                let _x = _x.interval in
                                                                [`String]);
                                                               ("interval_count",
                                                                match _x.interval_count with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("reference",
                                                                let _x = _x.reference in
                                                                [`String]);
                                                               ("start_date",
                                                                let _x = _x.start_date in
                                                                [`Integer]);
                                                               ("supported_types",
                                                                match _x.supported_types with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_da768492c0) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("network",
                                              match _x.network with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("request_three_d_secure",
                                              match _x.request_three_d_secure with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("three_d_secure",
                                              match _x.three_d_secure with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("ares_trans_status",
                                                                match _x.ares_trans_status with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("cryptogram",
                                                                match _x.cryptogram with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("electronic_commerce_indicator",
                                                                match _x.electronic_commerce_indicator with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("network_options",
                                                                match _x.network_options with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("cartes_bancaires",
                                                                    match _x.cartes_bancaires with
                                                                    | None -> []
                                                                    | Some _x -> [`Null])]]);
                                                               ("requestor_challenge_indicator",
                                                                match _x.requestor_challenge_indicator with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("transaction_id",
                                                                match _x.transaction_id with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("version",
                                                                match _x.version with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]]);
                           ("card_present", match _x.card_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("billing_agreement_id",
                                              match _x.billing_agreement_id with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any])]])]]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("financial_connections",
                                              match _x.financial_connections with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("permissions",
                                                                match _x.permissions with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_98a930bdc5) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("prefetch",
                                                                match _x.prefetch with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_43cf557fb4) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("return_url",
                                                                match _x.return_url with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("collection_method",
                                                                match _x.collection_method with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("networks",
                                              match _x.networks with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                match _x.requested with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_068f401d48) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("use_stripe_sdk", match _x.use_stripe_sdk with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_89d7e83914) ~op ~ctype _x
  
  and _mk_body_to_t_89d7e83914 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_89d7e83914) in _body_to
      ~kind:(`ObjectN
               [("client_secret", [`String]);
                ("confirmation_token", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("mandate_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("customer_acceptance",
                      [`ObjectN
                         [("", [`Any]); ("accepted_at", [`Integer]);
                          ("offline", [`ObjectN [("", [`Null])]]);
                          ("online",
                           [`ObjectN
                              [("", [`Null]); ("ip_address", [`Null]);
                               ("user_agent", [`Null])]]);
                          ("type", [`String])]])];
                  `String;
                  `ObjectN
                    [("", [`Any]);
                     ("customer_acceptance",
                      [`ObjectN
                         [("", [`Any]);
                          ("online",
                           [`ObjectN
                              [("", [`Null]); ("ip_address", [`Null]);
                               ("user_agent", [`Null])]]);
                          ("type", [`String])]])]]);
                ("payment_method", [`String]);
                ("payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("institution_number", [`String]);
                          ("transit_number", [`String])]]);
                     ("affirm", [`ObjectN [("", [`Any])]]);
                     ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                     ("alipay", [`ObjectN [("", [`Any])]]);
                     ("allow_redisplay", [`String]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("bsb_number", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("sort_code", [`String])]]);
                     ("bancontact", [`ObjectN [("", [`Any])]]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("blik", [`ObjectN [("", [`Any])]]);
                     ("boleto",
                      [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                     ("cashapp", [`ObjectN [("", [`Any])]]);
                     ("customer_balance", [`ObjectN [("", [`Any])]]);
                     ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("giropay", [`ObjectN [("", [`Any])]]);
                     ("grabpay", [`ObjectN [("", [`Any])]]);
                     ("ideal",
                      [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("interac_present", [`ObjectN [("", [`Any])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]);
                          ("dob",
                           [`ObjectN
                              [("", [`Any]); ("day", [`Integer]);
                               ("month", [`Integer]); ("year", [`Integer])]])]]);
                     ("konbini", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("mobilepay", [`ObjectN [("", [`Any])]]);
                     ("oxxo", [`ObjectN [("", [`Any])]]);
                     ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("paynow", [`ObjectN [("", [`Any])]]);
                     ("paypal", [`ObjectN [("", [`Any])]]);
                     ("pix", [`ObjectN [("", [`Any])]]);
                     ("promptpay", [`ObjectN [("", [`Any])]]);
                     ("radar_options",
                      [`ObjectN [("", [`Any]); ("session", [`String])]]);
                     ("revolut_pay", [`ObjectN [("", [`Any])]]);
                     ("sepa_debit",
                      [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                     ("sofort",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("swish", [`ObjectN [("", [`Any])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]]);
                     ("wechat_pay", [`ObjectN [("", [`Any])]]);
                     ("zip", [`ObjectN [("", [`Any])]])]]);
                ("payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("currency", [`String]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]);
                               ("custom_mandate_url", [`Null;
                                                       `Null]);
                               ("default_for", [`Array [(`List (`Null))]]);
                               ("interval_description", [`String]);
                               ("payment_schedule", [`String]);
                               ("transaction_type", [`String])]]);
                          ("verification_method", [`String])]]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("card",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]); ("amount", [`Integer]);
                               ("amount_type", [`String]);
                               ("currency", [`String]);
                               ("description", [`String]);
                               ("end_date", [`Integer]);
                               ("interval", [`String]);
                               ("interval_count", [`Integer]);
                               ("reference", [`String]);
                               ("start_date", [`Integer]);
                               ("supported_types",
                                [`Array [(`List (`Null))]])]]);
                          ("network", [`String]);
                          ("request_three_d_secure", [`String]);
                          ("three_d_secure",
                           [`ObjectN
                              [("", [`Any]);
                               ("ares_trans_status", [`String]);
                               ("cryptogram", [`String]);
                               ("electronic_commerce_indicator", [`String]);
                               ("network_options",
                                [`ObjectN
                                   [("", [`Null]);
                                    ("cartes_bancaires", [`Null])]]);
                               ("requestor_challenge_indicator", [`String]);
                               ("transaction_id", [`String]);
                               ("version", [`String])]])]]);
                     ("card_present", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("paypal",
                      [`ObjectN
                         [("", [`Any]); ("billing_agreement_id", [`String])]]);
                     ("sepa_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options", [`ObjectN [("", [`Any])]])]]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]);
                          ("financial_connections",
                           [`ObjectN
                              [("", [`Any]);
                               ("permissions", [`Array [(`List (`Null))]]);
                               ("prefetch", [`Array [(`List (`Null))]]);
                               ("return_url", [`String])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]);
                               ("collection_method", [`String])]]);
                          ("networks",
                           [`ObjectN
                              [("", [`Any]);
                               ("requested", [`Array [(`List (`Null))]])]]);
                          ("verification_method", [`String])]])]]);
                ("return_url", [`String]); ("use_stripe_sdk", [`Boolean])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_f64c15d966 _lvl ~op ~ctype (_x : t_f64c15d966) =
    _body_of ~kind:(
      `ObjectN
        [("attach_to_self", match _x.attach_to_self with | None -> []
          | Some _x -> [`Boolean]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("flow_directions", match _x.flow_directions with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_a0e8b69140) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_8cef03fe66 _x -> `ObjectN [("", [`String])]
                        | T_6932f48328 _x -> `String]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("payment_method_configuration",
          match _x.payment_method_configuration with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("institution_number",
                                              let _x = _x.institution_number in
                                              [`String]);
                                             ("transit_number",
                                              let _x = _x.transit_number in
                                              [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("bsb_number",
                                              let _x = _x.bsb_number in
                                              [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("sort_code",
                                              match _x.sort_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_28b90b1190 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_c8c9e130f9 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_b5df84356e _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_009491f569 _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_04d6bc01d2 _x ->
                                                              `String])]]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tax_id", let _x = _x.tax_id in
                                              [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", let _x = _x.bank in
                                              [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("day",
                                                                let _x = _x.day in
                                                                [`Integer]);
                                                               ("month",
                                                                let _x = _x.month in
                                                                [`Integer]);
                                                               ("year",
                                                                let _x = _x.year in
                                                                [`Integer])]])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("radar_options", match _x.radar_options with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("session",
                                              match _x.session with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("iban", let _x = _x.iban in
                                              [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]])]]);
         ("payment_method_options", match _x.payment_method_options with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("currency",
                                              match _x.currency with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("custom_mandate_url",
                                                                match _x.custom_mandate_url with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_345bc7a2dc _x ->
                                                                  `Null]);
                                                               ("default_for",
                                                                match _x.default_for with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_3d70743f99) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("interval_description",
                                                                match _x.interval_description with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("payment_schedule",
                                                                match _x.payment_schedule with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("transaction_type",
                                                                match _x.transaction_type with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("card", match _x.card with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("amount",
                                                                let _x = _x.amount in
                                                                [`Integer]);
                                                               ("amount_type",
                                                                let _x = _x.amount_type in
                                                                [`String]);
                                                               ("currency",
                                                                let _x = _x.currency in
                                                                [`String]);
                                                               ("description",
                                                                match _x.description with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("end_date",
                                                                match _x.end_date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("interval",
                                                                let _x = _x.interval in
                                                                [`String]);
                                                               ("interval_count",
                                                                match _x.interval_count with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("reference",
                                                                let _x = _x.reference in
                                                                [`String]);
                                                               ("start_date",
                                                                let _x = _x.start_date in
                                                                [`Integer]);
                                                               ("supported_types",
                                                                match _x.supported_types with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_731f5c2394) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("network",
                                              match _x.network with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("request_three_d_secure",
                                              match _x.request_three_d_secure with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("three_d_secure",
                                              match _x.three_d_secure with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("ares_trans_status",
                                                                match _x.ares_trans_status with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("cryptogram",
                                                                match _x.cryptogram with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("electronic_commerce_indicator",
                                                                match _x.electronic_commerce_indicator with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("network_options",
                                                                match _x.network_options with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("cartes_bancaires",
                                                                    match _x.cartes_bancaires with
                                                                    | None -> []
                                                                    | Some _x -> [`Null])]]);
                                                               ("requestor_challenge_indicator",
                                                                match _x.requestor_challenge_indicator with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("transaction_id",
                                                                match _x.transaction_id with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("version",
                                                                match _x.version with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]]);
                           ("card_present", match _x.card_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("billing_agreement_id",
                                              match _x.billing_agreement_id with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any])]])]]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("financial_connections",
                                              match _x.financial_connections with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("permissions",
                                                                match _x.permissions with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_c63cdc4ad4) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("prefetch",
                                                                match _x.prefetch with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_9212050dc1) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                                               ("return_url",
                                                                match _x.return_url with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("mandate_options",
                                              match _x.mandate_options with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("collection_method",
                                                                match _x.collection_method with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("networks",
                                              match _x.networks with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                match _x.requested with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_ef075c34cb) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("verification_method",
                                              match _x.verification_method with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("payment_method_types", match _x.payment_method_types with
          | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_f64c15d966) ~op ~ctype _x
  
  and _mk_body_to_t_f64c15d966 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_f64c15d966) in _body_to
      ~kind:(`ObjectN
               [("attach_to_self", [`Boolean]); ("customer", [`String]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("flow_directions", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("payment_method", [`String]);
                ("payment_method_configuration", [`String]);
                ("payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("institution_number", [`String]);
                          ("transit_number", [`String])]]);
                     ("affirm", [`ObjectN [("", [`Any])]]);
                     ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                     ("alipay", [`ObjectN [("", [`Any])]]);
                     ("allow_redisplay", [`String]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("bsb_number", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("sort_code", [`String])]]);
                     ("bancontact", [`ObjectN [("", [`Any])]]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("blik", [`ObjectN [("", [`Any])]]);
                     ("boleto",
                      [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                     ("cashapp", [`ObjectN [("", [`Any])]]);
                     ("customer_balance", [`ObjectN [("", [`Any])]]);
                     ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("giropay", [`ObjectN [("", [`Any])]]);
                     ("grabpay", [`ObjectN [("", [`Any])]]);
                     ("ideal",
                      [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("interac_present", [`ObjectN [("", [`Any])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]);
                          ("dob",
                           [`ObjectN
                              [("", [`Any]); ("day", [`Integer]);
                               ("month", [`Integer]); ("year", [`Integer])]])]]);
                     ("konbini", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("mobilepay", [`ObjectN [("", [`Any])]]);
                     ("oxxo", [`ObjectN [("", [`Any])]]);
                     ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("paynow", [`ObjectN [("", [`Any])]]);
                     ("paypal", [`ObjectN [("", [`Any])]]);
                     ("pix", [`ObjectN [("", [`Any])]]);
                     ("promptpay", [`ObjectN [("", [`Any])]]);
                     ("radar_options",
                      [`ObjectN [("", [`Any]); ("session", [`String])]]);
                     ("revolut_pay", [`ObjectN [("", [`Any])]]);
                     ("sepa_debit",
                      [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                     ("sofort",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("swish", [`ObjectN [("", [`Any])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]]);
                     ("wechat_pay", [`ObjectN [("", [`Any])]]);
                     ("zip", [`ObjectN [("", [`Any])]])]]);
                ("payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("currency", [`String]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]);
                               ("custom_mandate_url", [`Null;
                                                       `Null]);
                               ("default_for", [`Array [(`List (`Null))]]);
                               ("interval_description", [`String]);
                               ("payment_schedule", [`String]);
                               ("transaction_type", [`String])]]);
                          ("verification_method", [`String])]]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("card",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]); ("amount", [`Integer]);
                               ("amount_type", [`String]);
                               ("currency", [`String]);
                               ("description", [`String]);
                               ("end_date", [`Integer]);
                               ("interval", [`String]);
                               ("interval_count", [`Integer]);
                               ("reference", [`String]);
                               ("start_date", [`Integer]);
                               ("supported_types",
                                [`Array [(`List (`Null))]])]]);
                          ("network", [`String]);
                          ("request_three_d_secure", [`String]);
                          ("three_d_secure",
                           [`ObjectN
                              [("", [`Any]);
                               ("ares_trans_status", [`String]);
                               ("cryptogram", [`String]);
                               ("electronic_commerce_indicator", [`String]);
                               ("network_options",
                                [`ObjectN
                                   [("", [`Null]);
                                    ("cartes_bancaires", [`Null])]]);
                               ("requestor_challenge_indicator", [`String]);
                               ("transaction_id", [`String]);
                               ("version", [`String])]])]]);
                     ("card_present", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("paypal",
                      [`ObjectN
                         [("", [`Any]); ("billing_agreement_id", [`String])]]);
                     ("sepa_debit",
                      [`ObjectN
                         [("", [`Any]);
                          ("mandate_options", [`ObjectN [("", [`Any])]])]]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]);
                          ("financial_connections",
                           [`ObjectN
                              [("", [`Any]);
                               ("permissions", [`Array [(`List (`Null))]]);
                               ("prefetch", [`Array [(`List (`Null))]]);
                               ("return_url", [`String])]]);
                          ("mandate_options",
                           [`ObjectN
                              [("", [`Any]);
                               ("collection_method", [`String])]]);
                          ("networks",
                           [`ObjectN
                              [("", [`Any]);
                               ("requested", [`Array [(`List (`Null))]])]]);
                          ("verification_method", [`String])]])]]);
                ("payment_method_types", [`Array [(`List (`String))]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_766e276734 _lvl ~op ~ctype (_x : t_766e276734) =
    _body_of ~kind:(
      `ObjectN
        [("amounts", match _x.amounts with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : int) ->
                              `Singleton (`Integer)) _x))]);
         ("client_secret", match _x.client_secret with | None -> []
          | Some _x -> [`String]);
         ("descriptor_code", match _x.descriptor_code with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_766e276734) ~op ~ctype _x
  
  and _mk_body_to_t_766e276734 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_766e276734) in _body_to
      ~kind:(`ObjectN
               [("amounts", [`Array [(`List (`Integer))]]);
                ("client_secret", [`String]); ("descriptor_code", [`String]);
                ("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_da508546f5 _lvl ~op ~ctype (_x : t_da508546f5) =
    _body_of ~kind:(
      `ObjectN
        [("delivery_estimate", match _x.delivery_estimate with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("maximum", match _x.maximum with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("unit", let _x = _x.unit in
                                              [`String]);
                                             ("value", let _x = _x.value in
                                              [`Integer])]]);
                           ("minimum", match _x.minimum with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("unit", let _x = _x.unit in
                                              [`String]);
                                             ("value", let _x = _x.value in
                                              [`Integer])]])]]);
         ("display_name", let _x = _x.display_name in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("fixed_amount", match _x.fixed_amount with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", let _x = _x.amount in [`Integer]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("currency_options",
                            match _x.currency_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("",
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("amount", [`Integer]);
                                                  ("tax_behavior", [`String])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("tax_behavior", match _x.tax_behavior with | None -> []
          | Some _x -> [`String]);
         ("tax_code", match _x.tax_code with | None -> []
          | Some _x -> [`String]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_da508546f5) ~op ~ctype _x
  
  and _mk_body_to_t_da508546f5 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_da508546f5) in _body_to
      ~kind:(`ObjectN
               [("delivery_estimate",
                 [`ObjectN
                    [("", [`Any]);
                     ("maximum",
                      [`ObjectN
                         [("", [`Any]); ("unit", [`String]);
                          ("value", [`Integer])]]);
                     ("minimum",
                      [`ObjectN
                         [("", [`Any]); ("unit", [`String]);
                          ("value", [`Integer])]])]]);
                ("display_name", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("fixed_amount",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("currency", [`String]);
                     ("currency_options",
                      [`ObjectN
                         [("",
                           [`ObjectN
                              [("", [`Any]); ("amount", [`Integer]);
                               ("tax_behavior", [`String])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("tax_behavior", [`String]); ("tax_code", [`String]);
                ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_f99463f06f _lvl ~op ~ctype (_x : t_f99463f06f) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("fixed_amount", match _x.fixed_amount with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency_options",
                            match _x.currency_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("",
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("amount", [`Integer]);
                                                  ("tax_behavior", [`String])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_726c8227fb _x -> `ObjectN [("", [`String])]
                        | T_01b0fcd3a0 _x -> `String]);
         ("tax_behavior", match _x.tax_behavior with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_f99463f06f) ~op ~ctype _x
  
  and _mk_body_to_t_f99463f06f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_f99463f06f) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("fixed_amount",
                 [`ObjectN
                    [("", [`Any]);
                     ("currency_options",
                      [`ObjectN
                         [("",
                           [`ObjectN
                              [("", [`Any]); ("amount", [`Integer]);
                               ("tax_behavior", [`String])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("tax_behavior", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_129504cf36 _lvl ~op ~ctype (_x : t_129504cf36) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("flow", match _x.flow with | None -> [] | Some _x -> [`String]);
         ("mandate", match _x.mandate with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acceptance", match _x.acceptance with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("offline",
                                              match _x.offline with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("contact_email",
                                                                let _x = _x.contact_email in
                                                                [`String])]]);
                                             ("online", match _x.online with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("status", let _x = _x.status in
                                              [`String]);
                                             ("type", match _x.type_ with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [match _x with
                                          | Int _x -> `Integer
                                          | T_fea575dd49 _x -> `String]);
                           ("currency", match _x.currency with | None -> []
                            | Some _x -> [`String]);
                           ("interval", match _x.interval with | None -> []
                            | Some _x -> [`String]);
                           ("notification_method",
                            match _x.notification_method with | None -> []
                            | Some _x -> [`String])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("original_source", match _x.original_source with | None -> []
          | Some _x -> [`String]);
         ("owner", match _x.owner with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String])]]);
         ("receiver", match _x.receiver with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("refund_attributes_method",
                            match _x.refund_attributes_method with
                            | None -> [] | Some _x -> [`String])]]);
         ("redirect", match _x.redirect with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("return_url", let _x = _x.return_url in
                            [`String])]]);
         ("source_order", match _x.source_order with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("items", match _x.items with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_b707d97c2d) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("amount",
                                                       match _x.amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("currency",
                                                       match _x.currency with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("description",
                                                       match _x.description with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("parent",
                                                       match _x.parent with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("quantity",
                                                       match _x.quantity with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("type",
                                                       match _x.type_ with
                                                       | None -> []
                                                       | Some _x -> [`Null])]))
                                                _x))]);
                           ("shipping", match _x.shipping with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              let _x = _x.address in
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("city", match _x.city with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("country",
                                                   match _x.country with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("line1",
                                                   let _x = _x.line1 in
                                                   [`String]);
                                                  ("line2",
                                                   match _x.line2 with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("postal_code",
                                                   match _x.postal_code with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("state",
                                                   match _x.state with
                                                   | None -> []
                                                   | Some _x -> [`String])]]);
                                             ("carrier",
                                              match _x.carrier with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("tracking_number",
                                              match _x.tracking_number with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("token", match _x.token with | None -> [] | Some _x -> [`String]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String]);
         ("usage", match _x.usage with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_129504cf36) ~op ~ctype _x
  
  and _mk_body_to_t_129504cf36 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_129504cf36) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("customer", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("flow", [`String]);
                ("mandate",
                 [`ObjectN
                    [("", [`Any]);
                     ("acceptance",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]);
                          ("offline",
                           [`ObjectN
                              [("", [`Any]); ("contact_email", [`String])]]);
                          ("online",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]); ("user_agent", [`String])]]);
                          ("status", [`String]); ("type", [`String]);
                          ("user_agent", [`String])]]);
                     ("amount", [`Integer;
                                 `String]);
                     ("currency", [`String]); ("interval", [`String]);
                     ("notification_method", [`String])]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("original_source", [`String]);
                ("owner",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("email", [`String]); ("name", [`String]);
                     ("phone", [`String])]]);
                ("receiver",
                 [`ObjectN
                    [("", [`Any]); ("refund_attributes_method", [`String])]]);
                ("redirect",
                 [`ObjectN [("", [`Any]); ("return_url", [`String])]]);
                ("source_order",
                 [`ObjectN
                    [("", [`Any]);
                     ("items",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("amount", [`Null]);
                                 ("currency", [`Null]);
                                 ("description", [`Null]);
                                 ("parent", [`Null]); ("quantity", [`Null]);
                                 ("type", [`Null])]))]]);
                     ("shipping",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String])]]);
                          ("carrier", [`String]); ("name", [`String]);
                          ("phone", [`String]);
                          ("tracking_number", [`String])]])]]);
                ("statement_descriptor", [`String]); ("token", [`String]);
                ("type", [`String]); ("usage", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_691d19b9b9 _lvl ~op ~ctype (_x : t_691d19b9b9) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("mandate", match _x.mandate with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acceptance", match _x.acceptance with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("date", match _x.date with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("ip", match _x.ip with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("offline",
                                              match _x.offline with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("contact_email",
                                                                let _x = _x.contact_email in
                                                                [`String])]]);
                                             ("online", match _x.online with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("status", let _x = _x.status in
                                              [`String]);
                                             ("type", match _x.type_ with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("user_agent",
                                              match _x.user_agent with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [match _x with
                                          | Int _x -> `Integer
                                          | T_c7bb1bc317 _x -> `String]);
                           ("currency", match _x.currency with | None -> []
                            | Some _x -> [`String]);
                           ("interval", match _x.interval with | None -> []
                            | Some _x -> [`String]);
                           ("notification_method",
                            match _x.notification_method with | None -> []
                            | Some _x -> [`String])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a3e3d2a6d7 _x -> `ObjectN [("", [`String])]
                        | T_ff6658c945 _x -> `String]);
         ("owner", match _x.owner with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String])]]);
         ("source_order", match _x.source_order with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("items", match _x.items with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_aa1b64fe86) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("amount",
                                                       match _x.amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("currency",
                                                       match _x.currency with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("description",
                                                       match _x.description with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("parent",
                                                       match _x.parent with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("quantity",
                                                       match _x.quantity with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("type",
                                                       match _x.type_ with
                                                       | None -> []
                                                       | Some _x -> [`Null])]))
                                                _x))]);
                           ("shipping", match _x.shipping with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              let _x = _x.address in
                                              [`ObjectN
                                                 [("", [`Any]);
                                                  ("city", match _x.city with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("country",
                                                   match _x.country with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("line1",
                                                   let _x = _x.line1 in
                                                   [`String]);
                                                  ("line2",
                                                   match _x.line2 with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("postal_code",
                                                   match _x.postal_code with
                                                   | None -> []
                                                   | Some _x -> [`String]);
                                                  ("state",
                                                   match _x.state with
                                                   | None -> []
                                                   | Some _x -> [`String])]]);
                                             ("carrier",
                                              match _x.carrier with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("tracking_number",
                                              match _x.tracking_number with
                                              | None -> []
                                              | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_691d19b9b9) ~op ~ctype _x
  
  and _mk_body_to_t_691d19b9b9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_691d19b9b9) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("mandate",
                 [`ObjectN
                    [("", [`Any]);
                     ("acceptance",
                      [`ObjectN
                         [("", [`Any]); ("date", [`Integer]);
                          ("ip", [`String]);
                          ("offline",
                           [`ObjectN
                              [("", [`Any]); ("contact_email", [`String])]]);
                          ("online",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]); ("user_agent", [`String])]]);
                          ("status", [`String]); ("type", [`String]);
                          ("user_agent", [`String])]]);
                     ("amount", [`Integer;
                                 `String]);
                     ("currency", [`String]); ("interval", [`String]);
                     ("notification_method", [`String])]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("owner",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("email", [`String]); ("name", [`String]);
                     ("phone", [`String])]]);
                ("source_order",
                 [`ObjectN
                    [("", [`Any]);
                     ("items",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("amount", [`Null]);
                                 ("currency", [`Null]);
                                 ("description", [`Null]);
                                 ("parent", [`Null]); ("quantity", [`Null]);
                                 ("type", [`Null])]))]]);
                     ("shipping",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String])]]);
                          ("carrier", [`String]); ("name", [`String]);
                          ("phone", [`String]);
                          ("tracking_number", [`String])]])]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_4926ae3bf6 _lvl ~op ~ctype (_x : t_4926ae3bf6) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("values", let _x = _x.values in
          [`Array ((List.map (fun (_x : string) -> `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_4926ae3bf6) ~op ~ctype _x
  
  and _mk_body_to_t_4926ae3bf6 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4926ae3bf6) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("values", [`Array [(`List (`String))]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_e73d9ab028 _lvl ~op ~ctype (_x : t_e73d9ab028) =
    _body_of ~kind:(
      `ObjectN
        [("billing_thresholds", match _x.billing_thresholds with | None -> []
          | Some _x -> [match _x with
                        | T_49cf3bf382 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("usage_gte", let _x = _x.usage_gte in
                              [`Integer])]
                        | T_25cd7d3498 _x -> `String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_a13da45e73 _x ->
                          `Array
                            ((List.map (fun (_x : t_8107ac46a8) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_bb5cec1d7e _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("payment_behavior", match _x.payment_behavior with | None -> []
          | Some _x -> [`String]);
         ("price", match _x.price with | None -> [] | Some _x -> [`String]);
         ("price_data", match _x.price_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("product", let _x = _x.product in [`String]);
                           ("recurring", let _x = _x.recurring in
                            [`ObjectN
                               [("", [`Any]);
                                ("interval", let _x = _x.interval in
                                 [`String]);
                                ("interval_count",
                                 match _x.interval_count with | None -> []
                                 | Some _x -> [`Integer])]]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("unit_amount", match _x.unit_amount with
                            | None -> [] | Some _x -> [`Integer]);
                           ("unit_amount_decimal",
                            match _x.unit_amount_decimal with | None -> []
                            | Some _x -> [`String])]]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("proration_date", match _x.proration_date with | None -> []
          | Some _x -> [`Integer]);
         ("quantity", match _x.quantity with | None -> []
          | Some _x -> [`Integer]);
         ("subscription", let _x = _x.subscription in [`String]);
         ("tax_rates", match _x.tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_36c3677446 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_e73d9ab028) ~op ~ctype _x
  
  and _mk_body_to_t_e73d9ab028 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e73d9ab028) in _body_to
      ~kind:(`ObjectN
               [("billing_thresholds",
                 [`ObjectN [("", [`Any]); ("usage_gte", [`Integer])];
                  `String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("payment_behavior", [`String]); ("price", [`String]);
                ("price_data",
                 [`ObjectN
                    [("", [`Any]); ("currency", [`String]);
                     ("product", [`String]);
                     ("recurring",
                      [`ObjectN
                         [("", [`Any]); ("interval", [`String]);
                          ("interval_count", [`Integer])]]);
                     ("tax_behavior", [`String]);
                     ("unit_amount", [`Integer]);
                     ("unit_amount_decimal", [`String])]]);
                ("proration_behavior", [`String]);
                ("proration_date", [`Integer]); ("quantity", [`Integer]);
                ("subscription", [`String]);
                ("tax_rates", [`Array [(`List (`String))];
                               `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_e1e2f3202f _lvl ~op ~ctype (_x : t_e1e2f3202f) =
    _body_of ~kind:(
      `ObjectN
        [("clear_usage", match _x.clear_usage with | None -> []
          | Some _x -> [`Boolean]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("proration_date", match _x.proration_date with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_e1e2f3202f) ~op ~ctype _x
  
  and _mk_body_to_t_e1e2f3202f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e1e2f3202f) in _body_to
      ~kind:(`ObjectN
               [("clear_usage", [`Boolean]);
                ("proration_behavior", [`String]);
                ("proration_date", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_52af184891 _lvl ~op ~ctype (_x : t_52af184891) =
    _body_of ~kind:(
      `ObjectN
        [("billing_thresholds", match _x.billing_thresholds with | None -> []
          | Some _x -> [match _x with
                        | T_44be8ab17d _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("usage_gte", let _x = _x.usage_gte in
                              [`Integer])]
                        | T_f4fd208de2 _x -> `String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_1125a295cb _x ->
                          `Array
                            ((List.map (fun (_x : t_69f4ac1f80) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_328deeeed4 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_5ecb858676 _x -> `ObjectN [("", [`String])]
                        | T_cd6c90cecd _x -> `String]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [`Boolean]);
         ("payment_behavior", match _x.payment_behavior with | None -> []
          | Some _x -> [`String]);
         ("price", match _x.price with | None -> [] | Some _x -> [`String]);
         ("price_data", match _x.price_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("product", let _x = _x.product in [`String]);
                           ("recurring", let _x = _x.recurring in
                            [`ObjectN
                               [("", [`Any]);
                                ("interval", let _x = _x.interval in
                                 [`String]);
                                ("interval_count",
                                 match _x.interval_count with | None -> []
                                 | Some _x -> [`Integer])]]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("unit_amount", match _x.unit_amount with
                            | None -> [] | Some _x -> [`Integer]);
                           ("unit_amount_decimal",
                            match _x.unit_amount_decimal with | None -> []
                            | Some _x -> [`String])]]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("proration_date", match _x.proration_date with | None -> []
          | Some _x -> [`Integer]);
         ("quantity", match _x.quantity with | None -> []
          | Some _x -> [`Integer]);
         ("tax_rates", match _x.tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_6cbf17dc2d _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_52af184891) ~op ~ctype _x
  
  and _mk_body_to_t_52af184891 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_52af184891) in _body_to
      ~kind:(`ObjectN
               [("billing_thresholds",
                 [`ObjectN [("", [`Any]); ("usage_gte", [`Integer])];
                  `String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("off_session", [`Boolean]); ("payment_behavior", [`String]);
                ("price", [`String]);
                ("price_data",
                 [`ObjectN
                    [("", [`Any]); ("currency", [`String]);
                     ("product", [`String]);
                     ("recurring",
                      [`ObjectN
                         [("", [`Any]); ("interval", [`String]);
                          ("interval_count", [`Integer])]]);
                     ("tax_behavior", [`String]);
                     ("unit_amount", [`Integer]);
                     ("unit_amount_decimal", [`String])]]);
                ("proration_behavior", [`String]);
                ("proration_date", [`Integer]); ("quantity", [`Integer]);
                ("tax_rates", [`Array [(`List (`String))];
                               `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_ed0a563493 _lvl ~op ~ctype (_x : t_ed0a563493) =
    _body_of ~kind:(
      `ObjectN
        [("action", match _x.action with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("quantity", let _x = _x.quantity in [`Integer]);
         ("timestamp", match _x.timestamp with | None -> []
          | Some _x -> [match _x with
                        | T_810ad33917 _x -> `String
                        | Ptime_t _x -> `Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_ed0a563493) ~op ~ctype _x
  
  and _mk_body_to_t_ed0a563493 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_ed0a563493) in _body_to
      ~kind:(`ObjectN
               [("action", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("quantity", [`Integer]); ("timestamp", [`String;
                                                         `Integer])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_fadd71181a _lvl ~op ~ctype (_x : t_fadd71181a) =
    _body_of ~kind:(
      `ObjectN
        [("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("default_settings", match _x.default_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("application_fee_percent",
                            match _x.application_fee_percent with
                            | None -> [] | Some _x -> [`Number]);
                           ("automatic_tax", match _x.automatic_tax with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("enabled",
                                              let _x = _x.enabled in
                                              [`Boolean]);
                                             ("liability",
                                              match _x.liability with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]])]]);
                           ("billing_cycle_anchor",
                            match _x.billing_cycle_anchor with | None -> []
                            | Some _x -> [`String]);
                           ("billing_thresholds",
                            match _x.billing_thresholds with | None -> []
                            | Some _x -> [match _x with
                                          | T_19ad4a712e _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("amount_gte",
                                                match _x.amount_gte with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("reset_billing_cycle_anchor",
                                                match _x.reset_billing_cycle_anchor with
                                                | None -> []
                                                | Some _x -> [`Boolean])]
                                          | T_cca44282f3 _x -> `String]);
                           ("collection_method",
                            match _x.collection_method with | None -> []
                            | Some _x -> [`String]);
                           ("default_payment_method",
                            match _x.default_payment_method with | None -> []
                            | Some _x -> [`String]);
                           ("description", match _x.description with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_cc74130e2b _x -> `String]);
                           ("invoice_settings",
                            match _x.invoice_settings with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_tax_ids",
                                              match _x.account_tax_ids with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | StringList _x ->
                                                              `Array
                                                                ((List.map (fun (_x : string) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_14b9e9135f _x ->
                                                              `String]);
                                             ("days_until_due",
                                              match _x.days_until_due with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]])]]);
                           ("on_behalf_of", match _x.on_behalf_of with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_3abb39a2a5 _x -> `String]);
                           ("transfer_data", match _x.transfer_data with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_66d2a192c4 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("amount_percent",
                                                match _x.amount_percent with
                                                | None -> []
                                                | Some _x -> [`Number]);
                                               ("destination",
                                                let _x = _x.destination in
                                                [`String])]
                                          | T_8861f3b4fe _x -> `String])]]);
         ("end_behavior", match _x.end_behavior with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("from_subscription", match _x.from_subscription with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a6cfa7d55a _x -> `ObjectN [("", [`String])]
                        | T_1887acb610 _x -> `String]);
         ("phases", match _x.phases with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_7506c8f417) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("add_invoice_items",
                                     match _x.add_invoice_items with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : t_91146f5092) ->
                                                         `Singleton (`Null))
                                                         _x))]);
                                    ("application_fee_percent",
                                     match _x.application_fee_percent with
                                     | None -> [] | Some _x -> [`Number]);
                                    ("automatic_tax",
                                     match _x.automatic_tax with | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("enabled",
                                                       let _x = _x.enabled in
                                                       [`Null]);
                                                      ("liability",
                                                       match _x.liability with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("billing_cycle_anchor",
                                     match _x.billing_cycle_anchor with
                                     | None -> [] | Some _x -> [`String]);
                                    ("billing_thresholds",
                                     match _x.billing_thresholds with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_12b4617505 _x -> `Null
                                                   | T_f31aa5807c _x -> `Null]);
                                    ("collection_method",
                                     match _x.collection_method with
                                     | None -> [] | Some _x -> [`String]);
                                    ("coupon", match _x.coupon with
                                     | None -> [] | Some _x -> [`String]);
                                    ("currency", match _x.currency with
                                     | None -> [] | Some _x -> [`String]);
                                    ("default_payment_method",
                                     match _x.default_payment_method with
                                     | None -> [] | Some _x -> [`String]);
                                    ("default_tax_rates",
                                     match _x.default_tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_554ad65cf7 _x -> `Null]);
                                    ("description", match _x.description with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | String_ _x -> `Null
                                                   | T_eb940662a2 _x -> `Null]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_bd9cdbc6b9 _x -> `Null
                                                   | T_622ab6bb5f _x -> `Null]);
                                    ("end_date", match _x.end_date with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("invoice_settings",
                                     match _x.invoice_settings with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("account_tax_ids",
                                                       match _x.account_tax_ids with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("days_until_due",
                                                       match _x.days_until_due with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("issuer",
                                                       match _x.issuer with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("items", let _x = _x.items in
                                     [`Array
                                        ((List.map (fun (_x : t_a57a2bfa32) ->
                                            `Singleton (`Null)) _x))]);
                                    ("iterations", match _x.iterations with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [`ObjectN [("", [`Null])]]);
                                    ("on_behalf_of",
                                     match _x.on_behalf_of with | None -> []
                                     | Some _x -> [`String]);
                                    ("proration_behavior",
                                     match _x.proration_behavior with
                                     | None -> [] | Some _x -> [`String]);
                                    ("transfer_data",
                                     match _x.transfer_data with | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("amount_percent",
                                                       match _x.amount_percent with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("destination",
                                                       let _x = _x.destination in
                                                       [`Null])]]);
                                    ("trial", match _x.trial with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("trial_end", match _x.trial_end with
                                     | None -> [] | Some _x -> [`Integer])]))
                              _x))]);
         ("start_date", match _x.start_date with | None -> []
          | Some _x -> [match _x with
                        | Ptime_t _x -> `Integer
                        | T_f915f473fe _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_fadd71181a) ~op ~ctype _x
  
  and _mk_body_to_t_fadd71181a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fadd71181a) in _body_to
      ~kind:(`ObjectN
               [("customer", [`String]);
                ("default_settings",
                 [`ObjectN
                    [("", [`Any]); ("application_fee_percent", [`Number]);
                     ("automatic_tax",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("liability",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]])]]);
                     ("billing_cycle_anchor", [`String]);
                     ("billing_thresholds",
                      [`ObjectN
                         [("", [`Any]); ("amount_gte", [`Integer]);
                          ("reset_billing_cycle_anchor", [`Boolean])];
                       `String]);
                     ("collection_method", [`String]);
                     ("default_payment_method", [`String]);
                     ("description", [`String;
                                      `String]);
                     ("invoice_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("account_tax_ids",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("days_until_due", [`Integer]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]])]]);
                     ("on_behalf_of", [`String;
                                       `String]);
                     ("transfer_data",
                      [`ObjectN
                         [("", [`Any]); ("amount_percent", [`Number]);
                          ("destination", [`String])];
                       `String])]]);
                ("end_behavior", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("from_subscription", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("phases",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("add_invoice_items", [`Array [(`List (`Null))]]);
                            ("application_fee_percent", [`Number]);
                            ("automatic_tax",
                             [`ObjectN
                                [("", [`Null]); ("enabled", [`Null]);
                                 ("liability", [`Null])]]);
                            ("billing_cycle_anchor", [`String]);
                            ("billing_thresholds", [`Null;
                                                    `Null]);
                            ("collection_method", [`String]);
                            ("coupon", [`String]); ("currency", [`String]);
                            ("default_payment_method", [`String]);
                            ("default_tax_rates", [`Null;
                                                   `Null]);
                            ("description", [`Null;
                                             `Null]);
                            ("discounts", [`Null;
                                           `Null]);
                            ("end_date", [`Integer]);
                            ("invoice_settings",
                             [`ObjectN
                                [("", [`Null]); ("account_tax_ids", [`Null]);
                                 ("days_until_due", [`Null]);
                                 ("issuer", [`Null])]]);
                            ("items", [`Array [(`List (`Null))]]);
                            ("iterations", [`Integer]);
                            ("metadata", [`ObjectN [("", [`Null])]]);
                            ("on_behalf_of", [`String]);
                            ("proration_behavior", [`String]);
                            ("transfer_data",
                             [`ObjectN
                                [("", [`Null]); ("amount_percent", [`Null]);
                                 ("destination", [`Null])]]);
                            ("trial", [`Boolean]); ("trial_end", [`Integer])]))]]);
                ("start_date", [`Integer;
                                `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b13d04ec54 _lvl ~op ~ctype (_x : t_b13d04ec54) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_now", match _x.invoice_now with | None -> []
          | Some _x -> [`Boolean]);
         ("prorate", match _x.prorate with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_b13d04ec54) ~op ~ctype _x
  
  and _mk_body_to_t_b13d04ec54 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b13d04ec54) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("invoice_now", [`Boolean]); ("prorate", [`Boolean])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_1961e701de _lvl ~op ~ctype (_x : t_1961e701de) =
    _body_of ~kind:(
      `ObjectN
        [("default_settings", match _x.default_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("application_fee_percent",
                            match _x.application_fee_percent with
                            | None -> [] | Some _x -> [`Number]);
                           ("automatic_tax", match _x.automatic_tax with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("enabled",
                                              let _x = _x.enabled in
                                              [`Boolean]);
                                             ("liability",
                                              match _x.liability with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]])]]);
                           ("billing_cycle_anchor",
                            match _x.billing_cycle_anchor with | None -> []
                            | Some _x -> [`String]);
                           ("billing_thresholds",
                            match _x.billing_thresholds with | None -> []
                            | Some _x -> [match _x with
                                          | T_9cb13828ed _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("amount_gte",
                                                match _x.amount_gte with
                                                | None -> []
                                                | Some _x -> [`Integer]);
                                               ("reset_billing_cycle_anchor",
                                                match _x.reset_billing_cycle_anchor with
                                                | None -> []
                                                | Some _x -> [`Boolean])]
                                          | T_0e9cf5778c _x -> `String]);
                           ("collection_method",
                            match _x.collection_method with | None -> []
                            | Some _x -> [`String]);
                           ("default_payment_method",
                            match _x.default_payment_method with | None -> []
                            | Some _x -> [`String]);
                           ("description", match _x.description with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_3d8607b07e _x -> `String]);
                           ("invoice_settings",
                            match _x.invoice_settings with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_tax_ids",
                                              match _x.account_tax_ids with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | StringList _x ->
                                                              `Array
                                                                ((List.map (fun (_x : string) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_e2df31ae1d _x ->
                                                              `String]);
                                             ("days_until_due",
                                              match _x.days_until_due with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("issuer", match _x.issuer with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("account",
                                                                match _x.account with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("type",
                                                                let _x = _x.type_ in
                                                                [`String])]])]]);
                           ("on_behalf_of", match _x.on_behalf_of with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_732ab771f6 _x -> `String]);
                           ("transfer_data", match _x.transfer_data with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_72726e5388 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("amount_percent",
                                                match _x.amount_percent with
                                                | None -> []
                                                | Some _x -> [`Number]);
                                               ("destination",
                                                let _x = _x.destination in
                                                [`String])]
                                          | T_15f0a4a0f8 _x -> `String])]]);
         ("end_behavior", match _x.end_behavior with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_b3d8779d9e _x -> `ObjectN [("", [`String])]
                        | T_0588578cb2 _x -> `String]);
         ("phases", match _x.phases with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_b7d6ec55c4) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("add_invoice_items",
                                     match _x.add_invoice_items with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : t_ced28562e5) ->
                                                         `Singleton (`Null))
                                                         _x))]);
                                    ("application_fee_percent",
                                     match _x.application_fee_percent with
                                     | None -> [] | Some _x -> [`Number]);
                                    ("automatic_tax",
                                     match _x.automatic_tax with | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("enabled",
                                                       let _x = _x.enabled in
                                                       [`Null]);
                                                      ("liability",
                                                       match _x.liability with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("billing_cycle_anchor",
                                     match _x.billing_cycle_anchor with
                                     | None -> [] | Some _x -> [`String]);
                                    ("billing_thresholds",
                                     match _x.billing_thresholds with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_3b4c781e40 _x -> `Null
                                                   | T_8a3deff3e3 _x -> `Null]);
                                    ("collection_method",
                                     match _x.collection_method with
                                     | None -> [] | Some _x -> [`String]);
                                    ("coupon", match _x.coupon with
                                     | None -> [] | Some _x -> [`String]);
                                    ("default_payment_method",
                                     match _x.default_payment_method with
                                     | None -> [] | Some _x -> [`String]);
                                    ("default_tax_rates",
                                     match _x.default_tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_c338309bf7 _x -> `Null]);
                                    ("description", match _x.description with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | String_ _x -> `Null
                                                   | T_ae7fe76e15 _x -> `Null]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_6b68b8759b _x -> `Null
                                                   | T_a9f60f5c19 _x -> `Null]);
                                    ("end_date", match _x.end_date with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | Ptime_t _x -> `Null
                                                   | T_a11e2d0a9c _x -> `Null]);
                                    ("invoice_settings",
                                     match _x.invoice_settings with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("account_tax_ids",
                                                       match _x.account_tax_ids with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("days_until_due",
                                                       match _x.days_until_due with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("issuer",
                                                       match _x.issuer with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("items", let _x = _x.items in
                                     [`Array
                                        ((List.map (fun (_x : t_ab1426bf94) ->
                                            `Singleton (`Null)) _x))]);
                                    ("iterations", match _x.iterations with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [`ObjectN [("", [`Null])]]);
                                    ("on_behalf_of",
                                     match _x.on_behalf_of with | None -> []
                                     | Some _x -> [`String]);
                                    ("proration_behavior",
                                     match _x.proration_behavior with
                                     | None -> [] | Some _x -> [`String]);
                                    ("start_date", match _x.start_date with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | Ptime_t _x -> `Null
                                                   | T_28e3c72215 _x -> `Null]);
                                    ("transfer_data",
                                     match _x.transfer_data with | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("amount_percent",
                                                       match _x.amount_percent with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("destination",
                                                       let _x = _x.destination in
                                                       [`Null])]]);
                                    ("trial", match _x.trial with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("trial_end", match _x.trial_end with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | Ptime_t _x -> `Null
                                                   | T_833a6adcb7 _x -> `Null])]))
                              _x))]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_1961e701de) ~op ~ctype _x
  
  and _mk_body_to_t_1961e701de _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_1961e701de) in _body_to
      ~kind:(`ObjectN
               [("default_settings",
                 [`ObjectN
                    [("", [`Any]); ("application_fee_percent", [`Number]);
                     ("automatic_tax",
                      [`ObjectN
                         [("", [`Any]); ("enabled", [`Boolean]);
                          ("liability",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]])]]);
                     ("billing_cycle_anchor", [`String]);
                     ("billing_thresholds",
                      [`ObjectN
                         [("", [`Any]); ("amount_gte", [`Integer]);
                          ("reset_billing_cycle_anchor", [`Boolean])];
                       `String]);
                     ("collection_method", [`String]);
                     ("default_payment_method", [`String]);
                     ("description", [`String;
                                      `String]);
                     ("invoice_settings",
                      [`ObjectN
                         [("", [`Any]);
                          ("account_tax_ids",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("days_until_due", [`Integer]);
                          ("issuer",
                           [`ObjectN
                              [("", [`Any]); ("account", [`String]);
                               ("type", [`String])]])]]);
                     ("on_behalf_of", [`String;
                                       `String]);
                     ("transfer_data",
                      [`ObjectN
                         [("", [`Any]); ("amount_percent", [`Number]);
                          ("destination", [`String])];
                       `String])]]);
                ("end_behavior", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("phases",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("add_invoice_items", [`Array [(`List (`Null))]]);
                            ("application_fee_percent", [`Number]);
                            ("automatic_tax",
                             [`ObjectN
                                [("", [`Null]); ("enabled", [`Null]);
                                 ("liability", [`Null])]]);
                            ("billing_cycle_anchor", [`String]);
                            ("billing_thresholds", [`Null;
                                                    `Null]);
                            ("collection_method", [`String]);
                            ("coupon", [`String]);
                            ("default_payment_method", [`String]);
                            ("default_tax_rates", [`Null;
                                                   `Null]);
                            ("description", [`Null;
                                             `Null]);
                            ("discounts", [`Null;
                                           `Null]);
                            ("end_date", [`Null;
                                          `Null]);
                            ("invoice_settings",
                             [`ObjectN
                                [("", [`Null]); ("account_tax_ids", [`Null]);
                                 ("days_until_due", [`Null]);
                                 ("issuer", [`Null])]]);
                            ("items", [`Array [(`List (`Null))]]);
                            ("iterations", [`Integer]);
                            ("metadata", [`ObjectN [("", [`Null])]]);
                            ("on_behalf_of", [`String]);
                            ("proration_behavior", [`String]);
                            ("start_date", [`Null;
                                            `Null]);
                            ("transfer_data",
                             [`ObjectN
                                [("", [`Null]); ("amount_percent", [`Null]);
                                 ("destination", [`Null])]]);
                            ("trial", [`Boolean]);
                            ("trial_end", [`Null;
                                           `Null])]))]]);
                ("proration_behavior", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_41158558d6 _lvl ~op ~ctype (_x : t_41158558d6) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("preserve_cancel_date", match _x.preserve_cancel_date with
          | None -> [] | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_41158558d6) ~op ~ctype _x
  
  and _mk_body_to_t_41158558d6 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_41158558d6) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("preserve_cancel_date", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_5694d68ef9 _lvl ~op ~ctype (_x : t_5694d68ef9) =
    _body_of ~kind:(
      `ObjectN
        [("add_invoice_items", match _x.add_invoice_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_6f51eb3ffa) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : t_a41ffb24df) ->
                                                         `Singleton (`Null))
                                                         _x))]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_d729e75db9 _x -> `Null])]))
                              _x))]);
         ("application_fee_percent", match _x.application_fee_percent with
          | None -> []
          | Some _x -> [match _x with
                        | Float_ _x -> `Number
                        | T_276a638b84 _x -> `String]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("backdate_start_date", match _x.backdate_start_date with
          | None -> [] | Some _x -> [`Integer]);
         ("billing_cycle_anchor", match _x.billing_cycle_anchor with
          | None -> [] | Some _x -> [`Integer]);
         ("billing_cycle_anchor_config",
          match _x.billing_cycle_anchor_config with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("day_of_month", let _x = _x.day_of_month in
                            [`Integer]);
                           ("hour", match _x.hour with | None -> []
                            | Some _x -> [`Integer]);
                           ("minute", match _x.minute with | None -> []
                            | Some _x -> [`Integer]);
                           ("month", match _x.month with | None -> []
                            | Some _x -> [`Integer]);
                           ("second", match _x.second with | None -> []
                            | Some _x -> [`Integer])]]);
         ("billing_thresholds", match _x.billing_thresholds with | None -> []
          | Some _x -> [match _x with
                        | T_2af8b10c20 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount_gte", match _x.amount_gte with
                              | None -> [] | Some _x -> [`Integer]);
                             ("reset_billing_cycle_anchor",
                              match _x.reset_billing_cycle_anchor with
                              | None -> [] | Some _x -> [`Boolean])]
                        | T_59dabbceb1 _x -> `String]);
         ("cancel_at", match _x.cancel_at with | None -> []
          | Some _x -> [`Integer]);
         ("cancel_at_period_end", match _x.cancel_at_period_end with
          | None -> [] | Some _x -> [`Boolean]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("coupon", match _x.coupon with | None -> [] | Some _x -> [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("customer", let _x = _x.customer in [`String]);
         ("days_until_due", match _x.days_until_due with | None -> []
          | Some _x -> [`Integer]);
         ("default_payment_method", match _x.default_payment_method with
          | None -> [] | Some _x -> [`String]);
         ("default_source", match _x.default_source with | None -> []
          | Some _x -> [`String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_d8ca8d921c _x -> `String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_e70be9f2a4 _x ->
                          `Array
                            ((List.map (fun (_x : t_b5bf44bcaf) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_2bb8e2e81b _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_tax_ids", match _x.account_tax_ids with
                            | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_b7779b435c _x -> `String]);
                           ("issuer", match _x.issuer with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("items", match _x.items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_84fe765875) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("billing_thresholds",
                                     match _x.billing_thresholds with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_6b4fdf5362 _x -> `Null
                                                   | T_5bd7ccb1f1 _x -> `Null]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_fc09869098 _x -> `Null
                                                   | T_9410be6da5 _x -> `Null]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [`ObjectN [("", [`Null])]]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("recurring",
                                                       let _x = _x.recurring in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_46ed68a2c5 _x -> `Null])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_6f8f54eef2 _x -> `ObjectN [("", [`String])]
                        | T_52a63d9c5e _x -> `String]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [`Boolean]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_257c95ef33 _x -> `String]);
         ("payment_behavior", match _x.payment_behavior with | None -> []
          | Some _x -> [`String]);
         ("payment_settings", match _x.payment_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("payment_method_options",
                            match _x.payment_method_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("acss_debit",
                                              match _x.acss_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_274aecf8f8 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_8a2d579dbd _x ->
                                                              `String]);
                                             ("bancontact",
                                              match _x.bancontact with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_abb8013b7f _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("preferred_language",
                                                                  match _x.preferred_language with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_fe9dafd4ab _x ->
                                                              `String]);
                                             ("card", match _x.card with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_6de6b42331 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("network",
                                                                  match _x.network with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("request_three_d_secure",
                                                                  match _x.request_three_d_secure with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_2b4d382f9b _x ->
                                                              `String]);
                                             ("customer_balance",
                                              match _x.customer_balance with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_fd038ab6d0 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("bank_transfer",
                                                                  match _x.bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("funding_type",
                                                                  match _x.funding_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_24130dc8aa _x ->
                                                              `String]);
                                             ("konbini",
                                              match _x.konbini with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_a9efc5bd3b _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_5edec94053 _x ->
                                                              `String]);
                                             ("sepa_debit",
                                              match _x.sepa_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_457feb67fa _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_363b0b9ff6 _x ->
                                                              `String]);
                                             ("us_bank_account",
                                              match _x.us_bank_account with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_7bd1926c73 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("financial_connections",
                                                                  match _x.financial_connections with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_b55484fe76 _x ->
                                                              `String])]]);
                           ("payment_method_types",
                            match _x.payment_method_types with | None -> []
                            | Some _x -> [match _x with
                                          | T_f2bde9c570 _x ->
                                            `Array
                                              ((List.map (fun (_x : t_dc021368cf) ->
                                                  `Singleton (`Null)) _x))
                                          | T_997af7872b _x -> `String]);
                           ("save_default_payment_method",
                            match _x.save_default_payment_method with
                            | None -> [] | Some _x -> [`String])]]);
         ("pending_invoice_item_interval",
          match _x.pending_invoice_item_interval with | None -> []
          | Some _x -> [match _x with
                        | T_1fafda5ab0 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("interval", let _x = _x.interval in [`String]);
                             ("interval_count", match _x.interval_count with
                              | None -> [] | Some _x -> [`Integer])]
                        | T_42178a8c5a _x -> `String]);
         ("promotion_code", match _x.promotion_code with | None -> []
          | Some _x -> [`String]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount_percent", match _x.amount_percent with
                            | None -> [] | Some _x -> [`Number]);
                           ("destination", let _x = _x.destination in
                            [`String])]]);
         ("trial_end", match _x.trial_end with | None -> []
          | Some _x -> [match _x with
                        | T_a79aca44d1 _x -> `String
                        | Ptime_t _x -> `Integer]);
         ("trial_from_plan", match _x.trial_from_plan with | None -> []
          | Some _x -> [`Boolean]);
         ("trial_period_days", match _x.trial_period_days with | None -> []
          | Some _x -> [`Integer]);
         ("trial_settings", match _x.trial_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end_behavior", let _x = _x.end_behavior in
                            [`ObjectN
                               [("", [`Any]);
                                ("missing_payment_method",
                                 let _x = _x.missing_payment_method in
                                 [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_5694d68ef9) ~op ~ctype _x
  
  and _mk_body_to_t_5694d68ef9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5694d68ef9) in _body_to
      ~kind:(`ObjectN
               [("add_invoice_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("discounts", [`Array [(`List (`Null))]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("application_fee_percent", [`Number;
                                             `String]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("backdate_start_date", [`Integer]);
                ("billing_cycle_anchor", [`Integer]);
                ("billing_cycle_anchor_config",
                 [`ObjectN
                    [("", [`Any]); ("day_of_month", [`Integer]);
                     ("hour", [`Integer]); ("minute", [`Integer]);
                     ("month", [`Integer]); ("second", [`Integer])]]);
                ("billing_thresholds",
                 [`ObjectN
                    [("", [`Any]); ("amount_gte", [`Integer]);
                     ("reset_billing_cycle_anchor", [`Boolean])];
                  `String]);
                ("cancel_at", [`Integer]);
                ("cancel_at_period_end", [`Boolean]);
                ("collection_method", [`String]); ("coupon", [`String]);
                ("currency", [`String]); ("customer", [`String]);
                ("days_until_due", [`Integer]);
                ("default_payment_method", [`String]);
                ("default_source", [`String]);
                ("default_tax_rates", [`Array [(`List (`String))];
                                       `String]);
                ("description", [`String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("account_tax_ids", [`Array [(`List (`Null))];
                                          `String]);
                     ("issuer",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("billing_thresholds", [`Null;
                                                    `Null]);
                            ("discounts", [`Null;
                                           `Null]);
                            ("metadata", [`ObjectN [("", [`Null])]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("recurring", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("off_session", [`Boolean]);
                ("on_behalf_of", [`String;
                                  `String]);
                ("payment_behavior", [`String]);
                ("payment_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("payment_method_options",
                      [`ObjectN
                         [("", [`Any]);
                          ("acss_debit",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("verification_method", [`Null])];
                            `String]);
                          ("bancontact",
                           [`ObjectN
                              [("", [`Null]);
                               ("preferred_language", [`Null])];
                            `String]);
                          ("card",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("network", [`Null]);
                               ("request_three_d_secure", [`Null])];
                            `String]);
                          ("customer_balance",
                           [`ObjectN
                              [("", [`Null]); ("bank_transfer", [`Null]);
                               ("funding_type", [`Null])];
                            `String]);
                          ("konbini", [`ObjectN [("", [`Null])];
                                       `String]);
                          ("sepa_debit", [`ObjectN [("", [`Null])];
                                          `String]);
                          ("us_bank_account",
                           [`ObjectN
                              [("", [`Null]);
                               ("financial_connections", [`Null]);
                               ("verification_method", [`Null])];
                            `String])]]);
                     ("payment_method_types",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("save_default_payment_method", [`String])]]);
                ("pending_invoice_item_interval",
                 [`ObjectN
                    [("", [`Any]); ("interval", [`String]);
                     ("interval_count", [`Integer])];
                  `String]);
                ("promotion_code", [`String]);
                ("proration_behavior", [`String]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount_percent", [`Number]);
                     ("destination", [`String])]]);
                ("trial_end", [`String;
                               `Integer]);
                ("trial_from_plan", [`Boolean]);
                ("trial_period_days", [`Integer]);
                ("trial_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("end_behavior",
                      [`ObjectN
                         [("", [`Any]);
                          ("missing_payment_method", [`String])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_fc1e4fa3c5 _lvl ~op ~ctype (_x : t_fc1e4fa3c5) =
    _body_of ~kind:(
      `ObjectN
        [("cancellation_details", match _x.cancellation_details with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("comment", match _x.comment with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_dd931d68ae _x -> `String]);
                           ("feedback", match _x.feedback with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_now", match _x.invoice_now with | None -> []
          | Some _x -> [`Boolean]);
         ("prorate", match _x.prorate with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_fc1e4fa3c5) ~op ~ctype _x
  
  and _mk_body_to_t_fc1e4fa3c5 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_fc1e4fa3c5) in _body_to
      ~kind:(`ObjectN
               [("cancellation_details",
                 [`ObjectN
                    [("", [`Any]); ("comment", [`String;
                                                `String]);
                     ("feedback", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_now", [`Boolean]); ("prorate", [`Boolean])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_702854dd00 _lvl ~op ~ctype (_x : t_702854dd00) =
    _body_of ~kind:(
      `ObjectN
        [("add_invoice_items", match _x.add_invoice_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_25d91c5b71) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [`Array
                                                     ((List.map (fun (_x : t_7f81b5f319) ->
                                                         `Singleton (`Null))
                                                         _x))]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_02c4e75bbd _x -> `Null])]))
                              _x))]);
         ("application_fee_percent", match _x.application_fee_percent with
          | None -> []
          | Some _x -> [match _x with
                        | Float_ _x -> `Number
                        | T_892183456c _x -> `String]);
         ("automatic_tax", match _x.automatic_tax with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enabled", let _x = _x.enabled in [`Boolean]);
                           ("liability", match _x.liability with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("billing_cycle_anchor", match _x.billing_cycle_anchor with
          | None -> [] | Some _x -> [`String]);
         ("billing_thresholds", match _x.billing_thresholds with | None -> []
          | Some _x -> [match _x with
                        | T_303a348896 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount_gte", match _x.amount_gte with
                              | None -> [] | Some _x -> [`Integer]);
                             ("reset_billing_cycle_anchor",
                              match _x.reset_billing_cycle_anchor with
                              | None -> [] | Some _x -> [`Boolean])]
                        | T_e2acbc660a _x -> `String]);
         ("cancel_at", match _x.cancel_at with | None -> []
          | Some _x -> [match _x with
                        | Ptime_t _x -> `Integer
                        | T_bc2df04f71 _x -> `String]);
         ("cancel_at_period_end", match _x.cancel_at_period_end with
          | None -> [] | Some _x -> [`Boolean]);
         ("cancellation_details", match _x.cancellation_details with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("comment", match _x.comment with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_4746345f87 _x -> `String]);
                           ("feedback", match _x.feedback with | None -> []
                            | Some _x -> [`String])]]);
         ("collection_method", match _x.collection_method with | None -> []
          | Some _x -> [`String]);
         ("coupon", match _x.coupon with | None -> [] | Some _x -> [`String]);
         ("days_until_due", match _x.days_until_due with | None -> []
          | Some _x -> [`Integer]);
         ("default_payment_method", match _x.default_payment_method with
          | None -> [] | Some _x -> [`String]);
         ("default_source", match _x.default_source with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_c0ed1f433c _x -> `String]);
         ("default_tax_rates", match _x.default_tax_rates with | None -> []
          | Some _x -> [match _x with
                        | StringList _x ->
                          `Array
                            ((List.map (fun (_x : string) ->
                                `Singleton (`String)) _x))
                        | T_2b482ebf81 _x -> `String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_817f36d77f _x -> `String]);
         ("discounts", match _x.discounts with | None -> []
          | Some _x -> [match _x with
                        | T_745376c216 _x ->
                          `Array
                            ((List.map (fun (_x : t_ee3b407d18) ->
                                `Singleton
                                  (`ObjectN
                                     [("", [`Null]);
                                      ("coupon", match _x.coupon with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("discount", match _x.discount with
                                       | None -> [] | Some _x -> [`Null]);
                                      ("promotion_code",
                                       match _x.promotion_code with
                                       | None -> [] | Some _x -> [`Null])]))
                                _x))
                        | T_778b1b5871 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("invoice_settings", match _x.invoice_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_tax_ids", match _x.account_tax_ids with
                            | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_26db1eb8b2 _x -> `String]);
                           ("issuer", match _x.issuer with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]])]]);
         ("items", match _x.items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_c9f5d02019) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("billing_thresholds",
                                     match _x.billing_thresholds with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_4cab4faa15 _x -> `Null
                                                   | T_a5165c2236 _x -> `Null]);
                                    ("clear_usage", match _x.clear_usage with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("deleted", match _x.deleted with
                                     | None -> [] | Some _x -> [`Boolean]);
                                    ("discounts", match _x.discounts with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_983bcaa8c4 _x -> `Null
                                                   | T_b1b2960bf3 _x -> `Null]);
                                    ("id", match _x.id with | None -> []
                                     | Some _x -> [`String]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | T_3b3c254e76 _x -> `Null
                                                   | T_7abedb8f6a _x -> `Null]);
                                    ("price", match _x.price with
                                     | None -> [] | Some _x -> [`String]);
                                    ("price_data", match _x.price_data with
                                     | None -> []
                                     | Some _x -> [`ObjectN
                                                     [("", [`Null]);
                                                      ("currency",
                                                       let _x = _x.currency in
                                                       [`Null]);
                                                      ("product",
                                                       let _x = _x.product in
                                                       [`Null]);
                                                      ("recurring",
                                                       let _x = _x.recurring in
                                                       [`Null]);
                                                      ("tax_behavior",
                                                       match _x.tax_behavior with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount",
                                                       match _x.unit_amount with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_amount_decimal",
                                                       match _x.unit_amount_decimal with
                                                       | None -> []
                                                       | Some _x -> [`Null])]]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("tax_rates", match _x.tax_rates with
                                     | None -> []
                                     | Some _x -> [match _x with
                                                   | StringList _x -> `Null
                                                   | T_b69a25701d _x -> `Null])]))
                              _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_9547106709 _x -> `ObjectN [("", [`String])]
                        | T_2143f162b5 _x -> `String]);
         ("off_session", match _x.off_session with | None -> []
          | Some _x -> [`Boolean]);
         ("on_behalf_of", match _x.on_behalf_of with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_f28298f997 _x -> `String]);
         ("pause_collection", match _x.pause_collection with | None -> []
          | Some _x -> [match _x with
                        | T_8acbf4562d _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("behavior", let _x = _x.behavior in [`String]);
                             ("resumes_at", match _x.resumes_at with
                              | None -> [] | Some _x -> [`Integer])]
                        | T_90ce4aaa4d _x -> `String]);
         ("payment_behavior", match _x.payment_behavior with | None -> []
          | Some _x -> [`String]);
         ("payment_settings", match _x.payment_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("payment_method_options",
                            match _x.payment_method_options with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("acss_debit",
                                              match _x.acss_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_20d8fad35b _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_931f6aa0a3 _x ->
                                                              `String]);
                                             ("bancontact",
                                              match _x.bancontact with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_6beb93352d _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("preferred_language",
                                                                  match _x.preferred_language with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_860eed20c7 _x ->
                                                              `String]);
                                             ("card", match _x.card with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_1f753721db _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("mandate_options",
                                                                  match _x.mandate_options with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("network",
                                                                  match _x.network with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("request_three_d_secure",
                                                                  match _x.request_three_d_secure with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_d33ec2388f _x ->
                                                              `String]);
                                             ("customer_balance",
                                              match _x.customer_balance with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_05d90ffe6c _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("bank_transfer",
                                                                  match _x.bank_transfer with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("funding_type",
                                                                  match _x.funding_type with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_3c2f889111 _x ->
                                                              `String]);
                                             ("konbini",
                                              match _x.konbini with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_4de439a46f _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_b307313c4f _x ->
                                                              `String]);
                                             ("sepa_debit",
                                              match _x.sepa_debit with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_b290cadd77 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_fa0e467ad5 _x ->
                                                              `String]);
                                             ("us_bank_account",
                                              match _x.us_bank_account with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_bd3f299856 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("financial_connections",
                                                                  match _x.financial_connections with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("verification_method",
                                                                  match _x.verification_method with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_40bf02e107 _x ->
                                                              `String])]]);
                           ("payment_method_types",
                            match _x.payment_method_types with | None -> []
                            | Some _x -> [match _x with
                                          | T_0d9008123e _x ->
                                            `Array
                                              ((List.map (fun (_x : t_650793d2b5) ->
                                                  `Singleton (`Null)) _x))
                                          | T_c6de3a9f9f _x -> `String]);
                           ("save_default_payment_method",
                            match _x.save_default_payment_method with
                            | None -> [] | Some _x -> [`String])]]);
         ("pending_invoice_item_interval",
          match _x.pending_invoice_item_interval with | None -> []
          | Some _x -> [match _x with
                        | T_ebf83b5b71 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("interval", let _x = _x.interval in [`String]);
                             ("interval_count", match _x.interval_count with
                              | None -> [] | Some _x -> [`Integer])]
                        | T_0880bda523 _x -> `String]);
         ("promotion_code", match _x.promotion_code with | None -> []
          | Some _x -> [`String]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("proration_date", match _x.proration_date with | None -> []
          | Some _x -> [`Integer]);
         ("transfer_data", match _x.transfer_data with | None -> []
          | Some _x -> [match _x with
                        | T_97f43f29ab _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("amount_percent", match _x.amount_percent with
                              | None -> [] | Some _x -> [`Number]);
                             ("destination", let _x = _x.destination in
                              [`String])]
                        | T_2bd26f54e1 _x -> `String]);
         ("trial_end", match _x.trial_end with | None -> []
          | Some _x -> [match _x with
                        | T_8874d8c0a5 _x -> `String
                        | Ptime_t _x -> `Integer]);
         ("trial_from_plan", match _x.trial_from_plan with | None -> []
          | Some _x -> [`Boolean]);
         ("trial_settings", match _x.trial_settings with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("end_behavior", let _x = _x.end_behavior in
                            [`ObjectN
                               [("", [`Any]);
                                ("missing_payment_method",
                                 let _x = _x.missing_payment_method in
                                 [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_702854dd00) ~op ~ctype _x
  
  and _mk_body_to_t_702854dd00 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_702854dd00) in _body_to
      ~kind:(`ObjectN
               [("add_invoice_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("discounts", [`Array [(`List (`Null))]]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("application_fee_percent", [`Number;
                                             `String]);
                ("automatic_tax",
                 [`ObjectN
                    [("", [`Any]); ("enabled", [`Boolean]);
                     ("liability",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("billing_cycle_anchor", [`String]);
                ("billing_thresholds",
                 [`ObjectN
                    [("", [`Any]); ("amount_gte", [`Integer]);
                     ("reset_billing_cycle_anchor", [`Boolean])];
                  `String]);
                ("cancel_at", [`Integer;
                               `String]);
                ("cancel_at_period_end", [`Boolean]);
                ("cancellation_details",
                 [`ObjectN
                    [("", [`Any]); ("comment", [`String;
                                                `String]);
                     ("feedback", [`String])]]);
                ("collection_method", [`String]); ("coupon", [`String]);
                ("days_until_due", [`Integer]);
                ("default_payment_method", [`String]);
                ("default_source", [`String;
                                    `String]);
                ("default_tax_rates", [`Array [(`List (`String))];
                                       `String]);
                ("description", [`String;
                                 `String]);
                ("discounts",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Null]); ("coupon", [`Null]);
                            ("discount", [`Null]);
                            ("promotion_code", [`Null])]))];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("invoice_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("account_tax_ids", [`Array [(`List (`Null))];
                                          `String]);
                     ("issuer",
                      [`ObjectN
                         [("", [`Any]); ("account", [`String]);
                          ("type", [`String])]])]]);
                ("items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]);
                            ("billing_thresholds", [`Null;
                                                    `Null]);
                            ("clear_usage", [`Boolean]);
                            ("deleted", [`Boolean]);
                            ("discounts", [`Null;
                                           `Null]);
                            ("id", [`String]); ("metadata", [`Null;
                                                             `Null]);
                            ("price", [`String]);
                            ("price_data",
                             [`ObjectN
                                [("", [`Null]); ("currency", [`Null]);
                                 ("product", [`Null]);
                                 ("recurring", [`Null]);
                                 ("tax_behavior", [`Null]);
                                 ("unit_amount", [`Null]);
                                 ("unit_amount_decimal", [`Null])]]);
                            ("quantity", [`Integer]);
                            ("tax_rates", [`Null;
                                           `Null])]))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("off_session", [`Boolean]);
                ("on_behalf_of", [`String;
                                  `String]);
                ("pause_collection",
                 [`ObjectN
                    [("", [`Any]); ("behavior", [`String]);
                     ("resumes_at", [`Integer])];
                  `String]);
                ("payment_behavior", [`String]);
                ("payment_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("payment_method_options",
                      [`ObjectN
                         [("", [`Any]);
                          ("acss_debit",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("verification_method", [`Null])];
                            `String]);
                          ("bancontact",
                           [`ObjectN
                              [("", [`Null]);
                               ("preferred_language", [`Null])];
                            `String]);
                          ("card",
                           [`ObjectN
                              [("", [`Null]); ("mandate_options", [`Null]);
                               ("network", [`Null]);
                               ("request_three_d_secure", [`Null])];
                            `String]);
                          ("customer_balance",
                           [`ObjectN
                              [("", [`Null]); ("bank_transfer", [`Null]);
                               ("funding_type", [`Null])];
                            `String]);
                          ("konbini", [`ObjectN [("", [`Null])];
                                       `String]);
                          ("sepa_debit", [`ObjectN [("", [`Null])];
                                          `String]);
                          ("us_bank_account",
                           [`ObjectN
                              [("", [`Null]);
                               ("financial_connections", [`Null]);
                               ("verification_method", [`Null])];
                            `String])]]);
                     ("payment_method_types",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("save_default_payment_method", [`String])]]);
                ("pending_invoice_item_interval",
                 [`ObjectN
                    [("", [`Any]); ("interval", [`String]);
                     ("interval_count", [`Integer])];
                  `String]);
                ("promotion_code", [`String]);
                ("proration_behavior", [`String]);
                ("proration_date", [`Integer]);
                ("transfer_data",
                 [`ObjectN
                    [("", [`Any]); ("amount_percent", [`Number]);
                     ("destination", [`String])];
                  `String]);
                ("trial_end", [`String;
                               `Integer]);
                ("trial_from_plan", [`Boolean]);
                ("trial_settings",
                 [`ObjectN
                    [("", [`Any]);
                     ("end_behavior",
                      [`ObjectN
                         [("", [`Any]);
                          ("missing_payment_method", [`String])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_2e99c002e9 _lvl ~op ~ctype (_x : t_2e99c002e9) =
    _body_of ~kind:(
      `ObjectN
        [("billing_cycle_anchor", match _x.billing_cycle_anchor with
          | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("proration_behavior", match _x.proration_behavior with | None -> []
          | Some _x -> [`String]);
         ("proration_date", match _x.proration_date with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_2e99c002e9) ~op ~ctype _x
  
  and _mk_body_to_t_2e99c002e9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2e99c002e9) in _body_to
      ~kind:(`ObjectN
               [("billing_cycle_anchor", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("proration_behavior", [`String]);
                ("proration_date", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_057722e648 _lvl ~op ~ctype (_x : t_057722e648) =
    _body_of ~kind:(
      `ObjectN
        [("currency", let _x = _x.currency in [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("customer_details", match _x.customer_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_e950dff2f6 _x ->
                                                              `String]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_67aca6d5a2 _x ->
                                                              `String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_9ae992b2ce _x ->
                                                              `String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_b2e077cd76 _x ->
                                                              `String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_49f80c04d8 _x ->
                                                              `String])]]);
                           ("address_source", match _x.address_source with
                            | None -> [] | Some _x -> [`String]);
                           ("ip_address", match _x.ip_address with
                            | None -> [] | Some _x -> [`String]);
                           ("tax_ids", match _x.tax_ids with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_c72b9cc519) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("type",
                                                       let _x = _x.type_ in
                                                       [`Null]);
                                                      ("value",
                                                       let _x = _x.value in
                                                       [`Null])])) _x))]);
                           ("taxability_override",
                            match _x.taxability_override with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("line_items", let _x = _x.line_items in
          [`Array
             ((List.map (fun (_x : t_60cc7e9489) ->
                 `Singleton
                   (`ObjectN
                      [("", [`Any]);
                       ("amount", let _x = _x.amount in [`Integer]);
                       ("product", match _x.product with | None -> []
                        | Some _x -> [`String]);
                       ("quantity", match _x.quantity with | None -> []
                        | Some _x -> [`Integer]);
                       ("reference", match _x.reference with | None -> []
                        | Some _x -> [`String]);
                       ("tax_behavior", match _x.tax_behavior with
                        | None -> [] | Some _x -> [`String]);
                       ("tax_code", match _x.tax_code with | None -> []
                        | Some _x -> [`String])])) _x))]);
         ("ship_from_details", match _x.ship_from_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", match _x.city with | None -> []
                                 | Some _x -> [match _x with
                                               | String_ _x -> `String
                                               | T_803783950a _x -> `String]);
                                ("country", let _x = _x.country in [`String]);
                                ("line1", match _x.line1 with | None -> []
                                 | Some _x -> [match _x with
                                               | String_ _x -> `String
                                               | T_cf59119106 _x -> `String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [match _x with
                                               | String_ _x -> `String
                                               | T_e8402686e1 _x -> `String]);
                                ("postal_code", match _x.postal_code with
                                 | None -> []
                                 | Some _x -> [match _x with
                                               | String_ _x -> `String
                                               | T_23de071a68 _x -> `String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [match _x with
                                               | String_ _x -> `String
                                               | T_82cbe9fff3 _x -> `String])]])]]);
         ("shipping_cost", match _x.shipping_cost with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", match _x.amount with | None -> []
                            | Some _x -> [`Integer]);
                           ("shipping_rate", match _x.shipping_rate with
                            | None -> [] | Some _x -> [`String]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("tax_code", match _x.tax_code with | None -> []
                            | Some _x -> [`String])]]);
         ("tax_date", match _x.tax_date with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_057722e648) ~op ~ctype _x
  
  and _mk_body_to_t_057722e648 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_057722e648) in _body_to
      ~kind:(`ObjectN
               [("currency", [`String]); ("customer", [`String]);
                ("customer_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String;
                                                  `String]);
                          ("country", [`String]);
                          ("line1", [`String;
                                     `String]);
                          ("line2", [`String;
                                     `String]);
                          ("postal_code", [`String;
                                           `String]);
                          ("state", [`String;
                                     `String])]]);
                     ("address_source", [`String]);
                     ("ip_address", [`String]);
                     ("tax_ids",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("type", [`Null]);
                                 ("value", [`Null])]))]]);
                     ("taxability_override", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("line_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("amount", [`Integer]);
                            ("product", [`String]); ("quantity", [`Integer]);
                            ("reference", [`String]);
                            ("tax_behavior", [`String]);
                            ("tax_code", [`String])]))]]);
                ("ship_from_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String;
                                                  `String]);
                          ("country", [`String]);
                          ("line1", [`String;
                                     `String]);
                          ("line2", [`String;
                                     `String]);
                          ("postal_code", [`String;
                                           `String]);
                          ("state", [`String;
                                     `String])]])]]);
                ("shipping_cost",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("shipping_rate", [`String]);
                     ("tax_behavior", [`String]); ("tax_code", [`String])]]);
                ("tax_date", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_99f7102425 _lvl ~op ~ctype (_x : t_99f7102425) =
    _body_of ~kind:(
      `ObjectN
        [("active_from", let _x = _x.active_from in
          [match _x with
           | T_aaee6d794c _x -> `String
           | Ptime_t _x -> `Integer]);
         ("country", let _x = _x.country in [`String]);
         ("country_options", let _x = _x.country_options in
          [`ObjectN
             [("", [`Any]);
              ("ae", match _x.ae with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("at", match _x.at with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("au", match _x.au with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("be", match _x.be with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("bg", match _x.bg with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("bh", match _x.bh with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ca", match _x.ca with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("province_standard",
                                 match _x.province_standard with | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("province",
                                                   let _x = _x.province in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ch", match _x.ch with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("cl", match _x.cl with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("co", match _x.co with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("cy", match _x.cy with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("cz", match _x.cz with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("de", match _x.de with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("dk", match _x.dk with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ee", match _x.ee with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("eg", match _x.eg with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("es", match _x.es with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("fi", match _x.fi with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("fr", match _x.fr with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("gb", match _x.gb with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ge", match _x.ge with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("gr", match _x.gr with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("hr", match _x.hr with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("hu", match _x.hu with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("id", match _x.id with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ie", match _x.ie with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("is", match _x.is with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("it", match _x.it with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("jp", match _x.jp with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ke", match _x.ke with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("kr", match _x.kr with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("kz", match _x.kz with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("lt", match _x.lt with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("lu", match _x.lu with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("lv", match _x.lv with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("mt", match _x.mt with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("mx", match _x.mx with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("my", match _x.my with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ng", match _x.ng with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("nl", match _x.nl with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("no", match _x.no with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("nz", match _x.nz with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("om", match _x.om with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("pl", match _x.pl with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("pt", match _x.pt with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("ro", match _x.ro with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("sa", match _x.sa with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("se", match _x.se with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("sg", match _x.sg with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("si", match _x.si with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("sk", match _x.sk with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("standard", match _x.standard with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("place_of_supply_scheme",
                                                   let _x = _x.place_of_supply_scheme in
                                                   [`String])]]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("th", match _x.th with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("tr", match _x.tr with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("us", match _x.us with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("local_amusement_tax",
                                 match _x.local_amusement_tax with
                                 | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("jurisdiction",
                                                   let _x = _x.jurisdiction in
                                                   [`String])]]);
                                ("local_lease_tax",
                                 match _x.local_lease_tax with | None -> []
                                 | Some _x -> [`ObjectN
                                                 [("", [`Any]);
                                                  ("jurisdiction",
                                                   let _x = _x.jurisdiction in
                                                   [`String])]]);
                                ("state", let _x = _x.state in [`String]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("vn", match _x.vn with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]]);
              ("za", match _x.za with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("type", let _x = _x.type_ in [`String])]])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_99f7102425) ~op ~ctype _x
  
  and _mk_body_to_t_99f7102425 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_99f7102425) in _body_to
      ~kind:(`ObjectN
               [("active_from", [`String;
                                 `Integer]);
                ("country", [`String]);
                ("country_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("ae", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("at",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("au", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("be",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("bg",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("bh", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("ca",
                      [`ObjectN
                         [("", [`Any]);
                          ("province_standard",
                           [`ObjectN [("", [`Any]); ("province", [`String])]]);
                          ("type", [`String])]]);
                     ("ch", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("cl", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("co", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("cy",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("cz",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("de",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("dk",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("ee",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("eg", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("es",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("fi",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("fr",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("gb", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("ge", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("gr",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("hr",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("hu",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("id", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("ie",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("is", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("it",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("jp", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("ke", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("kr", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("kz", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("lt",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("lu",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("lv",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("mt",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("mx", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("my", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("ng", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("nl",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("no", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("nz", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("om", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("pl",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("pt",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("ro",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("sa", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("se",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("sg", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("si",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("sk",
                      [`ObjectN
                         [("", [`Any]);
                          ("standard",
                           [`ObjectN
                              [("", [`Any]);
                               ("place_of_supply_scheme", [`String])]]);
                          ("type", [`String])]]);
                     ("th", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("tr", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("us",
                      [`ObjectN
                         [("", [`Any]);
                          ("local_amusement_tax",
                           [`ObjectN
                              [("", [`Any]); ("jurisdiction", [`String])]]);
                          ("local_lease_tax",
                           [`ObjectN
                              [("", [`Any]); ("jurisdiction", [`String])]]);
                          ("state", [`String]); ("type", [`String])]]);
                     ("vn", [`ObjectN [("", [`Any]); ("type", [`String])]]);
                     ("za", [`ObjectN [("", [`Any]); ("type", [`String])]])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_272ee8a03c _lvl ~op ~ctype (_x : t_272ee8a03c) =
    _body_of ~kind:(
      `ObjectN
        [("active_from", match _x.active_from with | None -> []
          | Some _x -> [match _x with
                        | T_92a1564d9b _x -> `String
                        | Ptime_t _x -> `Integer]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("expires_at", match _x.expires_at with | None -> []
          | Some _x -> [match _x with
                        | T_0a8befccbc _x -> `String
                        | Ptime_t _x -> `Integer
                        | T_1dace098dc _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_272ee8a03c) ~op ~ctype _x
  
  and _mk_body_to_t_272ee8a03c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_272ee8a03c) in _body_to
      ~kind:(`ObjectN
               [("active_from", [`String;
                                 `Integer]);
                ("expand", [`Array [(`List (`String))]]);
                ("expires_at", [`String;
                                `Integer;
                                `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2b617be94b _lvl ~op ~ctype (_x : t_2b617be94b) =
    _body_of ~kind:(
      `ObjectN
        [("defaults", match _x.defaults with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("tax_behavior", match _x.tax_behavior with
                            | None -> [] | Some _x -> [`String]);
                           ("tax_code", match _x.tax_code with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("head_office", match _x.head_office with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", match _x.city with | None -> []
                                 | Some _x -> [`String]);
                                ("country", match _x.country with
                                 | None -> [] | Some _x -> [`String]);
                                ("line1", match _x.line1 with | None -> []
                                 | Some _x -> [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", match _x.postal_code with
                                 | None -> [] | Some _x -> [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_2b617be94b) ~op ~ctype _x
  
  and _mk_body_to_t_2b617be94b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2b617be94b) in _body_to
      ~kind:(`ObjectN
               [("defaults",
                 [`ObjectN
                    [("", [`Any]); ("tax_behavior", [`String]);
                     ("tax_code", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("head_office",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_6bb178a0d2 _lvl ~op ~ctype (_x : t_6bb178a0d2) =
    _body_of ~kind:(
      `ObjectN
        [("calculation", let _x = _x.calculation in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("reference", let _x = _x.reference in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_6bb178a0d2) ~op ~ctype _x
  
  and _mk_body_to_t_6bb178a0d2 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6bb178a0d2) in _body_to
      ~kind:(`ObjectN
               [("calculation", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("reference", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_f7a6d3b9e7 _lvl ~op ~ctype (_x : t_f7a6d3b9e7) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("flat_amount", match _x.flat_amount with | None -> []
          | Some _x -> [`Integer]);
         ("line_items", match _x.line_items with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_7e5f0f91d1) ->
                              `Singleton
                                (`ObjectN
                                   [("", [`Any]);
                                    ("amount", let _x = _x.amount in
                                     [`Integer]);
                                    ("amount_tax", let _x = _x.amount_tax in
                                     [`Integer]);
                                    ("metadata", match _x.metadata with
                                     | None -> []
                                     | Some _x -> [`ObjectN [("", [`Null])]]);
                                    ("original_line_item",
                                     let _x = _x.original_line_item in
                                     [`String]);
                                    ("quantity", match _x.quantity with
                                     | None -> [] | Some _x -> [`Integer]);
                                    ("reference", let _x = _x.reference in
                                     [`String])])) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("mode", let _x = _x.mode in [`String]);
         ("original_transaction", let _x = _x.original_transaction in
          [`String]);
         ("reference", let _x = _x.reference in [`String]);
         ("shipping_cost", match _x.shipping_cost with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("amount", let _x = _x.amount in [`Integer]);
                           ("amount_tax", let _x = _x.amount_tax in
                            [`Integer])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_f7a6d3b9e7) ~op ~ctype _x
  
  and _mk_body_to_t_f7a6d3b9e7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_f7a6d3b9e7) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("flat_amount", [`Integer]);
                ("line_items",
                 [`Array
                    [(`List
                        (`ObjectN
                           [("", [`Any]); ("amount", [`Integer]);
                            ("amount_tax", [`Integer]);
                            ("metadata", [`ObjectN [("", [`Null])]]);
                            ("original_line_item", [`String]);
                            ("quantity", [`Integer]);
                            ("reference", [`String])]))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("mode", [`String]); ("original_transaction", [`String]);
                ("reference", [`String]);
                ("shipping_cost",
                 [`ObjectN
                    [("", [`Any]); ("amount", [`Integer]);
                     ("amount_tax", [`Integer])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_5da70e880a _lvl ~op ~ctype (_x : t_5da70e880a) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("owner", match _x.owner with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account", match _x.account with | None -> []
                            | Some _x -> [`String]);
                           ("customer", match _x.customer with | None -> []
                            | Some _x -> [`String]);
                           ("type", let _x = _x.type_ in [`String])]]);
         ("type", let _x = _x.type_ in [`String]);
         ("value", let _x = _x.value in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_5da70e880a) ~op ~ctype _x
  
  and _mk_body_to_t_5da70e880a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5da70e880a) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("owner",
                 [`ObjectN
                    [("", [`Any]); ("account", [`String]);
                     ("customer", [`String]); ("type", [`String])]]);
                ("type", [`String]); ("value", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_87901b9b08 _lvl ~op ~ctype (_x : t_87901b9b08) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("country", match _x.country with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("display_name", let _x = _x.display_name in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("inclusive", let _x = _x.inclusive in [`Boolean]);
         ("jurisdiction", match _x.jurisdiction with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("percentage", let _x = _x.percentage in [`Number]);
         ("state", match _x.state with | None -> [] | Some _x -> [`String]);
         ("tax_type", match _x.tax_type with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_87901b9b08) ~op ~ctype _x
  
  and _mk_body_to_t_87901b9b08 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_87901b9b08) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]); ("country", [`String]);
                ("description", [`String]); ("display_name", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("inclusive", [`Boolean]); ("jurisdiction", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("percentage", [`Number]); ("state", [`String]);
                ("tax_type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_d3af3d8376 _lvl ~op ~ctype (_x : t_d3af3d8376) =
    _body_of ~kind:(
      `ObjectN
        [("active", match _x.active with | None -> []
          | Some _x -> [`Boolean]);
         ("country", match _x.country with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("display_name", match _x.display_name with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("jurisdiction", match _x.jurisdiction with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_4dc0e5d558 _x -> `ObjectN [("", [`String])]
                        | T_02bbade19d _x -> `String]);
         ("state", match _x.state with | None -> [] | Some _x -> [`String]);
         ("tax_type", match _x.tax_type with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_d3af3d8376) ~op ~ctype _x
  
  and _mk_body_to_t_d3af3d8376 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d3af3d8376) in _body_to
      ~kind:(`ObjectN
               [("active", [`Boolean]); ("country", [`String]);
                ("description", [`String]); ("display_name", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("jurisdiction", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("state", [`String]); ("tax_type", [`String])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_d7c04a246f _lvl ~op ~ctype (_x : t_d7c04a246f) =
    _body_of ~kind:(
      `ObjectN
        [("bbpos_wisepos_e", match _x.bbpos_wisepos_e with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("splashscreen", match _x.splashscreen with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_7a7bb43b7d _x -> `String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("offline", match _x.offline with | None -> []
          | Some _x -> [match _x with
                        | T_cbcc8eea36 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("enabled", let _x = _x.enabled in [`Boolean])]
                        | T_7dba78e197 _x -> `String]);
         ("stripe_s700", match _x.stripe_s700 with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("splashscreen", match _x.splashscreen with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_c47e74efb0 _x -> `String])]]);
         ("tipping", match _x.tipping with | None -> []
          | Some _x -> [match _x with
                        | T_a1ed179a10 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("aud", match _x.aud with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("cad", match _x.cad with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("chf", match _x.chf with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("czk", match _x.czk with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("dkk", match _x.dkk with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("eur", match _x.eur with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("gbp", match _x.gbp with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("hkd", match _x.hkd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("myr", match _x.myr with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("nok", match _x.nok with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("nzd", match _x.nzd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("sek", match _x.sek with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("sgd", match _x.sgd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("usd", match _x.usd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]])]
                        | T_6f61f2c16b _x -> `String]);
         ("verifone_p400", match _x.verifone_p400 with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("splashscreen", match _x.splashscreen with
                            | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_f0b974d434 _x -> `String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_d7c04a246f) ~op ~ctype _x
  
  and _mk_body_to_t_d7c04a246f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d7c04a246f) in _body_to
      ~kind:(`ObjectN
               [("bbpos_wisepos_e",
                 [`ObjectN
                    [("", [`Any]); ("splashscreen", [`String;
                                                     `String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("name", [`String]);
                ("offline",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])];
                  `String]);
                ("stripe_s700",
                 [`ObjectN
                    [("", [`Any]); ("splashscreen", [`String;
                                                     `String])]]);
                ("tipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("aud",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("cad",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("chf",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("czk",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("dkk",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("eur",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("gbp",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("hkd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("myr",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("nok",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("nzd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("sek",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("sgd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("usd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]])];
                  `String]);
                ("verifone_p400",
                 [`ObjectN
                    [("", [`Any]); ("splashscreen", [`String;
                                                     `String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_8257cc3b6e _lvl ~op ~ctype (_x : t_8257cc3b6e) =
    _body_of ~kind:(
      `ObjectN
        [("bbpos_wisepos_e", match _x.bbpos_wisepos_e with | None -> []
          | Some _x -> [match _x with
                        | T_7e05fa1fdc _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("splashscreen", match _x.splashscreen with
                              | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_65dff2d2f1 _x -> `String])]
                        | T_7e1beb5c58 _x -> `String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String]);
         ("offline", match _x.offline with | None -> []
          | Some _x -> [match _x with
                        | T_3911c1372d _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("enabled", let _x = _x.enabled in [`Boolean])]
                        | T_e9fc3dcdca _x -> `String]);
         ("stripe_s700", match _x.stripe_s700 with | None -> []
          | Some _x -> [match _x with
                        | T_6605fa7ae9 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("splashscreen", match _x.splashscreen with
                              | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_ff91973046 _x -> `String])]
                        | T_406fac0e59 _x -> `String]);
         ("tipping", match _x.tipping with | None -> []
          | Some _x -> [match _x with
                        | T_64a86f8b98 _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("aud", match _x.aud with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("cad", match _x.cad with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("chf", match _x.chf with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("czk", match _x.czk with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("dkk", match _x.dkk with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("eur", match _x.eur with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("gbp", match _x.gbp with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("hkd", match _x.hkd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("myr", match _x.myr with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("nok", match _x.nok with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("nzd", match _x.nzd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("sek", match _x.sek with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("sgd", match _x.sgd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]]);
                             ("usd", match _x.usd with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("fixed_amounts",
                                                match _x.fixed_amounts with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("percentages",
                                                match _x.percentages with
                                                | None -> []
                                                | Some _x -> [`Array
                                                                ((List.map (fun (_x : int) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))]);
                                               ("smart_tip_threshold",
                                                match _x.smart_tip_threshold with
                                                | None -> []
                                                | Some _x -> [`Integer])]])]
                        | T_385130a21f _x -> `String]);
         ("verifone_p400", match _x.verifone_p400 with | None -> []
          | Some _x -> [match _x with
                        | T_87f185d7ba _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("splashscreen", match _x.splashscreen with
                              | None -> []
                              | Some _x -> [match _x with
                                            | String_ _x -> `String
                                            | T_1220d0d9e7 _x -> `String])]
                        | T_4c0eca2f37 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_8257cc3b6e) ~op ~ctype _x
  
  and _mk_body_to_t_8257cc3b6e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_8257cc3b6e) in _body_to
      ~kind:(`ObjectN
               [("bbpos_wisepos_e",
                 [`ObjectN
                    [("", [`Any]); ("splashscreen", [`String;
                                                     `String])];
                  `String]);
                ("expand", [`Array [(`List (`String))]]);
                ("name", [`String]);
                ("offline",
                 [`ObjectN [("", [`Any]); ("enabled", [`Boolean])];
                  `String]);
                ("stripe_s700",
                 [`ObjectN
                    [("", [`Any]); ("splashscreen", [`String;
                                                     `String])];
                  `String]);
                ("tipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("aud",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("cad",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("chf",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("czk",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("dkk",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("eur",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("gbp",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("hkd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("myr",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("nok",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("nzd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("sek",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("sgd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]]);
                     ("usd",
                      [`ObjectN
                         [("", [`Any]);
                          ("fixed_amounts", [`Array [(`List (`Null))]]);
                          ("percentages", [`Array [(`List (`Null))]]);
                          ("smart_tip_threshold", [`Integer])]])];
                  `String]);
                ("verifone_p400",
                 [`ObjectN
                    [("", [`Any]); ("splashscreen", [`String;
                                                     `String])];
                  `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_821e6a1748 _lvl ~op ~ctype (_x : t_821e6a1748) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("location", match _x.location with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_821e6a1748) ~op ~ctype _x
  
  and _mk_body_to_t_821e6a1748 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_821e6a1748) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("location", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_7a449b20b9 _lvl ~op ~ctype (_x : t_7a449b20b9) =
    _body_of ~kind:(
      `ObjectN
        [("address", let _x = _x.address in
          [`ObjectN
             [("", [`Any]);
              ("city", match _x.city with | None -> []
               | Some _x -> [`String]);
              ("country", let _x = _x.country in [`String]);
              ("line1", match _x.line1 with | None -> []
               | Some _x -> [`String]);
              ("line2", match _x.line2 with | None -> []
               | Some _x -> [`String]);
              ("postal_code", match _x.postal_code with | None -> []
               | Some _x -> [`String]);
              ("state", match _x.state with | None -> []
               | Some _x -> [`String])]]);
         ("configuration_overrides", match _x.configuration_overrides with
          | None -> [] | Some _x -> [`String]);
         ("display_name", let _x = _x.display_name in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_ac31428123 _x -> `ObjectN [("", [`String])]
                        | T_c8afa63481 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_7a449b20b9) ~op ~ctype _x
  
  and _mk_body_to_t_7a449b20b9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_7a449b20b9) in _body_to
      ~kind:(`ObjectN
               [("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("configuration_overrides", [`String]);
                ("display_name", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_3f7d65cb4e _lvl ~op ~ctype (_x : t_3f7d65cb4e) =
    _body_of ~kind:(
      `ObjectN
        [("address", match _x.address with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("line1", match _x.line1 with | None -> []
                            | Some _x -> [`String]);
                           ("line2", match _x.line2 with | None -> []
                            | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String])]]);
         ("configuration_overrides", match _x.configuration_overrides with
          | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_f4905173b3 _x -> `String]);
         ("display_name", match _x.display_name with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_e6d15ed180 _x -> `ObjectN [("", [`String])]
                        | T_e39d124d25 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_3f7d65cb4e) ~op ~ctype _x
  
  and _mk_body_to_t_3f7d65cb4e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3f7d65cb4e) in _body_to
      ~kind:(`ObjectN
               [("address",
                 [`ObjectN
                    [("", [`Any]); ("city", [`String]);
                     ("country", [`String]); ("line1", [`String]);
                     ("line2", [`String]); ("postal_code", [`String]);
                     ("state", [`String])]]);
                ("configuration_overrides", [`String;
                                             `String]);
                ("display_name", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0f4b675519 _lvl ~op ~ctype (_x : t_0f4b675519) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("label", match _x.label with | None -> [] | Some _x -> [`String]);
         ("location", match _x.location with | None -> []
          | Some _x -> [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_c4c829aa36 _x -> `ObjectN [("", [`String])]
                        | T_c6daadcdff _x -> `String]);
         ("registration_code", let _x = _x.registration_code in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_0f4b675519) ~op ~ctype _x
  
  and _mk_body_to_t_0f4b675519 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0f4b675519) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("label", [`String]); ("location", [`String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("registration_code", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_7551937833 _lvl ~op ~ctype (_x : t_7551937833) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_7551937833) ~op ~ctype _x
  
  and _mk_body_to_t_7551937833 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_7551937833) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_b61c36c8b7 _lvl ~op ~ctype (_x : t_b61c36c8b7) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("label", match _x.label with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_f2519c4c17 _x -> `String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a707c1e449 _x -> `ObjectN [("", [`String])]
                        | T_6a24db37d2 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_b61c36c8b7) ~op ~ctype _x
  
  and _mk_body_to_t_b61c36c8b7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b61c36c8b7) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("label", [`String;
                           `String]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_d85b111edd _lvl ~op ~ctype (_x : t_d85b111edd) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("payment_intent", let _x = _x.payment_intent in [`String]);
         ("process_config", match _x.process_config with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enable_customer_cancellation",
                            match _x.enable_customer_cancellation with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("skip_tipping", match _x.skip_tipping with
                            | None -> [] | Some _x -> [`Boolean]);
                           ("tipping", match _x.tipping with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("amount_eligible",
                                              match _x.amount_eligible with
                                              | None -> []
                                              | Some _x -> [`Integer])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_d85b111edd) ~op ~ctype _x
  
  and _mk_body_to_t_d85b111edd _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d85b111edd) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("payment_intent", [`String]);
                ("process_config",
                 [`ObjectN
                    [("", [`Any]);
                     ("enable_customer_cancellation", [`Boolean]);
                     ("skip_tipping", [`Boolean]);
                     ("tipping",
                      [`ObjectN
                         [("", [`Any]); ("amount_eligible", [`Integer])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_814a9b52c9 _lvl ~op ~ctype (_x : t_814a9b52c9) =
    _body_of ~kind:(
      `ObjectN
        [("customer_consent_collected",
          let _x = _x.customer_consent_collected in [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("process_config", match _x.process_config with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enable_customer_cancellation",
                            match _x.enable_customer_cancellation with
                            | None -> [] | Some _x -> [`Boolean])]]);
         ("setup_intent", let _x = _x.setup_intent in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_814a9b52c9) ~op ~ctype _x
  
  and _mk_body_to_t_814a9b52c9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_814a9b52c9) in _body_to
      ~kind:(`ObjectN
               [("customer_consent_collected", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("process_config",
                 [`ObjectN
                    [("", [`Any]);
                     ("enable_customer_cancellation", [`Boolean])]]);
                ("setup_intent", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_e7b5357404 _lvl ~op ~ctype (_x : t_e7b5357404) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("charge", match _x.charge with | None -> [] | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("payment_intent", match _x.payment_intent with | None -> []
          | Some _x -> [`String]);
         ("refund_application_fee", match _x.refund_application_fee with
          | None -> [] | Some _x -> [`Boolean]);
         ("refund_payment_config", match _x.refund_payment_config with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("enable_customer_cancellation",
                            match _x.enable_customer_cancellation with
                            | None -> [] | Some _x -> [`Boolean])]]);
         ("reverse_transfer", match _x.reverse_transfer with | None -> []
          | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_e7b5357404) ~op ~ctype _x
  
  and _mk_body_to_t_e7b5357404 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e7b5357404) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("charge", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("payment_intent", [`String]);
                ("refund_application_fee", [`Boolean]);
                ("refund_payment_config",
                 [`ObjectN
                    [("", [`Any]);
                     ("enable_customer_cancellation", [`Boolean])]]);
                ("reverse_transfer", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_3ad6222234 _lvl ~op ~ctype (_x : t_3ad6222234) =
    _body_of ~kind:(
      `ObjectN
        [("cart", match _x.cart with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("currency", let _x = _x.currency in [`String]);
                           ("line_items", let _x = _x.line_items in
                            [`Array
                               ((List.map (fun (_x : t_4821ac6051) ->
                                   `Singleton
                                     (`ObjectN
                                        [("", [`Null]);
                                         ("amount", let _x = _x.amount in
                                          [`Null]);
                                         ("description",
                                          let _x = _x.description in [`Null]);
                                         ("quantity", let _x = _x.quantity in
                                          [`Null])])) _x))]);
                           ("tax", match _x.tax with | None -> []
                            | Some _x -> [`Integer]);
                           ("total", let _x = _x.total in [`Integer])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("type", let _x = _x.type_ in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_3ad6222234) ~op ~ctype _x
  
  and _mk_body_to_t_3ad6222234 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_3ad6222234) in _body_to
      ~kind:(`ObjectN
               [("cart",
                 [`ObjectN
                    [("", [`Any]); ("currency", [`String]);
                     ("line_items",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("amount", [`Null]);
                                 ("description", [`Null]);
                                 ("quantity", [`Null])]))]]);
                     ("tax", [`Integer]); ("total", [`Integer])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_54156d3480 _lvl ~op ~ctype (_x : t_54156d3480) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("payment_method", match _x.payment_method with | None -> []
          | Some _x -> [`String]);
         ("payment_method_data", match _x.payment_method_data with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acss_debit", match _x.acss_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("institution_number",
                                              let _x = _x.institution_number in
                                              [`String]);
                                             ("transit_number",
                                              let _x = _x.transit_number in
                                              [`String])]]);
                           ("affirm", match _x.affirm with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("afterpay_clearpay",
                            match _x.afterpay_clearpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("alipay", match _x.alipay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("allow_redisplay", match _x.allow_redisplay with
                            | None -> [] | Some _x -> [`String]);
                           ("amazon_pay", match _x.amazon_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("au_becs_debit", match _x.au_becs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              let _x = _x.account_number in
                                              [`String]);
                                             ("bsb_number",
                                              let _x = _x.bsb_number in
                                              [`String])]]);
                           ("bacs_debit", match _x.bacs_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("sort_code",
                                              match _x.sort_code with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("bancontact", match _x.bancontact with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_956885e6e8 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_887d07deb4 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_866e9a42ec _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_43f950bb04 _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_13f6f3f7e8 _x ->
                                                              `String])]]);
                           ("blik", match _x.blik with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("boleto", match _x.boleto with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("tax_id", let _x = _x.tax_id in
                                              [`String])]]);
                           ("cashapp", match _x.cashapp with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("customer_balance",
                            match _x.customer_balance with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("eps", match _x.eps with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fpx", match _x.fpx with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", let _x = _x.bank in
                                              [`String])]]);
                           ("giropay", match _x.giropay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("grabpay", match _x.grabpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("ideal", match _x.ideal with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("interac_present", match _x.interac_present with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("klarna", match _x.klarna with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("day",
                                                                let _x = _x.day in
                                                                [`Integer]);
                                                               ("month",
                                                                let _x = _x.month in
                                                                [`Integer]);
                                                               ("year",
                                                                let _x = _x.year in
                                                                [`Integer])]])]]);
                           ("konbini", match _x.konbini with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("link", match _x.link with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("mobilepay", match _x.mobilepay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("oxxo", match _x.oxxo with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("p24", match _x.p24 with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("bank", match _x.bank with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("paynow", match _x.paynow with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("paypal", match _x.paypal with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("pix", match _x.pix with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("promptpay", match _x.promptpay with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("radar_options", match _x.radar_options with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("session",
                                              match _x.session with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("revolut_pay", match _x.revolut_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("sepa_debit", match _x.sepa_debit with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("iban", let _x = _x.iban in
                                              [`String])]]);
                           ("sofort", match _x.sofort with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("country",
                                              let _x = _x.country in
                                              [`String])]]);
                           ("swish", match _x.swish with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("wechat_pay", match _x.wechat_pay with
                            | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]]);
                           ("zip", match _x.zip with | None -> []
                            | Some _x -> [`ObjectN [("", [`Any])]])]]);
         ("return_url", match _x.return_url with | None -> []
          | Some _x -> [`String]);
         ("setup_future_usage", match _x.setup_future_usage with | None -> []
          | Some _x -> [`String]);
         ("shipping", match _x.shipping with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address", let _x = _x.address in
                            [`ObjectN
                               [("", [`Any]);
                                ("city", match _x.city with | None -> []
                                 | Some _x -> [`String]);
                                ("country", match _x.country with
                                 | None -> [] | Some _x -> [`String]);
                                ("line1", match _x.line1 with | None -> []
                                 | Some _x -> [`String]);
                                ("line2", match _x.line2 with | None -> []
                                 | Some _x -> [`String]);
                                ("postal_code", match _x.postal_code with
                                 | None -> [] | Some _x -> [`String]);
                                ("state", match _x.state with | None -> []
                                 | Some _x -> [`String])]]);
                           ("name", let _x = _x.name in [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [match _x with
                                          | String_ _x -> `String
                                          | T_fb7e1dc668 _x -> `String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_54156d3480) ~op ~ctype _x
  
  and _mk_body_to_t_54156d3480 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_54156d3480) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("payment_method", [`String]);
                ("payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("acss_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("institution_number", [`String]);
                          ("transit_number", [`String])]]);
                     ("affirm", [`ObjectN [("", [`Any])]]);
                     ("afterpay_clearpay", [`ObjectN [("", [`Any])]]);
                     ("alipay", [`ObjectN [("", [`Any])]]);
                     ("allow_redisplay", [`String]);
                     ("amazon_pay", [`ObjectN [("", [`Any])]]);
                     ("au_becs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("bsb_number", [`String])]]);
                     ("bacs_debit",
                      [`ObjectN
                         [("", [`Any]); ("account_number", [`String]);
                          ("sort_code", [`String])]]);
                     ("bancontact", [`ObjectN [("", [`Any])]]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("blik", [`ObjectN [("", [`Any])]]);
                     ("boleto",
                      [`ObjectN [("", [`Any]); ("tax_id", [`String])]]);
                     ("cashapp", [`ObjectN [("", [`Any])]]);
                     ("customer_balance", [`ObjectN [("", [`Any])]]);
                     ("eps", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("fpx", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("giropay", [`ObjectN [("", [`Any])]]);
                     ("grabpay", [`ObjectN [("", [`Any])]]);
                     ("ideal",
                      [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("interac_present", [`ObjectN [("", [`Any])]]);
                     ("klarna",
                      [`ObjectN
                         [("", [`Any]);
                          ("dob",
                           [`ObjectN
                              [("", [`Any]); ("day", [`Integer]);
                               ("month", [`Integer]); ("year", [`Integer])]])]]);
                     ("konbini", [`ObjectN [("", [`Any])]]);
                     ("link", [`ObjectN [("", [`Any])]]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("mobilepay", [`ObjectN [("", [`Any])]]);
                     ("oxxo", [`ObjectN [("", [`Any])]]);
                     ("p24", [`ObjectN [("", [`Any]); ("bank", [`String])]]);
                     ("paynow", [`ObjectN [("", [`Any])]]);
                     ("paypal", [`ObjectN [("", [`Any])]]);
                     ("pix", [`ObjectN [("", [`Any])]]);
                     ("promptpay", [`ObjectN [("", [`Any])]]);
                     ("radar_options",
                      [`ObjectN [("", [`Any]); ("session", [`String])]]);
                     ("revolut_pay", [`ObjectN [("", [`Any])]]);
                     ("sepa_debit",
                      [`ObjectN [("", [`Any]); ("iban", [`String])]]);
                     ("sofort",
                      [`ObjectN [("", [`Any]); ("country", [`String])]]);
                     ("swish", [`ObjectN [("", [`Any])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]]);
                     ("wechat_pay", [`ObjectN [("", [`Any])]]);
                     ("zip", [`ObjectN [("", [`Any])]])]]);
                ("return_url", [`String]); ("setup_future_usage", [`String]);
                ("shipping",
                 [`ObjectN
                    [("", [`Any]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("name", [`String]); ("phone", [`String;
                                                     `String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_565c6ef2d9 _lvl ~op ~ctype (_x : t_565c6ef2d9) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("reference", match _x.reference with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_565c6ef2d9) ~op ~ctype _x
  
  and _mk_body_to_t_565c6ef2d9 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_565c6ef2d9) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("reference", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b12f762f7a _lvl ~op ~ctype (_x : t_b12f762f7a) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("amount_details", match _x.amount_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("atm_fee", match _x.atm_fee with | None -> []
                            | Some _x -> [`Integer]);
                           ("cashback_amount", match _x.cashback_amount with
                            | None -> [] | Some _x -> [`Integer])]]);
         ("authorization_method", match _x.authorization_method with
          | None -> [] | Some _x -> [`String]);
         ("card", let _x = _x.card in [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("is_amount_controllable", match _x.is_amount_controllable with
          | None -> [] | Some _x -> [`Boolean]);
         ("merchant_data", match _x.merchant_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("category", match _x.category with | None -> []
                            | Some _x -> [`String]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("network_id", match _x.network_id with
                            | None -> [] | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("terminal_id", match _x.terminal_id with
                            | None -> [] | Some _x -> [`String]);
                           ("url", match _x.url with | None -> []
                            | Some _x -> [`String])]]);
         ("network_data", match _x.network_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("acquiring_institution_id",
                            match _x.acquiring_institution_id with
                            | None -> [] | Some _x -> [`String])]]);
         ("verification_data", match _x.verification_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("address_line1_check",
                            match _x.address_line1_check with | None -> []
                            | Some _x -> [`String]);
                           ("address_postal_code_check",
                            match _x.address_postal_code_check with
                            | None -> [] | Some _x -> [`String]);
                           ("authentication_exemption",
                            match _x.authentication_exemption with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("claimed_by",
                                              let _x = _x.claimed_by in
                                              [`String]);
                                             ("type", let _x = _x.type_ in
                                              [`String])]]);
                           ("cvc_check", match _x.cvc_check with | None -> []
                            | Some _x -> [`String]);
                           ("expiry_check", match _x.expiry_check with
                            | None -> [] | Some _x -> [`String]);
                           ("three_d_secure", match _x.three_d_secure with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("result", let _x = _x.result in
                                              [`String])]])]]);
         ("wallet", match _x.wallet with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_b12f762f7a) ~op ~ctype _x
  
  and _mk_body_to_t_b12f762f7a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b12f762f7a) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]);
                ("amount_details",
                 [`ObjectN
                    [("", [`Any]); ("atm_fee", [`Integer]);
                     ("cashback_amount", [`Integer])]]);
                ("authorization_method", [`String]); ("card", [`String]);
                ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("is_amount_controllable", [`Boolean]);
                ("merchant_data",
                 [`ObjectN
                    [("", [`Any]); ("category", [`String]);
                     ("city", [`String]); ("country", [`String]);
                     ("name", [`String]); ("network_id", [`String]);
                     ("postal_code", [`String]); ("state", [`String]);
                     ("terminal_id", [`String]); ("url", [`String])]]);
                ("network_data",
                 [`ObjectN
                    [("", [`Any]); ("acquiring_institution_id", [`String])]]);
                ("verification_data",
                 [`ObjectN
                    [("", [`Any]); ("address_line1_check", [`String]);
                     ("address_postal_code_check", [`String]);
                     ("authentication_exemption",
                      [`ObjectN
                         [("", [`Any]); ("claimed_by", [`String]);
                          ("type", [`String])]]);
                     ("cvc_check", [`String]); ("expiry_check", [`String]);
                     ("three_d_secure",
                      [`ObjectN [("", [`Any]); ("result", [`String])]])]]);
                ("wallet", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_ee27bd615e _lvl ~op ~ctype (_x : t_ee27bd615e) =
    _body_of ~kind:(
      `ObjectN
        [("capture_amount", match _x.capture_amount with | None -> []
          | Some _x -> [`Integer]);
         ("close_authorization", match _x.close_authorization with
          | None -> [] | Some _x -> [`Boolean]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("purchase_details", match _x.purchase_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("flight", match _x.flight with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("departure_at",
                                              match _x.departure_at with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("passenger_name",
                                              match _x.passenger_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("refundable",
                                              match _x.refundable with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("segments",
                                              match _x.segments with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_4f24a58258) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))]);
                                             ("travel_agency",
                                              match _x.travel_agency with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fuel", match _x.fuel with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("type", match _x.type_ with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("unit", match _x.unit with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("unit_cost_decimal",
                                              match _x.unit_cost_decimal with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("volume_decimal",
                                              match _x.volume_decimal with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("lodging", match _x.lodging with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("check_in_at",
                                              match _x.check_in_at with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("nights", match _x.nights with
                                              | None -> []
                                              | Some _x -> [`Integer])]]);
                           ("receipt", match _x.receipt with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_dcba69412c) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("description",
                                                       match _x.description with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("quantity",
                                                       match _x.quantity with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("total",
                                                       match _x.total with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_cost",
                                                       match _x.unit_cost with
                                                       | None -> []
                                                       | Some _x -> [`Null])]))
                                                _x))]);
                           ("reference", match _x.reference with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_ee27bd615e) ~op ~ctype _x
  
  and _mk_body_to_t_ee27bd615e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_ee27bd615e) in _body_to
      ~kind:(`ObjectN
               [("capture_amount", [`Integer]);
                ("close_authorization", [`Boolean]);
                ("expand", [`Array [(`List (`String))]]);
                ("purchase_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("flight",
                      [`ObjectN
                         [("", [`Any]); ("departure_at", [`Integer]);
                          ("passenger_name", [`String]);
                          ("refundable", [`Boolean]);
                          ("segments", [`Array [(`List (`Null))]]);
                          ("travel_agency", [`String])]]);
                     ("fuel",
                      [`ObjectN
                         [("", [`Any]); ("type", [`String]);
                          ("unit", [`String]);
                          ("unit_cost_decimal", [`String]);
                          ("volume_decimal", [`String])]]);
                     ("lodging",
                      [`ObjectN
                         [("", [`Any]); ("check_in_at", [`Integer]);
                          ("nights", [`Integer])]]);
                     ("receipt",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("description", [`Null]);
                                 ("quantity", [`Null]); ("total", [`Null]);
                                 ("unit_cost", [`Null])]))]]);
                     ("reference", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c1edcd7596 _lvl ~op ~ctype (_x : t_c1edcd7596) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_c1edcd7596) ~op ~ctype _x
  
  and _mk_body_to_t_c1edcd7596 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c1edcd7596) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_ebc7fa3111 _lvl ~op ~ctype (_x : t_ebc7fa3111) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("increment_amount", let _x = _x.increment_amount in [`Integer]);
         ("is_amount_controllable", match _x.is_amount_controllable with
          | None -> [] | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_ebc7fa3111) ~op ~ctype _x
  
  and _mk_body_to_t_ebc7fa3111 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_ebc7fa3111) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("increment_amount", [`Integer]);
                ("is_amount_controllable", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_2fbc0cc586 _lvl ~op ~ctype (_x : t_2fbc0cc586) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("reverse_amount", match _x.reverse_amount with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_2fbc0cc586) ~op ~ctype _x
  
  and _mk_body_to_t_2fbc0cc586 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2fbc0cc586) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("reverse_amount", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c9afc8c3c7 _lvl ~op ~ctype (_x : t_c9afc8c3c7) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_c9afc8c3c7) ~op ~ctype _x
  
  and _mk_body_to_t_c9afc8c3c7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c9afc8c3c7) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_2c11f5c04d _lvl ~op ~ctype (_x : t_2c11f5c04d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_2c11f5c04d) ~op ~ctype _x
  
  and _mk_body_to_t_2c11f5c04d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2c11f5c04d) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_52f26f98a0 _lvl ~op ~ctype (_x : t_52f26f98a0) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_52f26f98a0) ~op ~ctype _x
  
  and _mk_body_to_t_52f26f98a0 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_52f26f98a0) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_d4524fbbca _lvl ~op ~ctype (_x : t_d4524fbbca) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_d4524fbbca) ~op ~ctype _x
  
  and _mk_body_to_t_d4524fbbca _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d4524fbbca) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_54a7a3b78b _lvl ~op ~ctype (_x : t_54a7a3b78b) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_54a7a3b78b) ~op ~ctype _x
  
  and _mk_body_to_t_54a7a3b78b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_54a7a3b78b) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_8018435bce _lvl ~op ~ctype (_x : t_8018435bce) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_8018435bce) ~op ~ctype _x
  
  and _mk_body_to_t_8018435bce _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_8018435bce) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_5f128bf227 _lvl ~op ~ctype (_x : t_5f128bf227) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("rejection_reasons", let _x = _x.rejection_reasons in
          [`ObjectN
             [("", [`Any]);
              ("card_logo", match _x.card_logo with | None -> []
               | Some _x -> [`Array
                               ((List.map (fun (_x : t_ee72e324a4) ->
                                   `Singleton (`String)) _x))]);
              ("carrier_text", match _x.carrier_text with | None -> []
               | Some _x -> [`Array
                               ((List.map (fun (_x : t_8f78774803) ->
                                   `Singleton (`String)) _x))])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_5f128bf227) ~op ~ctype _x
  
  and _mk_body_to_t_5f128bf227 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5f128bf227) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("rejection_reasons",
                 [`ObjectN
                    [("", [`Any]);
                     ("card_logo", [`Array [(`List (`String))]]);
                     ("carrier_text", [`Array [(`List (`String))]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_bf072f4eca _lvl ~op ~ctype (_x : t_bf072f4eca) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("card", let _x = _x.card in [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("merchant_data", match _x.merchant_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("category", match _x.category with | None -> []
                            | Some _x -> [`String]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("network_id", match _x.network_id with
                            | None -> [] | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("terminal_id", match _x.terminal_id with
                            | None -> [] | Some _x -> [`String]);
                           ("url", match _x.url with | None -> []
                            | Some _x -> [`String])]]);
         ("purchase_details", match _x.purchase_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("flight", match _x.flight with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("departure_at",
                                              match _x.departure_at with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("passenger_name",
                                              match _x.passenger_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("refundable",
                                              match _x.refundable with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("segments",
                                              match _x.segments with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_04d42fce6c) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))]);
                                             ("travel_agency",
                                              match _x.travel_agency with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fuel", match _x.fuel with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("type", match _x.type_ with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("unit", match _x.unit with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("unit_cost_decimal",
                                              match _x.unit_cost_decimal with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("volume_decimal",
                                              match _x.volume_decimal with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("lodging", match _x.lodging with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("check_in_at",
                                              match _x.check_in_at with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("nights", match _x.nights with
                                              | None -> []
                                              | Some _x -> [`Integer])]]);
                           ("receipt", match _x.receipt with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_9972d755e9) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("description",
                                                       match _x.description with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("quantity",
                                                       match _x.quantity with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("total",
                                                       match _x.total with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_cost",
                                                       match _x.unit_cost with
                                                       | None -> []
                                                       | Some _x -> [`Null])]))
                                                _x))]);
                           ("reference", match _x.reference with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_bf072f4eca) ~op ~ctype _x
  
  and _mk_body_to_t_bf072f4eca _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_bf072f4eca) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("card", [`String]);
                ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("merchant_data",
                 [`ObjectN
                    [("", [`Any]); ("category", [`String]);
                     ("city", [`String]); ("country", [`String]);
                     ("name", [`String]); ("network_id", [`String]);
                     ("postal_code", [`String]); ("state", [`String]);
                     ("terminal_id", [`String]); ("url", [`String])]]);
                ("purchase_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("flight",
                      [`ObjectN
                         [("", [`Any]); ("departure_at", [`Integer]);
                          ("passenger_name", [`String]);
                          ("refundable", [`Boolean]);
                          ("segments", [`Array [(`List (`Null))]]);
                          ("travel_agency", [`String])]]);
                     ("fuel",
                      [`ObjectN
                         [("", [`Any]); ("type", [`String]);
                          ("unit", [`String]);
                          ("unit_cost_decimal", [`String]);
                          ("volume_decimal", [`String])]]);
                     ("lodging",
                      [`ObjectN
                         [("", [`Any]); ("check_in_at", [`Integer]);
                          ("nights", [`Integer])]]);
                     ("receipt",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("description", [`Null]);
                                 ("quantity", [`Null]); ("total", [`Null]);
                                 ("unit_cost", [`Null])]))]]);
                     ("reference", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_964deea341 _lvl ~op ~ctype (_x : t_964deea341) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("card", let _x = _x.card in [`String]);
         ("currency", match _x.currency with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("merchant_data", match _x.merchant_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("category", match _x.category with | None -> []
                            | Some _x -> [`String]);
                           ("city", match _x.city with | None -> []
                            | Some _x -> [`String]);
                           ("country", match _x.country with | None -> []
                            | Some _x -> [`String]);
                           ("name", match _x.name with | None -> []
                            | Some _x -> [`String]);
                           ("network_id", match _x.network_id with
                            | None -> [] | Some _x -> [`String]);
                           ("postal_code", match _x.postal_code with
                            | None -> [] | Some _x -> [`String]);
                           ("state", match _x.state with | None -> []
                            | Some _x -> [`String]);
                           ("terminal_id", match _x.terminal_id with
                            | None -> [] | Some _x -> [`String]);
                           ("url", match _x.url with | None -> []
                            | Some _x -> [`String])]]);
         ("purchase_details", match _x.purchase_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("flight", match _x.flight with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("departure_at",
                                              match _x.departure_at with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("passenger_name",
                                              match _x.passenger_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("refundable",
                                              match _x.refundable with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("segments",
                                              match _x.segments with
                                              | None -> []
                                              | Some _x -> [`Array
                                                              ((List.map (fun (_x : t_fa6ad09820) ->
                                                                  `Singleton
                                                                    (`Null))
                                                                  _x))]);
                                             ("travel_agency",
                                              match _x.travel_agency with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("fuel", match _x.fuel with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("type", match _x.type_ with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("unit", match _x.unit with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("unit_cost_decimal",
                                              match _x.unit_cost_decimal with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("volume_decimal",
                                              match _x.volume_decimal with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("lodging", match _x.lodging with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("check_in_at",
                                              match _x.check_in_at with
                                              | None -> []
                                              | Some _x -> [`Integer]);
                                             ("nights", match _x.nights with
                                              | None -> []
                                              | Some _x -> [`Integer])]]);
                           ("receipt", match _x.receipt with | None -> []
                            | Some _x -> [`Array
                                            ((List.map (fun (_x : t_7ca829a942) ->
                                                `Singleton
                                                  (`ObjectN
                                                     [("", [`Null]);
                                                      ("description",
                                                       match _x.description with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("quantity",
                                                       match _x.quantity with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("total",
                                                       match _x.total with
                                                       | None -> []
                                                       | Some _x -> [`Null]);
                                                      ("unit_cost",
                                                       match _x.unit_cost with
                                                       | None -> []
                                                       | Some _x -> [`Null])]))
                                                _x))]);
                           ("reference", match _x.reference with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_964deea341) ~op ~ctype _x
  
  and _mk_body_to_t_964deea341 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_964deea341) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("card", [`String]);
                ("currency", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("merchant_data",
                 [`ObjectN
                    [("", [`Any]); ("category", [`String]);
                     ("city", [`String]); ("country", [`String]);
                     ("name", [`String]); ("network_id", [`String]);
                     ("postal_code", [`String]); ("state", [`String]);
                     ("terminal_id", [`String]); ("url", [`String])]]);
                ("purchase_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("flight",
                      [`ObjectN
                         [("", [`Any]); ("departure_at", [`Integer]);
                          ("passenger_name", [`String]);
                          ("refundable", [`Boolean]);
                          ("segments", [`Array [(`List (`Null))]]);
                          ("travel_agency", [`String])]]);
                     ("fuel",
                      [`ObjectN
                         [("", [`Any]); ("type", [`String]);
                          ("unit", [`String]);
                          ("unit_cost_decimal", [`String]);
                          ("volume_decimal", [`String])]]);
                     ("lodging",
                      [`ObjectN
                         [("", [`Any]); ("check_in_at", [`Integer]);
                          ("nights", [`Integer])]]);
                     ("receipt",
                      [`Array
                         [(`List
                             (`ObjectN
                                [("", [`Null]); ("description", [`Null]);
                                 ("quantity", [`Null]); ("total", [`Null]);
                                 ("unit_cost", [`Null])]))]]);
                     ("reference", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_bc456e2dec _lvl ~op ~ctype (_x : t_bc456e2dec) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("refund_amount", match _x.refund_amount with | None -> []
          | Some _x -> [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_bc456e2dec) ~op ~ctype _x
  
  and _mk_body_to_t_bc456e2dec _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_bc456e2dec) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("refund_amount", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_995faed4ba _lvl ~op ~ctype (_x : t_995faed4ba) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_995faed4ba) ~op ~ctype _x
  
  and _mk_body_to_t_995faed4ba _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_995faed4ba) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_816a7290b6 _lvl ~op ~ctype (_x : t_816a7290b6) =
    _body_of ~kind:(
      `ObjectN
        [("amount_tip", match _x.amount_tip with | None -> []
          | Some _x -> [`Integer]);
         ("card_present", match _x.card_present with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("number", match _x.number with | None -> []
                            | Some _x -> [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("interac_present", match _x.interac_present with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("number", match _x.number with | None -> []
                            | Some _x -> [`String])]]);
         ("type", match _x.type_ with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_816a7290b6) ~op ~ctype _x
  
  and _mk_body_to_t_816a7290b6 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_816a7290b6) in _body_to
      ~kind:(`ObjectN
               [("amount_tip", [`Integer]);
                ("card_present",
                 [`ObjectN [("", [`Any]); ("number", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("interac_present",
                 [`ObjectN [("", [`Any]); ("number", [`String])]]);
                ("type", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_99c4cd28e2 _lvl ~op ~ctype (_x : t_99c4cd28e2) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("frozen_time", let _x = _x.frozen_time in [`Integer]);
         ("name", match _x.name with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_99c4cd28e2) ~op ~ctype _x
  
  and _mk_body_to_t_99c4cd28e2 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_99c4cd28e2) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("frozen_time", [`Integer]); ("name", [`String])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_5105b308ac _lvl ~op ~ctype (_x : t_5105b308ac) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("frozen_time", let _x = _x.frozen_time in [`Integer])])
      ~ctr:(Json_encoding.construct Encoders'.t_5105b308ac) ~op ~ctype _x
  
  and _mk_body_to_t_5105b308ac _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_5105b308ac) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("frozen_time", [`Integer])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_0e3e3a503e _lvl ~op ~ctype (_x : t_0e3e3a503e) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("failure_details", match _x.failure_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("code", match _x.code with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_0e3e3a503e) ~op ~ctype _x
  
  and _mk_body_to_t_0e3e3a503e _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0e3e3a503e) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("failure_details",
                 [`ObjectN [("", [`Any]); ("code", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_b30867f24c _lvl ~op ~ctype (_x : t_b30867f24c) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_b30867f24c) ~op ~ctype _x
  
  and _mk_body_to_t_b30867f24c _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b30867f24c) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_00b417a660 _lvl ~op ~ctype (_x : t_00b417a660) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_00b417a660) ~op ~ctype _x
  
  and _mk_body_to_t_00b417a660 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_00b417a660) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_a78c740cbb _lvl ~op ~ctype (_x : t_a78c740cbb) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_a78c740cbb) ~op ~ctype _x
  
  and _mk_body_to_t_a78c740cbb _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_a78c740cbb) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_e5cadca279 _lvl ~op ~ctype (_x : t_e5cadca279) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_e5cadca279) ~op ~ctype _x
  
  and _mk_body_to_t_e5cadca279 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e5cadca279) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_67de26f40f _lvl ~op ~ctype (_x : t_67de26f40f) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("tracking_details", let _x = _x.tracking_details in
          [`ObjectN
             [("", [`Any]);
              ("ach", match _x.ach with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("trace_id", let _x = _x.trace_id in
                                 [`String])]]);
              ("type", let _x = _x.type_ in [`String]);
              ("us_domestic_wire", match _x.us_domestic_wire with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("imad", match _x.imad with | None -> []
                                 | Some _x -> [`String]);
                                ("omad", match _x.omad with | None -> []
                                 | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_67de26f40f) ~op ~ctype _x
  
  and _mk_body_to_t_67de26f40f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_67de26f40f) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("tracking_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("ach",
                      [`ObjectN [("", [`Any]); ("trace_id", [`String])]]);
                     ("type", [`String]);
                     ("us_domestic_wire",
                      [`ObjectN
                         [("", [`Any]); ("imad", [`String]);
                          ("omad", [`String])]])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_b7800a5208 _lvl ~op ~ctype (_x : t_b7800a5208) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("returned_details", match _x.returned_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("code", match _x.code with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_b7800a5208) ~op ~ctype _x
  
  and _mk_body_to_t_b7800a5208 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_b7800a5208) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("returned_details",
                 [`ObjectN [("", [`Any]); ("code", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_caa1beef8b _lvl ~op ~ctype (_x : t_caa1beef8b) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_caa1beef8b) ~op ~ctype _x
  
  and _mk_body_to_t_caa1beef8b _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_caa1beef8b) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_e7d7b8539a _lvl ~op ~ctype (_x : t_e7d7b8539a) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_e7d7b8539a) ~op ~ctype _x
  
  and _mk_body_to_t_e7d7b8539a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e7d7b8539a) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_f7e4bf7173 _lvl ~op ~ctype (_x : t_f7e4bf7173) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("tracking_details", let _x = _x.tracking_details in
          [`ObjectN
             [("", [`Any]);
              ("ach", match _x.ach with | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("trace_id", let _x = _x.trace_id in
                                 [`String])]]);
              ("type", let _x = _x.type_ in [`String]);
              ("us_domestic_wire", match _x.us_domestic_wire with
               | None -> []
               | Some _x -> [`ObjectN
                               [("", [`Any]);
                                ("imad", match _x.imad with | None -> []
                                 | Some _x -> [`String]);
                                ("omad", match _x.omad with | None -> []
                                 | Some _x -> [`String])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_f7e4bf7173) ~op ~ctype _x
  
  and _mk_body_to_t_f7e4bf7173 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_f7e4bf7173) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("tracking_details",
                 [`ObjectN
                    [("", [`Any]);
                     ("ach",
                      [`ObjectN [("", [`Any]); ("trace_id", [`String])]]);
                     ("type", [`String]);
                     ("us_domestic_wire",
                      [`ObjectN
                         [("", [`Any]); ("imad", [`String]);
                          ("omad", [`String])]])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c4ce31ae53 _lvl ~op ~ctype (_x : t_c4ce31ae53) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("returned_details", match _x.returned_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("code", match _x.code with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_c4ce31ae53) ~op ~ctype _x
  
  and _mk_body_to_t_c4ce31ae53 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c4ce31ae53) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("returned_details",
                 [`ObjectN [("", [`Any]); ("code", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_2c6b2540ea _lvl ~op ~ctype (_x : t_2c6b2540ea) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("financial_account", let _x = _x.financial_account in [`String]);
         ("initiating_payment_method_details",
          match _x.initiating_payment_method_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_name",
                                              match _x.account_holder_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("network", let _x = _x.network in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_2c6b2540ea) ~op ~ctype _x
  
  and _mk_body_to_t_2c6b2540ea _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_2c6b2540ea) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("financial_account", [`String]);
                ("initiating_payment_method_details",
                 [`ObjectN
                    [("", [`Any]); ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_name", [`String]);
                          ("account_number", [`String]);
                          ("routing_number", [`String])]])]]);
                ("network", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_e3a7c57d4a _lvl ~op ~ctype (_x : t_e3a7c57d4a) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("financial_account", let _x = _x.financial_account in [`String]);
         ("initiating_payment_method_details",
          match _x.initiating_payment_method_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_name",
                                              match _x.account_holder_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("network", let _x = _x.network in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_e3a7c57d4a) ~op ~ctype _x
  
  and _mk_body_to_t_e3a7c57d4a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_e3a7c57d4a) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("financial_account", [`String]);
                ("initiating_payment_method_details",
                 [`ObjectN
                    [("", [`Any]); ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_name", [`String]);
                          ("account_number", [`String]);
                          ("routing_number", [`String])]])]]);
                ("network", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_44a0d32017 _lvl ~op ~ctype (_x : t_44a0d32017) =
    _body_of ~kind:(
      `ObjectN
        [("account", match _x.account with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("business_type", match _x.business_type with
                            | None -> [] | Some _x -> [`String]);
                           ("company", match _x.company with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("city",
                                                                match _x.city with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("country",
                                                                match _x.country with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line1",
                                                                match _x.line1 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line2",
                                                                match _x.line2 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("postal_code",
                                                                match _x.postal_code with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("state",
                                                                match _x.state with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("address_kana",
                                              match _x.address_kana with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("city",
                                                                match _x.city with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("country",
                                                                match _x.country with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line1",
                                                                match _x.line1 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line2",
                                                                match _x.line2 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("postal_code",
                                                                match _x.postal_code with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("state",
                                                                match _x.state with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("town",
                                                                match _x.town with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("address_kanji",
                                              match _x.address_kanji with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("city",
                                                                match _x.city with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("country",
                                                                match _x.country with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line1",
                                                                match _x.line1 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line2",
                                                                match _x.line2 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("postal_code",
                                                                match _x.postal_code with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("state",
                                                                match _x.state with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("town",
                                                                match _x.town with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("directors_provided",
                                              match _x.directors_provided with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("executives_provided",
                                              match _x.executives_provided with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("export_license_id",
                                              match _x.export_license_id with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("export_purpose_code",
                                              match _x.export_purpose_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("name_kana",
                                              match _x.name_kana with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("name_kanji",
                                              match _x.name_kanji with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("owners_provided",
                                              match _x.owners_provided with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("ownership_declaration",
                                              match _x.ownership_declaration with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("ownership_declaration_shown_and_signed",
                                              match _x.ownership_declaration_shown_and_signed with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("registration_number",
                                              match _x.registration_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("structure",
                                              match _x.structure with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("tax_id", match _x.tax_id with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("tax_id_registrar",
                                              match _x.tax_id_registrar with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("vat_id", match _x.vat_id with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("verification",
                                              match _x.verification with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("document",
                                                                match _x.document with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("back",
                                                                    match _x.back with
                                                                    | None -> []
                                                                    | Some _x -> [`Null]);
                                                                   ("front",
                                                                    match _x.front with
                                                                    | None -> []
                                                                    | Some _x -> [`Null])]])]])]]);
                           ("individual", match _x.individual with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("city",
                                                                match _x.city with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("country",
                                                                match _x.country with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line1",
                                                                match _x.line1 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line2",
                                                                match _x.line2 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("postal_code",
                                                                match _x.postal_code with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("state",
                                                                match _x.state with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("address_kana",
                                              match _x.address_kana with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("city",
                                                                match _x.city with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("country",
                                                                match _x.country with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line1",
                                                                match _x.line1 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line2",
                                                                match _x.line2 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("postal_code",
                                                                match _x.postal_code with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("state",
                                                                match _x.state with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("town",
                                                                match _x.town with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("address_kanji",
                                              match _x.address_kanji with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("city",
                                                                match _x.city with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("country",
                                                                match _x.country with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line1",
                                                                match _x.line1 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line2",
                                                                match _x.line2 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("postal_code",
                                                                match _x.postal_code with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("state",
                                                                match _x.state with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("town",
                                                                match _x.town with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("dob", match _x.dob with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_21e02edbdc _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("day",
                                                                  let _x = _x.day in
                                                                  [`Null]);
                                                                 ("month",
                                                                  let _x = _x.month in
                                                                  [`Null]);
                                                                 ("year",
                                                                  let _x = _x.year in
                                                                  [`Null])]
                                                            | T_12cf8e1465 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("first_name",
                                              match _x.first_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("first_name_kana",
                                              match _x.first_name_kana with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("first_name_kanji",
                                              match _x.first_name_kanji with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("full_name_aliases",
                                              match _x.full_name_aliases with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | StringList _x ->
                                                              `Array
                                                                ((List.map (fun (_x : string) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))
                                                            | T_61928e0c3a _x ->
                                                              `String]);
                                             ("gender", match _x.gender with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("id_number",
                                              match _x.id_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("id_number_secondary",
                                              match _x.id_number_secondary with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("last_name",
                                              match _x.last_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("last_name_kana",
                                              match _x.last_name_kana with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("last_name_kanji",
                                              match _x.last_name_kanji with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("maiden_name",
                                              match _x.maiden_name with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("metadata",
                                              match _x.metadata with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_c5e0c31ade _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null])]
                                                            | T_8e13ebd72f _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("political_exposure",
                                              match _x.political_exposure with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("registered_address",
                                              match _x.registered_address with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("city",
                                                                match _x.city with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("country",
                                                                match _x.country with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line1",
                                                                match _x.line1 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("line2",
                                                                match _x.line2 with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("postal_code",
                                                                match _x.postal_code with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("state",
                                                                match _x.state with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("relationship",
                                              match _x.relationship with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("director",
                                                                match _x.director with
                                                                | None -> []
                                                                | Some _x -> [`Boolean]);
                                                               ("executive",
                                                                match _x.executive with
                                                                | None -> []
                                                                | Some _x -> [`Boolean]);
                                                               ("owner",
                                                                match _x.owner with
                                                                | None -> []
                                                                | Some _x -> [`Boolean]);
                                                               ("percent_ownership",
                                                                match _x.percent_ownership with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | Float_ _x ->
                                                                  `Null
                                                                | T_ebc57a8305 _x ->
                                                                  `Null]);
                                                               ("title",
                                                                match _x.title with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("ssn_last_4",
                                              match _x.ssn_last_4 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("verification",
                                              match _x.verification with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("additional_document",
                                                                match _x.additional_document with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("back",
                                                                    match _x.back with
                                                                    | None -> []
                                                                    | Some _x -> [`Null]);
                                                                   ("front",
                                                                    match _x.front with
                                                                    | None -> []
                                                                    | Some _x -> [`Null])]]);
                                                               ("document",
                                                                match _x.document with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `ObjectN
                                                                  [("",
                                                                    [`Null]);
                                                                   ("back",
                                                                    match _x.back with
                                                                    | None -> []
                                                                    | Some _x -> [`Null]);
                                                                   ("front",
                                                                    match _x.front with
                                                                    | None -> []
                                                                    | Some _x -> [`Null])]])]])]]);
                           ("tos_shown_and_accepted",
                            match _x.tos_shown_and_accepted with | None -> []
                            | Some _x -> [`Boolean])]]);
         ("bank_account", match _x.bank_account with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("account_holder_name",
                            match _x.account_holder_name with | None -> []
                            | Some _x -> [`String]);
                           ("account_holder_type",
                            match _x.account_holder_type with | None -> []
                            | Some _x -> [`String]);
                           ("account_number", let _x = _x.account_number in
                            [`String]);
                           ("account_type", match _x.account_type with
                            | None -> [] | Some _x -> [`String]);
                           ("country", let _x = _x.country in [`String]);
                           ("currency", match _x.currency with | None -> []
                            | Some _x -> [`String]);
                           ("payment_method", match _x.payment_method with
                            | None -> [] | Some _x -> [`String]);
                           ("routing_number", match _x.routing_number with
                            | None -> [] | Some _x -> [`String])]]);
         ("card", match _x.card with | None -> []
          | Some _x -> [match _x with
                        | T_b218f77aee _x ->
                          `ObjectN
                            [("", [`Any]);
                             ("address_city", match _x.address_city with
                              | None -> [] | Some _x -> [`String]);
                             ("address_country",
                              match _x.address_country with | None -> []
                              | Some _x -> [`String]);
                             ("address_line1", match _x.address_line1 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_line2", match _x.address_line2 with
                              | None -> [] | Some _x -> [`String]);
                             ("address_state", match _x.address_state with
                              | None -> [] | Some _x -> [`String]);
                             ("address_zip", match _x.address_zip with
                              | None -> [] | Some _x -> [`String]);
                             ("currency", match _x.currency with | None -> []
                              | Some _x -> [`String]);
                             ("cvc", match _x.cvc with | None -> []
                              | Some _x -> [`String]);
                             ("exp_month", let _x = _x.exp_month in
                              [`String]);
                             ("exp_year", let _x = _x.exp_year in [`String]);
                             ("name", match _x.name with | None -> []
                              | Some _x -> [`String]);
                             ("networks", match _x.networks with | None -> []
                              | Some _x -> [`ObjectN
                                              [("", [`Any]);
                                               ("preferred",
                                                match _x.preferred with
                                                | None -> []
                                                | Some _x -> [`String])]]);
                             ("number", let _x = _x.number in [`String])]
                        | String_ _x -> `String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("cvc_update", match _x.cvc_update with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("cvc", let _x = _x.cvc in [`String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("person", match _x.person with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("additional_tos_acceptances",
                            match _x.additional_tos_acceptances with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account",
                                              match _x.account with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("date",
                                                                match _x.date with
                                                                | None -> []
                                                                | Some _x -> [`Integer]);
                                                               ("ip",
                                                                match _x.ip with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("user_agent",
                                                                match _x.user_agent with
                                                                | None -> []
                                                                | Some _x -> [
                                                                match _x with
                                                                | String_ _x ->
                                                                  `Null
                                                                | T_26452ff970 _x ->
                                                                  `Null])]])]]);
                           ("address", match _x.address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kana", match _x.address_kana with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("address_kanji", match _x.address_kanji with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("town", match _x.town with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("dob", match _x.dob with | None -> []
                            | Some _x -> [match _x with
                                          | T_92a52baa11 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("day", let _x = _x.day in
                                                [`Integer]);
                                               ("month", let _x = _x.month in
                                                [`Integer]);
                                               ("year", let _x = _x.year in
                                                [`Integer])]
                                          | T_763662c55a _x -> `String]);
                           ("documents", match _x.documents with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("company_authorization",
                                              match _x.company_authorization with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("files",
                                                                match _x.files with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_57cf242f49) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("passport",
                                              match _x.passport with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("files",
                                                                match _x.files with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_2d44f604f5) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]]);
                                             ("visa", match _x.visa with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("files",
                                                                match _x.files with
                                                                | None -> []
                                                                | Some _x -> [
                                                                `Array
                                                                  ((List.map (fun (_x : t_bcea083747) ->
                                                                    `Singleton
                                                                    (`Null))
                                                                    _x))])]])]]);
                           ("email", match _x.email with | None -> []
                            | Some _x -> [`String]);
                           ("first_name", match _x.first_name with
                            | None -> [] | Some _x -> [`String]);
                           ("first_name_kana", match _x.first_name_kana with
                            | None -> [] | Some _x -> [`String]);
                           ("first_name_kanji",
                            match _x.first_name_kanji with | None -> []
                            | Some _x -> [`String]);
                           ("full_name_aliases",
                            match _x.full_name_aliases with | None -> []
                            | Some _x -> [match _x with
                                          | StringList _x ->
                                            `Array
                                              ((List.map (fun (_x : string) ->
                                                  `Singleton (`Null)) _x))
                                          | T_6067b26308 _x -> `String]);
                           ("gender", match _x.gender with | None -> []
                            | Some _x -> [`String]);
                           ("id_number", match _x.id_number with | None -> []
                            | Some _x -> [`String]);
                           ("id_number_secondary",
                            match _x.id_number_secondary with | None -> []
                            | Some _x -> [`String]);
                           ("last_name", match _x.last_name with | None -> []
                            | Some _x -> [`String]);
                           ("last_name_kana", match _x.last_name_kana with
                            | None -> [] | Some _x -> [`String]);
                           ("last_name_kanji", match _x.last_name_kanji with
                            | None -> [] | Some _x -> [`String]);
                           ("maiden_name", match _x.maiden_name with
                            | None -> [] | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [match _x with
                                          | T_f6a7c40ed6 _x ->
                                            `ObjectN [("", [`String])]
                                          | T_cc6f3f47ea _x -> `String]);
                           ("nationality", match _x.nationality with
                            | None -> [] | Some _x -> [`String]);
                           ("phone", match _x.phone with | None -> []
                            | Some _x -> [`String]);
                           ("political_exposure",
                            match _x.political_exposure with | None -> []
                            | Some _x -> [`String]);
                           ("registered_address",
                            match _x.registered_address with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("city", match _x.city with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("country",
                                              match _x.country with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line1", match _x.line1 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("line2", match _x.line2 with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("postal_code",
                                              match _x.postal_code with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("state", match _x.state with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("relationship", match _x.relationship with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("director",
                                              match _x.director with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("executive",
                                              match _x.executive with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("legal_guardian",
                                              match _x.legal_guardian with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("owner", match _x.owner with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("percent_ownership",
                                              match _x.percent_ownership with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | Float_ _x ->
                                                              `Number
                                                            | T_6e1a62c892 _x ->
                                                              `String]);
                                             ("representative",
                                              match _x.representative with
                                              | None -> []
                                              | Some _x -> [`Boolean]);
                                             ("title", match _x.title with
                                              | None -> []
                                              | Some _x -> [`String])]]);
                           ("ssn_last_4", match _x.ssn_last_4 with
                            | None -> [] | Some _x -> [`String]);
                           ("verification", match _x.verification with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("additional_document",
                                              match _x.additional_document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]]);
                                             ("document",
                                              match _x.document with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("back",
                                                                match _x.back with
                                                                | None -> []
                                                                | Some _x -> [`String]);
                                                               ("front",
                                                                match _x.front with
                                                                | None -> []
                                                                | Some _x -> [`String])]])]])]]);
         ("pii", match _x.pii with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("id_number", match _x.id_number with | None -> []
                            | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_44a0d32017) ~op ~ctype _x
  
  and _mk_body_to_t_44a0d32017 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_44a0d32017) in _body_to
      ~kind:(`ObjectN
               [("account",
                 [`ObjectN
                    [("", [`Any]); ("business_type", [`String]);
                     ("company",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String])]]);
                          ("address_kana",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String]); ("town", [`String])]]);
                          ("address_kanji",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String]); ("town", [`String])]]);
                          ("directors_provided", [`Boolean]);
                          ("executives_provided", [`Boolean]);
                          ("export_license_id", [`String]);
                          ("export_purpose_code", [`String]);
                          ("name", [`String]); ("name_kana", [`String]);
                          ("name_kanji", [`String]);
                          ("owners_provided", [`Boolean]);
                          ("ownership_declaration",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]); ("user_agent", [`String])]]);
                          ("ownership_declaration_shown_and_signed",
                           [`Boolean]);
                          ("phone", [`String]);
                          ("registration_number", [`String]);
                          ("structure", [`String]); ("tax_id", [`String]);
                          ("tax_id_registrar", [`String]);
                          ("vat_id", [`String]);
                          ("verification",
                           [`ObjectN
                              [("", [`Any]);
                               ("document",
                                [`ObjectN
                                   [("", [`Null]); ("back", [`Null]);
                                    ("front", [`Null])]])]])]]);
                     ("individual",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String])]]);
                          ("address_kana",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String]); ("town", [`String])]]);
                          ("address_kanji",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String]); ("town", [`String])]]);
                          ("dob",
                           [`ObjectN
                              [("", [`Null]); ("day", [`Null]);
                               ("month", [`Null]); ("year", [`Null])];
                            `String]);
                          ("email", [`String]); ("first_name", [`String]);
                          ("first_name_kana", [`String]);
                          ("first_name_kanji", [`String]);
                          ("full_name_aliases",
                           [`Array [(`List (`Null))];
                            `String]);
                          ("gender", [`String]); ("id_number", [`String]);
                          ("id_number_secondary", [`String]);
                          ("last_name", [`String]);
                          ("last_name_kana", [`String]);
                          ("last_name_kanji", [`String]);
                          ("maiden_name", [`String]);
                          ("metadata", [`ObjectN [("", [`Null])];
                                        `String]);
                          ("phone", [`String]);
                          ("political_exposure", [`String]);
                          ("registered_address",
                           [`ObjectN
                              [("", [`Any]); ("city", [`String]);
                               ("country", [`String]); ("line1", [`String]);
                               ("line2", [`String]);
                               ("postal_code", [`String]);
                               ("state", [`String])]]);
                          ("relationship",
                           [`ObjectN
                              [("", [`Any]); ("director", [`Boolean]);
                               ("executive", [`Boolean]);
                               ("owner", [`Boolean]);
                               ("percent_ownership", [`Null;
                                                      `Null]);
                               ("title", [`String])]]);
                          ("ssn_last_4", [`String]);
                          ("verification",
                           [`ObjectN
                              [("", [`Any]);
                               ("additional_document",
                                [`ObjectN
                                   [("", [`Null]); ("back", [`Null]);
                                    ("front", [`Null])]]);
                               ("document",
                                [`ObjectN
                                   [("", [`Null]); ("back", [`Null]);
                                    ("front", [`Null])]])]])]]);
                     ("tos_shown_and_accepted", [`Boolean])]]);
                ("bank_account",
                 [`ObjectN
                    [("", [`Any]); ("account_holder_name", [`String]);
                     ("account_holder_type", [`String]);
                     ("account_number", [`String]);
                     ("account_type", [`String]); ("country", [`String]);
                     ("currency", [`String]); ("payment_method", [`String]);
                     ("routing_number", [`String])]]);
                ("card",
                 [`ObjectN
                    [("", [`Any]); ("address_city", [`String]);
                     ("address_country", [`String]);
                     ("address_line1", [`String]);
                     ("address_line2", [`String]);
                     ("address_state", [`String]);
                     ("address_zip", [`String]); ("currency", [`String]);
                     ("cvc", [`String]); ("exp_month", [`String]);
                     ("exp_year", [`String]); ("name", [`String]);
                     ("networks",
                      [`ObjectN [("", [`Any]); ("preferred", [`String])]]);
                     ("number", [`String])];
                  `String]);
                ("customer", [`String]);
                ("cvc_update", [`ObjectN [("", [`Any]); ("cvc", [`String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("person",
                 [`ObjectN
                    [("", [`Any]);
                     ("additional_tos_acceptances",
                      [`ObjectN
                         [("", [`Any]);
                          ("account",
                           [`ObjectN
                              [("", [`Any]); ("date", [`Integer]);
                               ("ip", [`String]);
                               ("user_agent", [`Null;
                                               `Null])]])]]);
                     ("address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("address_kana",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("address_kanji",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String]); ("town", [`String])]]);
                     ("dob",
                      [`ObjectN
                         [("", [`Any]); ("day", [`Integer]);
                          ("month", [`Integer]); ("year", [`Integer])];
                       `String]);
                     ("documents",
                      [`ObjectN
                         [("", [`Any]);
                          ("company_authorization",
                           [`ObjectN
                              [("", [`Any]);
                               ("files", [`Array [(`List (`Null))]])]]);
                          ("passport",
                           [`ObjectN
                              [("", [`Any]);
                               ("files", [`Array [(`List (`Null))]])]]);
                          ("visa",
                           [`ObjectN
                              [("", [`Any]);
                               ("files", [`Array [(`List (`Null))]])]])]]);
                     ("email", [`String]); ("first_name", [`String]);
                     ("first_name_kana", [`String]);
                     ("first_name_kanji", [`String]);
                     ("full_name_aliases",
                      [`Array [(`List (`Null))];
                       `String]);
                     ("gender", [`String]); ("id_number", [`String]);
                     ("id_number_secondary", [`String]);
                     ("last_name", [`String]); ("last_name_kana", [`String]);
                     ("last_name_kanji", [`String]);
                     ("maiden_name", [`String]);
                     ("metadata", [`ObjectN [("", [`String])];
                                   `String]);
                     ("nationality", [`String]); ("phone", [`String]);
                     ("political_exposure", [`String]);
                     ("registered_address",
                      [`ObjectN
                         [("", [`Any]); ("city", [`String]);
                          ("country", [`String]); ("line1", [`String]);
                          ("line2", [`String]); ("postal_code", [`String]);
                          ("state", [`String])]]);
                     ("relationship",
                      [`ObjectN
                         [("", [`Any]); ("director", [`Boolean]);
                          ("executive", [`Boolean]);
                          ("legal_guardian", [`Boolean]);
                          ("owner", [`Boolean]);
                          ("percent_ownership", [`Number;
                                                 `String]);
                          ("representative", [`Boolean]);
                          ("title", [`String])]]);
                     ("ssn_last_4", [`String]);
                     ("verification",
                      [`ObjectN
                         [("", [`Any]);
                          ("additional_document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]]);
                          ("document",
                           [`ObjectN
                              [("", [`Any]); ("back", [`String]);
                               ("front", [`String])]])]])]]);
                ("pii", [`ObjectN [("", [`Any]); ("id_number", [`String])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_462f995cf7 _lvl ~op ~ctype (_x : t_462f995cf7) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_d06bfb1d53 _x -> `ObjectN [("", [`String])]
                        | T_4e44cfa9d9 _x -> `String]);
         ("source", match _x.source with | None -> [] | Some _x -> [`String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String]);
         ("transfer_group", match _x.transfer_group with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_462f995cf7) ~op ~ctype _x
  
  and _mk_body_to_t_462f995cf7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_462f995cf7) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("source", [`String]); ("statement_descriptor", [`String]);
                ("transfer_group", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_df07df1e31 _lvl ~op ~ctype (_x : t_df07df1e31) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_df07df1e31) ~op ~ctype _x
  
  and _mk_body_to_t_df07df1e31 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_df07df1e31) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_38d38d0ed4 _lvl ~op ~ctype (_x : t_38d38d0ed4) =
    _body_of ~kind:(
      `ObjectN
        [("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_e964788993 _x -> `ObjectN [("", [`String])]
                        | T_35eb0f5e5c _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_38d38d0ed4) ~op ~ctype _x
  
  and _mk_body_to_t_38d38d0ed4 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_38d38d0ed4) in _body_to
      ~kind:(`ObjectN
               [("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_4b36d2503f _lvl ~op ~ctype (_x : t_4b36d2503f) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("destination", let _x = _x.destination in [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("source_transaction", match _x.source_transaction with | None -> []
          | Some _x -> [`String]);
         ("source_type", match _x.source_type with | None -> []
          | Some _x -> [`String]);
         ("transfer_group", match _x.transfer_group with | None -> []
          | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_4b36d2503f) ~op ~ctype _x
  
  and _mk_body_to_t_4b36d2503f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4b36d2503f) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]); ("destination", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("source_transaction", [`String]);
                ("source_type", [`String]); ("transfer_group", [`String])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_6a29a128b6 _lvl ~op ~ctype (_x : t_6a29a128b6) =
    _body_of ~kind:(
      `ObjectN
        [("amount", match _x.amount with | None -> []
          | Some _x -> [`Integer]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_ec1eb2684b _x -> `ObjectN [("", [`String])]
                        | T_0e50ea18bf _x -> `String]);
         ("refund_application_fee", match _x.refund_application_fee with
          | None -> [] | Some _x -> [`Boolean])])
      ~ctr:(Json_encoding.construct Encoders'.t_6a29a128b6) ~op ~ctype _x
  
  and _mk_body_to_t_6a29a128b6 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6a29a128b6) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("refund_application_fee", [`Boolean])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_8045f191c5 _lvl ~op ~ctype (_x : t_8045f191c5) =
    _body_of ~kind:(
      `ObjectN
        [("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_a9516407c2 _x -> `ObjectN [("", [`String])]
                        | T_3bfb5aac27 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_8045f191c5) ~op ~ctype _x
  
  and _mk_body_to_t_8045f191c5 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_8045f191c5) in _body_to
      ~kind:(`ObjectN
               [("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_6cc9a417e8 _lvl ~op ~ctype (_x : t_6cc9a417e8) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_41e780b9c2 _x -> `ObjectN [("", [`String])]
                        | T_ad341d9c73 _x -> `String])])
      ~ctr:(Json_encoding.construct Encoders'.t_6cc9a417e8) ~op ~ctype _x
  
  and _mk_body_to_t_6cc9a417e8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6cc9a417e8) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_145080d61a _lvl ~op ~ctype (_x : t_145080d61a) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("received_credit", let _x = _x.received_credit in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_145080d61a) ~op ~ctype _x
  
  and _mk_body_to_t_145080d61a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_145080d61a) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("received_credit", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_c61693ce20 _lvl ~op ~ctype (_x : t_c61693ce20) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("received_debit", let _x = _x.received_debit in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_c61693ce20) ~op ~ctype _x
  
  and _mk_body_to_t_c61693ce20 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_c61693ce20) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("received_debit", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_bb9f43b8e8 _lvl ~op ~ctype (_x : t_bb9f43b8e8) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", match _x.features with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("deposit_insurance",
                            match _x.deposit_insurance with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("financial_addresses",
                            match _x.financial_addresses with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("aba", match _x.aba with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]]);
                           ("inbound_transfers",
                            match _x.inbound_transfers with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("ach", match _x.ach with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]]);
                           ("intra_stripe_flows",
                            match _x.intra_stripe_flows with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("outbound_payments",
                            match _x.outbound_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("ach", match _x.ach with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]]);
                                             ("us_domestic_wire",
                                              match _x.us_domestic_wire with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]]);
                           ("outbound_transfers",
                            match _x.outbound_transfers with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("ach", match _x.ach with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]]);
                                             ("us_domestic_wire",
                                              match _x.us_domestic_wire with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("platform_restrictions", match _x.platform_restrictions with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("inbound_flows", match _x.inbound_flows with
                            | None -> [] | Some _x -> [`String]);
                           ("outbound_flows", match _x.outbound_flows with
                            | None -> [] | Some _x -> [`String])]]);
         ("supported_currencies", let _x = _x.supported_currencies in
          [`Array ((List.map (fun (_x : string) -> `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_bb9f43b8e8) ~op ~ctype _x
  
  and _mk_body_to_t_bb9f43b8e8 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_bb9f43b8e8) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("features",
                 [`ObjectN
                    [("", [`Any]);
                     ("card_issuing",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("deposit_insurance",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("financial_addresses",
                      [`ObjectN
                         [("", [`Any]);
                          ("aba",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]]);
                     ("inbound_transfers",
                      [`ObjectN
                         [("", [`Any]);
                          ("ach",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]]);
                     ("intra_stripe_flows",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("outbound_payments",
                      [`ObjectN
                         [("", [`Any]);
                          ("ach",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]]);
                          ("us_domestic_wire",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]]);
                     ("outbound_transfers",
                      [`ObjectN
                         [("", [`Any]);
                          ("ach",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]]);
                          ("us_domestic_wire",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("platform_restrictions",
                 [`ObjectN
                    [("", [`Any]); ("inbound_flows", [`String]);
                     ("outbound_flows", [`String])]]);
                ("supported_currencies", [`Array [(`List (`String))]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_13bfb93f22 _lvl ~op ~ctype (_x : t_13bfb93f22) =
    _body_of ~kind:(
      `ObjectN
        [("card_issuing", match _x.card_issuing with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("requested", let _x = _x.requested in [`Boolean])]]);
         ("deposit_insurance", match _x.deposit_insurance with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("requested", let _x = _x.requested in [`Boolean])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("financial_addresses", match _x.financial_addresses with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("aba", match _x.aba with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]])]]);
         ("inbound_transfers", match _x.inbound_transfers with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("ach", match _x.ach with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]])]]);
         ("intra_stripe_flows", match _x.intra_stripe_flows with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("requested", let _x = _x.requested in [`Boolean])]]);
         ("outbound_payments", match _x.outbound_payments with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("ach", match _x.ach with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("us_domestic_wire",
                            match _x.us_domestic_wire with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]])]]);
         ("outbound_transfers", match _x.outbound_transfers with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("ach", match _x.ach with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("us_domestic_wire",
                            match _x.us_domestic_wire with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_13bfb93f22) ~op ~ctype _x
  
  and _mk_body_to_t_13bfb93f22 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_13bfb93f22) in _body_to
      ~kind:(`ObjectN
               [("card_issuing",
                 [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                ("deposit_insurance",
                 [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("financial_addresses",
                 [`ObjectN
                    [("", [`Any]);
                     ("aba",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]])]]);
                ("inbound_transfers",
                 [`ObjectN
                    [("", [`Any]);
                     ("ach",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]])]]);
                ("intra_stripe_flows",
                 [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                ("outbound_payments",
                 [`ObjectN
                    [("", [`Any]);
                     ("ach",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("us_domestic_wire",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]])]]);
                ("outbound_transfers",
                 [`ObjectN
                    [("", [`Any]);
                     ("ach",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("us_domestic_wire",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]])]])])
      ~dtr ~ctype _x
  
  and _mk_body_of_t_0649e1659d _lvl ~op ~ctype (_x : t_0649e1659d) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("features", match _x.features with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("card_issuing", match _x.card_issuing with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("deposit_insurance",
                            match _x.deposit_insurance with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("financial_addresses",
                            match _x.financial_addresses with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("aba", match _x.aba with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]]);
                           ("inbound_transfers",
                            match _x.inbound_transfers with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("ach", match _x.ach with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]]);
                           ("intra_stripe_flows",
                            match _x.intra_stripe_flows with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("requested",
                                              let _x = _x.requested in
                                              [`Boolean])]]);
                           ("outbound_payments",
                            match _x.outbound_payments with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("ach", match _x.ach with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]]);
                                             ("us_domestic_wire",
                                              match _x.us_domestic_wire with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]]);
                           ("outbound_transfers",
                            match _x.outbound_transfers with | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("ach", match _x.ach with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]]);
                                             ("us_domestic_wire",
                                              match _x.us_domestic_wire with
                                              | None -> []
                                              | Some _x -> [`ObjectN
                                                              [("", [`Any]);
                                                               ("requested",
                                                                let _x = _x.requested in
                                                                [`Boolean])]])]])]]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("platform_restrictions", match _x.platform_restrictions with
          | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("inbound_flows", match _x.inbound_flows with
                            | None -> [] | Some _x -> [`String]);
                           ("outbound_flows", match _x.outbound_flows with
                            | None -> [] | Some _x -> [`String])]])])
      ~ctr:(Json_encoding.construct Encoders'.t_0649e1659d) ~op ~ctype _x
  
  and _mk_body_to_t_0649e1659d _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_0649e1659d) in _body_to
      ~kind:(`ObjectN
               [("expand", [`Array [(`List (`String))]]);
                ("features",
                 [`ObjectN
                    [("", [`Any]);
                     ("card_issuing",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("deposit_insurance",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("financial_addresses",
                      [`ObjectN
                         [("", [`Any]);
                          ("aba",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]]);
                     ("inbound_transfers",
                      [`ObjectN
                         [("", [`Any]);
                          ("ach",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]]);
                     ("intra_stripe_flows",
                      [`ObjectN [("", [`Any]); ("requested", [`Boolean])]]);
                     ("outbound_payments",
                      [`ObjectN
                         [("", [`Any]);
                          ("ach",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]]);
                          ("us_domestic_wire",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]]);
                     ("outbound_transfers",
                      [`ObjectN
                         [("", [`Any]);
                          ("ach",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]]);
                          ("us_domestic_wire",
                           [`ObjectN
                              [("", [`Any]); ("requested", [`Boolean])]])]])]]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("platform_restrictions",
                 [`ObjectN
                    [("", [`Any]); ("inbound_flows", [`String]);
                     ("outbound_flows", [`String])]])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_13a556529f _lvl ~op ~ctype (_x : t_13a556529f) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("financial_account", let _x = _x.financial_account in [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("origin_payment_method", let _x = _x.origin_payment_method in
          [`String]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_13a556529f) ~op ~ctype _x
  
  and _mk_body_to_t_13a556529f _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_13a556529f) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]);
                ("expand", [`Array [(`List (`String))]]);
                ("financial_account", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("origin_payment_method", [`String]);
                ("statement_descriptor", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_6395fa1e87 _lvl ~op ~ctype (_x : t_6395fa1e87) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_6395fa1e87) ~op ~ctype _x
  
  and _mk_body_to_t_6395fa1e87 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_6395fa1e87) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_718889bcd7 _lvl ~op ~ctype (_x : t_718889bcd7) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("customer", match _x.customer with | None -> []
          | Some _x -> [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("destination_payment_method",
          match _x.destination_payment_method with | None -> []
          | Some _x -> [`String]);
         ("destination_payment_method_data",
          match _x.destination_payment_method_data with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("billing_details", match _x.billing_details with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("address",
                                              match _x.address with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | T_6fd9ab84e5 _x ->
                                                              `ObjectN
                                                                [("",
                                                                  [`Null]);
                                                                 ("city",
                                                                  match _x.city with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("country",
                                                                  match _x.country with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line1",
                                                                  match _x.line1 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("line2",
                                                                  match _x.line2 with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("postal_code",
                                                                  match _x.postal_code with
                                                                  | None -> []
                                                                  | Some _x -> [`Null]);
                                                                 ("state",
                                                                  match _x.state with
                                                                  | None -> []
                                                                  | Some _x -> [`Null])]
                                                            | T_241e4478f0 _x ->
                                                              `String]);
                                             ("email", match _x.email with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_e9e44e8bb6 _x ->
                                                              `String]);
                                             ("name", match _x.name with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_6cc0e0f28e _x ->
                                                              `String]);
                                             ("phone", match _x.phone with
                                              | None -> []
                                              | Some _x -> [match _x with
                                                            | String_ _x ->
                                                              `String
                                                            | T_b6ab863e01 _x ->
                                                              `String])]]);
                           ("financial_account",
                            match _x.financial_account with | None -> []
                            | Some _x -> [`String]);
                           ("metadata", match _x.metadata with | None -> []
                            | Some _x -> [`ObjectN [("", [`String])]]);
                           ("type", let _x = _x.type_ in [`String]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [`ObjectN
                                            [("", [`Any]);
                                             ("account_holder_type",
                                              match _x.account_holder_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_number",
                                              match _x.account_number with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("account_type",
                                              match _x.account_type with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("financial_connections_account",
                                              match _x.financial_connections_account with
                                              | None -> []
                                              | Some _x -> [`String]);
                                             ("routing_number",
                                              match _x.routing_number with
                                              | None -> []
                                              | Some _x -> [`String])]])]]);
         ("destination_payment_method_options",
          match _x.destination_payment_method_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_5cf9aa6682 _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("network",
                                                match _x.network with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_19088be3c0 _x -> `String])]]);
         ("end_user_details", match _x.end_user_details with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("ip_address", match _x.ip_address with
                            | None -> [] | Some _x -> [`String]);
                           ("present", let _x = _x.present in [`Boolean])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("financial_account", let _x = _x.financial_account in [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_718889bcd7) ~op ~ctype _x
  
  and _mk_body_to_t_718889bcd7 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_718889bcd7) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("customer", [`String]); ("description", [`String]);
                ("destination_payment_method", [`String]);
                ("destination_payment_method_data",
                 [`ObjectN
                    [("", [`Any]);
                     ("billing_details",
                      [`ObjectN
                         [("", [`Any]);
                          ("address",
                           [`ObjectN
                              [("", [`Null]); ("city", [`Null]);
                               ("country", [`Null]); ("line1", [`Null]);
                               ("line2", [`Null]); ("postal_code", [`Null]);
                               ("state", [`Null])];
                            `String]);
                          ("email", [`String;
                                     `String]);
                          ("name", [`String;
                                    `String]);
                          ("phone", [`String;
                                     `String])]]);
                     ("financial_account", [`String]);
                     ("metadata", [`ObjectN [("", [`String])]]);
                     ("type", [`String]);
                     ("us_bank_account",
                      [`ObjectN
                         [("", [`Any]); ("account_holder_type", [`String]);
                          ("account_number", [`String]);
                          ("account_type", [`String]);
                          ("financial_connections_account", [`String]);
                          ("routing_number", [`String])]])]]);
                ("destination_payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("us_bank_account",
                      [`ObjectN [("", [`Any]); ("network", [`String])];
                       `String])]]);
                ("end_user_details",
                 [`ObjectN
                    [("", [`Any]); ("ip_address", [`String]);
                     ("present", [`Boolean])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("financial_account", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("statement_descriptor", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_4f642e7623 _lvl ~op ~ctype (_x : t_4f642e7623) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_4f642e7623) ~op ~ctype _x
  
  and _mk_body_to_t_4f642e7623 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_4f642e7623) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_906bfeffcd _lvl ~op ~ctype (_x : t_906bfeffcd) =
    _body_of ~kind:(
      `ObjectN
        [("amount", let _x = _x.amount in [`Integer]);
         ("currency", let _x = _x.currency in [`String]);
         ("description", match _x.description with | None -> []
          | Some _x -> [`String]);
         ("destination_payment_method",
          match _x.destination_payment_method with | None -> []
          | Some _x -> [`String]);
         ("destination_payment_method_options",
          match _x.destination_payment_method_options with | None -> []
          | Some _x -> [`ObjectN
                          [("", [`Any]);
                           ("us_bank_account", match _x.us_bank_account with
                            | None -> []
                            | Some _x -> [match _x with
                                          | T_53db9c18bd _x ->
                                            `ObjectN
                                              [("", [`Any]);
                                               ("network",
                                                match _x.network with
                                                | None -> []
                                                | Some _x -> [`String])]
                                          | T_33739bb0c5 _x -> `String])]]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("financial_account", let _x = _x.financial_account in [`String]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [`ObjectN [("", [`String])]]);
         ("statement_descriptor", match _x.statement_descriptor with
          | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_906bfeffcd) ~op ~ctype _x
  
  and _mk_body_to_t_906bfeffcd _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_906bfeffcd) in _body_to
      ~kind:(`ObjectN
               [("amount", [`Integer]); ("currency", [`String]);
                ("description", [`String]);
                ("destination_payment_method", [`String]);
                ("destination_payment_method_options",
                 [`ObjectN
                    [("", [`Any]);
                     ("us_bank_account",
                      [`ObjectN [("", [`Any]); ("network", [`String])];
                       `String])]]);
                ("expand", [`Array [(`List (`String))]]);
                ("financial_account", [`String]);
                ("metadata", [`ObjectN [("", [`String])]]);
                ("statement_descriptor", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_42e0ededca _lvl ~op ~ctype (_x : t_42e0ededca) =
    _body_of ~kind:(
      `ObjectN
        [("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))])])
      ~ctr:(Json_encoding.construct Encoders'.t_42e0ededca) ~op ~ctype _x
  
  and _mk_body_to_t_42e0ededca _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_42e0ededca) in _body_to
      ~kind:(`ObjectN [("expand", [`Array [(`List (`String))]])]) ~dtr ~ctype
      _x
  
  and _mk_body_of_t_d3efdb60c5 _lvl ~op ~ctype (_x : t_d3efdb60c5) =
    _body_of ~kind:(
      `ObjectN
        [("api_version", match _x.api_version with | None -> []
          | Some _x -> [`String]);
         ("connect", match _x.connect with | None -> []
          | Some _x -> [`Boolean]);
         ("description", match _x.description with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_7789e61dc8 _x -> `String]);
         ("enabled_events", let _x = _x.enabled_events in
          [`Array
             ((List.map (fun (_x : t_2e955008c9) -> `Singleton (`String)) _x))]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_01d09bef9c _x -> `ObjectN [("", [`String])]
                        | T_905a0fdd65 _x -> `String]);
         ("url", let _x = _x.url in [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_d3efdb60c5) ~op ~ctype _x
  
  and _mk_body_to_t_d3efdb60c5 _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_d3efdb60c5) in _body_to
      ~kind:(`ObjectN
               [("api_version", [`String]); ("connect", [`Boolean]);
                ("description", [`String;
                                 `String]);
                ("enabled_events", [`Array [(`List (`String))]]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("url", [`String])]) ~dtr ~ctype _x
  
  and _mk_body_of_t_45afaed75a _lvl ~op ~ctype (_x : t_45afaed75a) =
    _body_of ~kind:(
      `ObjectN
        [("description", match _x.description with | None -> []
          | Some _x -> [match _x with
                        | String_ _x -> `String
                        | T_9174793d7d _x -> `String]);
         ("disabled", match _x.disabled with | None -> []
          | Some _x -> [`Boolean]);
         ("enabled_events", match _x.enabled_events with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : t_c54d998fa9) ->
                              `Singleton (`String)) _x))]);
         ("expand", match _x.expand with | None -> []
          | Some _x -> [`Array
                          ((List.map (fun (_x : string) ->
                              `Singleton (`String)) _x))]);
         ("metadata", match _x.metadata with | None -> []
          | Some _x -> [match _x with
                        | T_9f89f3700a _x -> `ObjectN [("", [`String])]
                        | T_09dc90121b _x -> `String]);
         ("url", match _x.url with | None -> [] | Some _x -> [`String])])
      ~ctr:(Json_encoding.construct Encoders'.t_45afaed75a) ~op ~ctype _x
  
  and _mk_body_to_t_45afaed75a _lvl ~ctype (_x : string) =
    let dtr = (Json_encoding.destruct Encoders'.t_45afaed75a) in _body_to
      ~kind:(`ObjectN
               [("description", [`String;
                                 `String]);
                ("disabled", [`Boolean]);
                ("enabled_events", [`Array [(`List (`String))]]);
                ("expand", [`Array [(`List (`String))]]);
                ("metadata", [`ObjectN [("", [`String])];
                              `String]);
                ("url", [`String])]) ~dtr ~ctype _x
  
  
  
  
  let body_of_p_Unit = _mk_body_of_p_Unit 0
  and body_to_p_Unit = _mk_body_to_p_Unit 0
  and body_of_t_077fe43399 = _mk_body_of_t_077fe43399 0
  and body_to_t_077fe43399 = _mk_body_to_t_077fe43399 0
  and body_of_t_9cca83d3ce = _mk_body_of_t_9cca83d3ce 0
  and body_to_t_9cca83d3ce = _mk_body_to_t_9cca83d3ce 0
  and body_of_t_873da709f0 = _mk_body_of_t_873da709f0 0
  and body_to_t_873da709f0 = _mk_body_to_t_873da709f0 0
  and body_of_t_0ac571850f = _mk_body_of_t_0ac571850f 0
  and body_to_t_0ac571850f = _mk_body_to_t_0ac571850f 0
  and body_of_t_6d73642c75 = _mk_body_of_t_6d73642c75 0
  and body_to_t_6d73642c75 = _mk_body_to_t_6d73642c75 0
  and body_of_t_2b0bd800cc = _mk_body_of_t_2b0bd800cc 0
  and body_to_t_2b0bd800cc = _mk_body_to_t_2b0bd800cc 0
  and body_of_t_2cb3f4c5b8 = _mk_body_of_t_2cb3f4c5b8 0
  and body_to_t_2cb3f4c5b8 = _mk_body_to_t_2cb3f4c5b8 0
  and body_of_t_2792c18cba = _mk_body_of_t_2792c18cba 0
  and body_to_t_2792c18cba = _mk_body_to_t_2792c18cba 0
  and body_of_t_3d4ff3bb74 = _mk_body_of_t_3d4ff3bb74 0
  and body_to_t_3d4ff3bb74 = _mk_body_to_t_3d4ff3bb74 0
  and body_of_t_1662f1c975 = _mk_body_of_t_1662f1c975 0
  and body_to_t_1662f1c975 = _mk_body_to_t_1662f1c975 0
  and body_of_t_97e3db8100 = _mk_body_of_t_97e3db8100 0
  and body_to_t_97e3db8100 = _mk_body_to_t_97e3db8100 0
  and body_of_t_9657124a3d = _mk_body_of_t_9657124a3d 0
  and body_to_t_9657124a3d = _mk_body_to_t_9657124a3d 0
  and body_of_t_fdd67c7407 = _mk_body_of_t_fdd67c7407 0
  and body_to_t_fdd67c7407 = _mk_body_to_t_fdd67c7407 0
  and body_of_t_2df1edec70 = _mk_body_of_t_2df1edec70 0
  and body_to_t_2df1edec70 = _mk_body_to_t_2df1edec70 0
  and body_of_t_a987b56548 = _mk_body_of_t_a987b56548 0
  and body_to_t_a987b56548 = _mk_body_to_t_a987b56548 0
  and body_of_t_54c2b31b26 = _mk_body_of_t_54c2b31b26 0
  and body_to_t_54c2b31b26 = _mk_body_to_t_54c2b31b26 0
  and body_of_t_3d8fdeff43 = _mk_body_of_t_3d8fdeff43 0
  and body_to_t_3d8fdeff43 = _mk_body_to_t_3d8fdeff43 0
  and body_of_t_541238ad18 = _mk_body_of_t_541238ad18 0
  and body_to_t_541238ad18 = _mk_body_to_t_541238ad18 0
  and body_of_t_a9fb82352a = _mk_body_of_t_a9fb82352a 0
  and body_to_t_a9fb82352a = _mk_body_to_t_a9fb82352a 0
  and body_of_t_9825dbfdb8 = _mk_body_of_t_9825dbfdb8 0
  and body_to_t_9825dbfdb8 = _mk_body_to_t_9825dbfdb8 0
  and body_of_t_188ad0945d = _mk_body_of_t_188ad0945d 0
  and body_to_t_188ad0945d = _mk_body_to_t_188ad0945d 0
  and body_of_t_13c67f66b9 = _mk_body_of_t_13c67f66b9 0
  and body_to_t_13c67f66b9 = _mk_body_to_t_13c67f66b9 0
  and body_of_t_b253a05bdd = _mk_body_of_t_b253a05bdd 0
  and body_to_t_b253a05bdd = _mk_body_to_t_b253a05bdd 0
  and body_of_t_348c84e9d9 = _mk_body_of_t_348c84e9d9 0
  and body_to_t_348c84e9d9 = _mk_body_to_t_348c84e9d9 0
  and body_of_t_7daa9b70fa = _mk_body_of_t_7daa9b70fa 0
  and body_to_t_7daa9b70fa = _mk_body_to_t_7daa9b70fa 0
  and body_of_t_137796d954 = _mk_body_of_t_137796d954 0
  and body_to_t_137796d954 = _mk_body_to_t_137796d954 0
  and body_of_t_42ec27db9e = _mk_body_of_t_42ec27db9e 0
  and body_to_t_42ec27db9e = _mk_body_to_t_42ec27db9e 0
  and body_of_t_4d654213e3 = _mk_body_of_t_4d654213e3 0
  and body_to_t_4d654213e3 = _mk_body_to_t_4d654213e3 0
  and body_of_t_0c1fc2d27c = _mk_body_of_t_0c1fc2d27c 0
  and body_to_t_0c1fc2d27c = _mk_body_to_t_0c1fc2d27c 0
  and body_of_t_8dad7d97a8 = _mk_body_of_t_8dad7d97a8 0
  and body_to_t_8dad7d97a8 = _mk_body_to_t_8dad7d97a8 0
  and body_of_t_fa006cbf88 = _mk_body_of_t_fa006cbf88 0
  and body_to_t_fa006cbf88 = _mk_body_to_t_fa006cbf88 0
  and body_of_t_2ddc9f381c = _mk_body_of_t_2ddc9f381c 0
  and body_to_t_2ddc9f381c = _mk_body_to_t_2ddc9f381c 0
  and body_of_t_124e0f7625 = _mk_body_of_t_124e0f7625 0
  and body_to_t_124e0f7625 = _mk_body_to_t_124e0f7625 0
  and body_of_t_99d11e1b03 = _mk_body_of_t_99d11e1b03 0
  and body_to_t_99d11e1b03 = _mk_body_to_t_99d11e1b03 0
  and body_of_t_cefa9c09fc = _mk_body_of_t_cefa9c09fc 0
  and body_to_t_cefa9c09fc = _mk_body_to_t_cefa9c09fc 0
  and body_of_t_4a6ca66503 = _mk_body_of_t_4a6ca66503 0
  and body_to_t_4a6ca66503 = _mk_body_to_t_4a6ca66503 0
  and body_of_t_d2b6d7f2eb = _mk_body_of_t_d2b6d7f2eb 0
  and body_to_t_d2b6d7f2eb = _mk_body_to_t_d2b6d7f2eb 0
  and body_of_t_159ef19a67 = _mk_body_of_t_159ef19a67 0
  and body_to_t_159ef19a67 = _mk_body_to_t_159ef19a67 0
  and body_of_t_6b60a3205c = _mk_body_of_t_6b60a3205c 0
  and body_to_t_6b60a3205c = _mk_body_to_t_6b60a3205c 0
  and body_of_t_63cfa38997 = _mk_body_of_t_63cfa38997 0
  and body_to_t_63cfa38997 = _mk_body_to_t_63cfa38997 0
  and body_of_t_be9da0bd64 = _mk_body_of_t_be9da0bd64 0
  and body_to_t_be9da0bd64 = _mk_body_to_t_be9da0bd64 0
  and body_of_t_12ad0cb13f = _mk_body_of_t_12ad0cb13f 0
  and body_to_t_12ad0cb13f = _mk_body_to_t_12ad0cb13f 0
  and body_of_t_caa29d89b9 = _mk_body_of_t_caa29d89b9 0
  and body_to_t_caa29d89b9 = _mk_body_to_t_caa29d89b9 0
  and body_of_t_fb73b03a51 = _mk_body_of_t_fb73b03a51 0
  and body_to_t_fb73b03a51 = _mk_body_to_t_fb73b03a51 0
  and body_of_t_642079a393 = _mk_body_of_t_642079a393 0
  and body_to_t_642079a393 = _mk_body_to_t_642079a393 0
  and body_of_t_334f1359d4 = _mk_body_of_t_334f1359d4 0
  and body_to_t_334f1359d4 = _mk_body_to_t_334f1359d4 0
  and body_of_t_95a0b28341 = _mk_body_of_t_95a0b28341 0
  and body_to_t_95a0b28341 = _mk_body_to_t_95a0b28341 0
  and body_of_t_505449c1c1 = _mk_body_of_t_505449c1c1 0
  and body_to_t_505449c1c1 = _mk_body_to_t_505449c1c1 0
  and body_of_t_735d572a21 = _mk_body_of_t_735d572a21 0
  and body_to_t_735d572a21 = _mk_body_to_t_735d572a21 0
  and body_of_t_3a3685bf8b = _mk_body_of_t_3a3685bf8b 0
  and body_to_t_3a3685bf8b = _mk_body_to_t_3a3685bf8b 0
  and body_of_t_530fb4b186 = _mk_body_of_t_530fb4b186 0
  and body_to_t_530fb4b186 = _mk_body_to_t_530fb4b186 0
  and body_of_t_340d484029 = _mk_body_of_t_340d484029 0
  and body_to_t_340d484029 = _mk_body_to_t_340d484029 0
  and body_of_t_f82bce2264 = _mk_body_of_t_f82bce2264 0
  and body_to_t_f82bce2264 = _mk_body_to_t_f82bce2264 0
  and body_of_t_410ecadf3f = _mk_body_of_t_410ecadf3f 0
  and body_to_t_410ecadf3f = _mk_body_to_t_410ecadf3f 0
  and body_of_t_e114c81e22 = _mk_body_of_t_e114c81e22 0
  and body_to_t_e114c81e22 = _mk_body_to_t_e114c81e22 0
  and body_of_t_c2d5628823 = _mk_body_of_t_c2d5628823 0
  and body_to_t_c2d5628823 = _mk_body_to_t_c2d5628823 0
  and body_of_t_04a865718b = _mk_body_of_t_04a865718b 0
  and body_to_t_04a865718b = _mk_body_to_t_04a865718b 0
  and body_of_t_c8c38f8382 = _mk_body_of_t_c8c38f8382 0
  and body_to_t_c8c38f8382 = _mk_body_to_t_c8c38f8382 0
  and body_of_t_91f2d6c84a = _mk_body_of_t_91f2d6c84a 0
  and body_to_t_91f2d6c84a = _mk_body_to_t_91f2d6c84a 0
  and body_of_t_594de95ea4 = _mk_body_of_t_594de95ea4 0
  and body_to_t_594de95ea4 = _mk_body_to_t_594de95ea4 0
  and body_of_t_b5962a6fa7 = _mk_body_of_t_b5962a6fa7 0
  and body_to_t_b5962a6fa7 = _mk_body_to_t_b5962a6fa7 0
  and body_of_t_b67e1395de = _mk_body_of_t_b67e1395de 0
  and body_to_t_b67e1395de = _mk_body_to_t_b67e1395de 0
  and body_of_t_9e15a33c0b = _mk_body_of_t_9e15a33c0b 0
  and body_to_t_9e15a33c0b = _mk_body_to_t_9e15a33c0b 0
  and body_of_t_67fb237393 = _mk_body_of_t_67fb237393 0
  and body_to_t_67fb237393 = _mk_body_to_t_67fb237393 0
  and body_of_t_56fff3fa92 = _mk_body_of_t_56fff3fa92 0
  and body_to_t_56fff3fa92 = _mk_body_to_t_56fff3fa92 0
  and body_of_t_2cec9492a3 = _mk_body_of_t_2cec9492a3 0
  and body_to_t_2cec9492a3 = _mk_body_to_t_2cec9492a3 0
  and body_of_t_e105d89725 = _mk_body_of_t_e105d89725 0
  and body_to_t_e105d89725 = _mk_body_to_t_e105d89725 0
  and body_of_t_d5207640e5 = _mk_body_of_t_d5207640e5 0
  and body_to_t_d5207640e5 = _mk_body_to_t_d5207640e5 0
  and body_of_t_fca42b91d3 = _mk_body_of_t_fca42b91d3 0
  and body_to_t_fca42b91d3 = _mk_body_to_t_fca42b91d3 0
  and body_of_t_3fd2347cc8 = _mk_body_of_t_3fd2347cc8 0
  and body_to_t_3fd2347cc8 = _mk_body_to_t_3fd2347cc8 0
  and body_of_t_a4e56c6142 = _mk_body_of_t_a4e56c6142 0
  and body_to_t_a4e56c6142 = _mk_body_to_t_a4e56c6142 0
  and body_of_t_b6e0844000 = _mk_body_of_t_b6e0844000 0
  and body_to_t_b6e0844000 = _mk_body_to_t_b6e0844000 0
  and body_of_t_defb802725 = _mk_body_of_t_defb802725 0
  and body_to_t_defb802725 = _mk_body_to_t_defb802725 0
  and body_of_t_54350e65da = _mk_body_of_t_54350e65da 0
  and body_to_t_54350e65da = _mk_body_to_t_54350e65da 0
  and body_of_t_ae77b5e4c1 = _mk_body_of_t_ae77b5e4c1 0
  and body_to_t_ae77b5e4c1 = _mk_body_to_t_ae77b5e4c1 0
  and body_of_t_4ac062b052 = _mk_body_of_t_4ac062b052 0
  and body_to_t_4ac062b052 = _mk_body_to_t_4ac062b052 0
  and body_of_t_a43adb5ae7 = _mk_body_of_t_a43adb5ae7 0
  and body_to_t_a43adb5ae7 = _mk_body_to_t_a43adb5ae7 0
  and body_of_t_759a19fa41 = _mk_body_of_t_759a19fa41 0
  and body_to_t_759a19fa41 = _mk_body_to_t_759a19fa41 0
  and body_of_t_7868c7c4cf = _mk_body_of_t_7868c7c4cf 0
  and body_to_t_7868c7c4cf = _mk_body_to_t_7868c7c4cf 0
  and body_of_t_6242113b06 = _mk_body_of_t_6242113b06 0
  and body_to_t_6242113b06 = _mk_body_to_t_6242113b06 0
  and body_of_t_6fe3f98c90 = _mk_body_of_t_6fe3f98c90 0
  and body_to_t_6fe3f98c90 = _mk_body_to_t_6fe3f98c90 0
  and body_of_t_97b90aeba7 = _mk_body_of_t_97b90aeba7 0
  and body_to_t_97b90aeba7 = _mk_body_to_t_97b90aeba7 0
  and body_of_t_48a951389d = _mk_body_of_t_48a951389d 0
  and body_to_t_48a951389d = _mk_body_to_t_48a951389d 0
  and body_of_t_1c3f01e00e = _mk_body_of_t_1c3f01e00e 0
  and body_to_t_1c3f01e00e = _mk_body_to_t_1c3f01e00e 0
  and body_of_t_5298a074bf = _mk_body_of_t_5298a074bf 0
  and body_to_t_5298a074bf = _mk_body_to_t_5298a074bf 0
  and body_of_t_5f225de92f = _mk_body_of_t_5f225de92f 0
  and body_to_t_5f225de92f = _mk_body_to_t_5f225de92f 0
  and body_of_t_14ce04311e = _mk_body_of_t_14ce04311e 0
  and body_to_t_14ce04311e = _mk_body_to_t_14ce04311e 0
  and body_of_t_727310e605 = _mk_body_of_t_727310e605 0
  and body_to_t_727310e605 = _mk_body_to_t_727310e605 0
  and body_of_t_208179bd07 = _mk_body_of_t_208179bd07 0
  and body_to_t_208179bd07 = _mk_body_to_t_208179bd07 0
  and body_of_t_b6ba8d726e = _mk_body_of_t_b6ba8d726e 0
  and body_to_t_b6ba8d726e = _mk_body_to_t_b6ba8d726e 0
  and body_of_t_3c4f9109b8 = _mk_body_of_t_3c4f9109b8 0
  and body_to_t_3c4f9109b8 = _mk_body_to_t_3c4f9109b8 0
  and body_of_t_fa9ecaf73f = _mk_body_of_t_fa9ecaf73f 0
  and body_to_t_fa9ecaf73f = _mk_body_to_t_fa9ecaf73f 0
  and body_of_t_d7648dc25d = _mk_body_of_t_d7648dc25d 0
  and body_to_t_d7648dc25d = _mk_body_to_t_d7648dc25d 0
  and body_of_t_5906ed3d1a = _mk_body_of_t_5906ed3d1a 0
  and body_to_t_5906ed3d1a = _mk_body_to_t_5906ed3d1a 0
  and body_of_t_5ff765fb6a = _mk_body_of_t_5ff765fb6a 0
  and body_to_t_5ff765fb6a = _mk_body_to_t_5ff765fb6a 0
  and body_of_t_358ebf3f8d = _mk_body_of_t_358ebf3f8d 0
  and body_to_t_358ebf3f8d = _mk_body_to_t_358ebf3f8d 0
  and body_of_t_2a7f4d2fcb = _mk_body_of_t_2a7f4d2fcb 0
  and body_to_t_2a7f4d2fcb = _mk_body_to_t_2a7f4d2fcb 0
  and body_of_t_1b35351ad0 = _mk_body_of_t_1b35351ad0 0
  and body_to_t_1b35351ad0 = _mk_body_to_t_1b35351ad0 0
  and body_of_t_a9be044c3d = _mk_body_of_t_a9be044c3d 0
  and body_to_t_a9be044c3d = _mk_body_to_t_a9be044c3d 0
  and body_of_t_a5ef94f13d = _mk_body_of_t_a5ef94f13d 0
  and body_to_t_a5ef94f13d = _mk_body_to_t_a5ef94f13d 0
  and body_of_t_85bd60c74b = _mk_body_of_t_85bd60c74b 0
  and body_to_t_85bd60c74b = _mk_body_to_t_85bd60c74b 0
  and body_of_t_639da83cc7 = _mk_body_of_t_639da83cc7 0
  and body_to_t_639da83cc7 = _mk_body_to_t_639da83cc7 0
  and body_of_t_485bd1f95e = _mk_body_of_t_485bd1f95e 0
  and body_to_t_485bd1f95e = _mk_body_to_t_485bd1f95e 0
  and body_of_t_fce0724e2a = _mk_body_of_t_fce0724e2a 0
  and body_to_t_fce0724e2a = _mk_body_to_t_fce0724e2a 0
  and body_of_t_aed880c229 = _mk_body_of_t_aed880c229 0
  and body_to_t_aed880c229 = _mk_body_to_t_aed880c229 0
  and body_of_t_01c0ada085 = _mk_body_of_t_01c0ada085 0
  and body_to_t_01c0ada085 = _mk_body_to_t_01c0ada085 0
  and body_of_t_2b406438a3 = _mk_body_of_t_2b406438a3 0
  and body_to_t_2b406438a3 = _mk_body_to_t_2b406438a3 0
  and body_of_t_1046acf59a = _mk_body_of_t_1046acf59a 0
  and body_to_t_1046acf59a = _mk_body_to_t_1046acf59a 0
  and body_of_t_bed3869825 = _mk_body_of_t_bed3869825 0
  and body_to_t_bed3869825 = _mk_body_to_t_bed3869825 0
  and body_of_t_0e5ac31461 = _mk_body_of_t_0e5ac31461 0
  and body_to_t_0e5ac31461 = _mk_body_to_t_0e5ac31461 0
  and body_of_t_41547624db = _mk_body_of_t_41547624db 0
  and body_to_t_41547624db = _mk_body_to_t_41547624db 0
  and body_of_t_9d4fdffba0 = _mk_body_of_t_9d4fdffba0 0
  and body_to_t_9d4fdffba0 = _mk_body_to_t_9d4fdffba0 0
  and body_of_t_c3aea2d0af = _mk_body_of_t_c3aea2d0af 0
  and body_to_t_c3aea2d0af = _mk_body_to_t_c3aea2d0af 0
  and body_of_t_22dd2782c4 = _mk_body_of_t_22dd2782c4 0
  and body_to_t_22dd2782c4 = _mk_body_to_t_22dd2782c4 0
  and body_of_t_36825c96f9 = _mk_body_of_t_36825c96f9 0
  and body_to_t_36825c96f9 = _mk_body_to_t_36825c96f9 0
  and body_of_t_4d9f8cf633 = _mk_body_of_t_4d9f8cf633 0
  and body_to_t_4d9f8cf633 = _mk_body_to_t_4d9f8cf633 0
  and body_of_t_8377bf5b33 = _mk_body_of_t_8377bf5b33 0
  and body_to_t_8377bf5b33 = _mk_body_to_t_8377bf5b33 0
  and body_of_t_3147bdcb0f = _mk_body_of_t_3147bdcb0f 0
  and body_to_t_3147bdcb0f = _mk_body_to_t_3147bdcb0f 0
  and body_of_t_00fe61059b = _mk_body_of_t_00fe61059b 0
  and body_to_t_00fe61059b = _mk_body_to_t_00fe61059b 0
  and body_of_t_ce5b122d77 = _mk_body_of_t_ce5b122d77 0
  and body_to_t_ce5b122d77 = _mk_body_to_t_ce5b122d77 0
  and body_of_t_4400756710 = _mk_body_of_t_4400756710 0
  and body_to_t_4400756710 = _mk_body_to_t_4400756710 0
  and body_of_t_65f459585c = _mk_body_of_t_65f459585c 0
  and body_to_t_65f459585c = _mk_body_to_t_65f459585c 0
  and body_of_t_b0227442ba = _mk_body_of_t_b0227442ba 0
  and body_to_t_b0227442ba = _mk_body_to_t_b0227442ba 0
  and body_of_t_b076abc8e8 = _mk_body_of_t_b076abc8e8 0
  and body_to_t_b076abc8e8 = _mk_body_to_t_b076abc8e8 0
  and body_of_t_bef740eaba = _mk_body_of_t_bef740eaba 0
  and body_to_t_bef740eaba = _mk_body_to_t_bef740eaba 0
  and body_of_t_ecc3072831 = _mk_body_of_t_ecc3072831 0
  and body_to_t_ecc3072831 = _mk_body_to_t_ecc3072831 0
  and body_of_t_7a9057bca1 = _mk_body_of_t_7a9057bca1 0
  and body_to_t_7a9057bca1 = _mk_body_to_t_7a9057bca1 0
  and body_of_t_d37b238f78 = _mk_body_of_t_d37b238f78 0
  and body_to_t_d37b238f78 = _mk_body_to_t_d37b238f78 0
  and body_of_t_90a3b32557 = _mk_body_of_t_90a3b32557 0
  and body_to_t_90a3b32557 = _mk_body_to_t_90a3b32557 0
  and body_of_t_1d2414e106 = _mk_body_of_t_1d2414e106 0
  and body_to_t_1d2414e106 = _mk_body_to_t_1d2414e106 0
  and body_of_t_3902b0d8d0 = _mk_body_of_t_3902b0d8d0 0
  and body_to_t_3902b0d8d0 = _mk_body_to_t_3902b0d8d0 0
  and body_of_t_5744fbdd2a = _mk_body_of_t_5744fbdd2a 0
  and body_to_t_5744fbdd2a = _mk_body_to_t_5744fbdd2a 0
  and body_of_t_a6e453345c = _mk_body_of_t_a6e453345c 0
  and body_to_t_a6e453345c = _mk_body_to_t_a6e453345c 0
  and body_of_t_24dc407bac = _mk_body_of_t_24dc407bac 0
  and body_to_t_24dc407bac = _mk_body_to_t_24dc407bac 0
  and body_of_t_6de8aa236a = _mk_body_of_t_6de8aa236a 0
  and body_to_t_6de8aa236a = _mk_body_to_t_6de8aa236a 0
  and body_of_t_c188522c32 = _mk_body_of_t_c188522c32 0
  and body_to_t_c188522c32 = _mk_body_to_t_c188522c32 0
  and body_of_t_45d221f917 = _mk_body_of_t_45d221f917 0
  and body_to_t_45d221f917 = _mk_body_to_t_45d221f917 0
  and body_of_t_38947bfb23 = _mk_body_of_t_38947bfb23 0
  and body_to_t_38947bfb23 = _mk_body_to_t_38947bfb23 0
  and body_of_t_b85f8d8c81 = _mk_body_of_t_b85f8d8c81 0
  and body_to_t_b85f8d8c81 = _mk_body_to_t_b85f8d8c81 0
  and body_of_t_4a2fd304c4 = _mk_body_of_t_4a2fd304c4 0
  and body_to_t_4a2fd304c4 = _mk_body_to_t_4a2fd304c4 0
  and body_of_t_4c281d3f89 = _mk_body_of_t_4c281d3f89 0
  and body_to_t_4c281d3f89 = _mk_body_to_t_4c281d3f89 0
  and body_of_t_e64c12fea8 = _mk_body_of_t_e64c12fea8 0
  and body_to_t_e64c12fea8 = _mk_body_to_t_e64c12fea8 0
  and body_of_t_45ab6bbf15 = _mk_body_of_t_45ab6bbf15 0
  and body_to_t_45ab6bbf15 = _mk_body_to_t_45ab6bbf15 0
  and body_of_t_c9fb8c6ce1 = _mk_body_of_t_c9fb8c6ce1 0
  and body_to_t_c9fb8c6ce1 = _mk_body_to_t_c9fb8c6ce1 0
  and body_of_t_aa177c434b = _mk_body_of_t_aa177c434b 0
  and body_to_t_aa177c434b = _mk_body_to_t_aa177c434b 0
  and body_of_t_64330ebf8c = _mk_body_of_t_64330ebf8c 0
  and body_to_t_64330ebf8c = _mk_body_to_t_64330ebf8c 0
  and body_of_t_917ec75f12 = _mk_body_of_t_917ec75f12 0
  and body_to_t_917ec75f12 = _mk_body_to_t_917ec75f12 0
  and body_of_t_b6b7a35388 = _mk_body_of_t_b6b7a35388 0
  and body_to_t_b6b7a35388 = _mk_body_to_t_b6b7a35388 0
  and body_of_t_0a58ca78fd = _mk_body_of_t_0a58ca78fd 0
  and body_to_t_0a58ca78fd = _mk_body_to_t_0a58ca78fd 0
  and body_of_t_e4b40dec33 = _mk_body_of_t_e4b40dec33 0
  and body_to_t_e4b40dec33 = _mk_body_to_t_e4b40dec33 0
  and body_of_t_0b99ff77ee = _mk_body_of_t_0b99ff77ee 0
  and body_to_t_0b99ff77ee = _mk_body_to_t_0b99ff77ee 0
  and body_of_t_86a22f3d9a = _mk_body_of_t_86a22f3d9a 0
  and body_to_t_86a22f3d9a = _mk_body_to_t_86a22f3d9a 0
  and body_of_t_7e5b080223 = _mk_body_of_t_7e5b080223 0
  and body_to_t_7e5b080223 = _mk_body_to_t_7e5b080223 0
  and body_of_t_db4496c47a = _mk_body_of_t_db4496c47a 0
  and body_to_t_db4496c47a = _mk_body_to_t_db4496c47a 0
  and body_of_t_f460d0db0d = _mk_body_of_t_f460d0db0d 0
  and body_to_t_f460d0db0d = _mk_body_to_t_f460d0db0d 0
  and body_of_t_a44e2930e0 = _mk_body_of_t_a44e2930e0 0
  and body_to_t_a44e2930e0 = _mk_body_to_t_a44e2930e0 0
  and body_of_t_4612538979 = _mk_body_of_t_4612538979 0
  and body_to_t_4612538979 = _mk_body_to_t_4612538979 0
  and body_of_t_426f73e626 = _mk_body_of_t_426f73e626 0
  and body_to_t_426f73e626 = _mk_body_to_t_426f73e626 0
  and body_of_t_0cf8eea095 = _mk_body_of_t_0cf8eea095 0
  and body_to_t_0cf8eea095 = _mk_body_to_t_0cf8eea095 0
  and body_of_t_77098b9e70 = _mk_body_of_t_77098b9e70 0
  and body_to_t_77098b9e70 = _mk_body_to_t_77098b9e70 0
  and body_of_t_e8527333be = _mk_body_of_t_e8527333be 0
  and body_to_t_e8527333be = _mk_body_to_t_e8527333be 0
  and body_of_t_0d53ea1e47 = _mk_body_of_t_0d53ea1e47 0
  and body_to_t_0d53ea1e47 = _mk_body_to_t_0d53ea1e47 0
  and body_of_t_c85fd9638d = _mk_body_of_t_c85fd9638d 0
  and body_to_t_c85fd9638d = _mk_body_to_t_c85fd9638d 0
  and body_of_t_eaa27c41ea = _mk_body_of_t_eaa27c41ea 0
  and body_to_t_eaa27c41ea = _mk_body_to_t_eaa27c41ea 0
  and body_of_t_8580d60ccb = _mk_body_of_t_8580d60ccb 0
  and body_to_t_8580d60ccb = _mk_body_to_t_8580d60ccb 0
  and body_of_t_89d7e83914 = _mk_body_of_t_89d7e83914 0
  and body_to_t_89d7e83914 = _mk_body_to_t_89d7e83914 0
  and body_of_t_f64c15d966 = _mk_body_of_t_f64c15d966 0
  and body_to_t_f64c15d966 = _mk_body_to_t_f64c15d966 0
  and body_of_t_766e276734 = _mk_body_of_t_766e276734 0
  and body_to_t_766e276734 = _mk_body_to_t_766e276734 0
  and body_of_t_da508546f5 = _mk_body_of_t_da508546f5 0
  and body_to_t_da508546f5 = _mk_body_to_t_da508546f5 0
  and body_of_t_f99463f06f = _mk_body_of_t_f99463f06f 0
  and body_to_t_f99463f06f = _mk_body_to_t_f99463f06f 0
  and body_of_t_129504cf36 = _mk_body_of_t_129504cf36 0
  and body_to_t_129504cf36 = _mk_body_to_t_129504cf36 0
  and body_of_t_691d19b9b9 = _mk_body_of_t_691d19b9b9 0
  and body_to_t_691d19b9b9 = _mk_body_to_t_691d19b9b9 0
  and body_of_t_4926ae3bf6 = _mk_body_of_t_4926ae3bf6 0
  and body_to_t_4926ae3bf6 = _mk_body_to_t_4926ae3bf6 0
  and body_of_t_e73d9ab028 = _mk_body_of_t_e73d9ab028 0
  and body_to_t_e73d9ab028 = _mk_body_to_t_e73d9ab028 0
  and body_of_t_e1e2f3202f = _mk_body_of_t_e1e2f3202f 0
  and body_to_t_e1e2f3202f = _mk_body_to_t_e1e2f3202f 0
  and body_of_t_52af184891 = _mk_body_of_t_52af184891 0
  and body_to_t_52af184891 = _mk_body_to_t_52af184891 0
  and body_of_t_ed0a563493 = _mk_body_of_t_ed0a563493 0
  and body_to_t_ed0a563493 = _mk_body_to_t_ed0a563493 0
  and body_of_t_fadd71181a = _mk_body_of_t_fadd71181a 0
  and body_to_t_fadd71181a = _mk_body_to_t_fadd71181a 0
  and body_of_t_b13d04ec54 = _mk_body_of_t_b13d04ec54 0
  and body_to_t_b13d04ec54 = _mk_body_to_t_b13d04ec54 0
  and body_of_t_1961e701de = _mk_body_of_t_1961e701de 0
  and body_to_t_1961e701de = _mk_body_to_t_1961e701de 0
  and body_of_t_41158558d6 = _mk_body_of_t_41158558d6 0
  and body_to_t_41158558d6 = _mk_body_to_t_41158558d6 0
  and body_of_t_5694d68ef9 = _mk_body_of_t_5694d68ef9 0
  and body_to_t_5694d68ef9 = _mk_body_to_t_5694d68ef9 0
  and body_of_t_fc1e4fa3c5 = _mk_body_of_t_fc1e4fa3c5 0
  and body_to_t_fc1e4fa3c5 = _mk_body_to_t_fc1e4fa3c5 0
  and body_of_t_702854dd00 = _mk_body_of_t_702854dd00 0
  and body_to_t_702854dd00 = _mk_body_to_t_702854dd00 0
  and body_of_t_2e99c002e9 = _mk_body_of_t_2e99c002e9 0
  and body_to_t_2e99c002e9 = _mk_body_to_t_2e99c002e9 0
  and body_of_t_057722e648 = _mk_body_of_t_057722e648 0
  and body_to_t_057722e648 = _mk_body_to_t_057722e648 0
  and body_of_t_99f7102425 = _mk_body_of_t_99f7102425 0
  and body_to_t_99f7102425 = _mk_body_to_t_99f7102425 0
  and body_of_t_272ee8a03c = _mk_body_of_t_272ee8a03c 0
  and body_to_t_272ee8a03c = _mk_body_to_t_272ee8a03c 0
  and body_of_t_2b617be94b = _mk_body_of_t_2b617be94b 0
  and body_to_t_2b617be94b = _mk_body_to_t_2b617be94b 0
  and body_of_t_6bb178a0d2 = _mk_body_of_t_6bb178a0d2 0
  and body_to_t_6bb178a0d2 = _mk_body_to_t_6bb178a0d2 0
  and body_of_t_f7a6d3b9e7 = _mk_body_of_t_f7a6d3b9e7 0
  and body_to_t_f7a6d3b9e7 = _mk_body_to_t_f7a6d3b9e7 0
  and body_of_t_5da70e880a = _mk_body_of_t_5da70e880a 0
  and body_to_t_5da70e880a = _mk_body_to_t_5da70e880a 0
  and body_of_t_87901b9b08 = _mk_body_of_t_87901b9b08 0
  and body_to_t_87901b9b08 = _mk_body_to_t_87901b9b08 0
  and body_of_t_d3af3d8376 = _mk_body_of_t_d3af3d8376 0
  and body_to_t_d3af3d8376 = _mk_body_to_t_d3af3d8376 0
  and body_of_t_d7c04a246f = _mk_body_of_t_d7c04a246f 0
  and body_to_t_d7c04a246f = _mk_body_to_t_d7c04a246f 0
  and body_of_t_8257cc3b6e = _mk_body_of_t_8257cc3b6e 0
  and body_to_t_8257cc3b6e = _mk_body_to_t_8257cc3b6e 0
  and body_of_t_821e6a1748 = _mk_body_of_t_821e6a1748 0
  and body_to_t_821e6a1748 = _mk_body_to_t_821e6a1748 0
  and body_of_t_7a449b20b9 = _mk_body_of_t_7a449b20b9 0
  and body_to_t_7a449b20b9 = _mk_body_to_t_7a449b20b9 0
  and body_of_t_3f7d65cb4e = _mk_body_of_t_3f7d65cb4e 0
  and body_to_t_3f7d65cb4e = _mk_body_to_t_3f7d65cb4e 0
  and body_of_t_0f4b675519 = _mk_body_of_t_0f4b675519 0
  and body_to_t_0f4b675519 = _mk_body_to_t_0f4b675519 0
  and body_of_t_7551937833 = _mk_body_of_t_7551937833 0
  and body_to_t_7551937833 = _mk_body_to_t_7551937833 0
  and body_of_t_b61c36c8b7 = _mk_body_of_t_b61c36c8b7 0
  and body_to_t_b61c36c8b7 = _mk_body_to_t_b61c36c8b7 0
  and body_of_t_d85b111edd = _mk_body_of_t_d85b111edd 0
  and body_to_t_d85b111edd = _mk_body_to_t_d85b111edd 0
  and body_of_t_814a9b52c9 = _mk_body_of_t_814a9b52c9 0
  and body_to_t_814a9b52c9 = _mk_body_to_t_814a9b52c9 0
  and body_of_t_e7b5357404 = _mk_body_of_t_e7b5357404 0
  and body_to_t_e7b5357404 = _mk_body_to_t_e7b5357404 0
  and body_of_t_3ad6222234 = _mk_body_of_t_3ad6222234 0
  and body_to_t_3ad6222234 = _mk_body_to_t_3ad6222234 0
  and body_of_t_54156d3480 = _mk_body_of_t_54156d3480 0
  and body_to_t_54156d3480 = _mk_body_to_t_54156d3480 0
  and body_of_t_565c6ef2d9 = _mk_body_of_t_565c6ef2d9 0
  and body_to_t_565c6ef2d9 = _mk_body_to_t_565c6ef2d9 0
  and body_of_t_b12f762f7a = _mk_body_of_t_b12f762f7a 0
  and body_to_t_b12f762f7a = _mk_body_to_t_b12f762f7a 0
  and body_of_t_ee27bd615e = _mk_body_of_t_ee27bd615e 0
  and body_to_t_ee27bd615e = _mk_body_to_t_ee27bd615e 0
  and body_of_t_c1edcd7596 = _mk_body_of_t_c1edcd7596 0
  and body_to_t_c1edcd7596 = _mk_body_to_t_c1edcd7596 0
  and body_of_t_ebc7fa3111 = _mk_body_of_t_ebc7fa3111 0
  and body_to_t_ebc7fa3111 = _mk_body_to_t_ebc7fa3111 0
  and body_of_t_2fbc0cc586 = _mk_body_of_t_2fbc0cc586 0
  and body_to_t_2fbc0cc586 = _mk_body_to_t_2fbc0cc586 0
  and body_of_t_c9afc8c3c7 = _mk_body_of_t_c9afc8c3c7 0
  and body_to_t_c9afc8c3c7 = _mk_body_to_t_c9afc8c3c7 0
  and body_of_t_2c11f5c04d = _mk_body_of_t_2c11f5c04d 0
  and body_to_t_2c11f5c04d = _mk_body_to_t_2c11f5c04d 0
  and body_of_t_52f26f98a0 = _mk_body_of_t_52f26f98a0 0
  and body_to_t_52f26f98a0 = _mk_body_to_t_52f26f98a0 0
  and body_of_t_d4524fbbca = _mk_body_of_t_d4524fbbca 0
  and body_to_t_d4524fbbca = _mk_body_to_t_d4524fbbca 0
  and body_of_t_54a7a3b78b = _mk_body_of_t_54a7a3b78b 0
  and body_to_t_54a7a3b78b = _mk_body_to_t_54a7a3b78b 0
  and body_of_t_8018435bce = _mk_body_of_t_8018435bce 0
  and body_to_t_8018435bce = _mk_body_to_t_8018435bce 0
  and body_of_t_5f128bf227 = _mk_body_of_t_5f128bf227 0
  and body_to_t_5f128bf227 = _mk_body_to_t_5f128bf227 0
  and body_of_t_bf072f4eca = _mk_body_of_t_bf072f4eca 0
  and body_to_t_bf072f4eca = _mk_body_to_t_bf072f4eca 0
  and body_of_t_964deea341 = _mk_body_of_t_964deea341 0
  and body_to_t_964deea341 = _mk_body_to_t_964deea341 0
  and body_of_t_bc456e2dec = _mk_body_of_t_bc456e2dec 0
  and body_to_t_bc456e2dec = _mk_body_to_t_bc456e2dec 0
  and body_of_t_995faed4ba = _mk_body_of_t_995faed4ba 0
  and body_to_t_995faed4ba = _mk_body_to_t_995faed4ba 0
  and body_of_t_816a7290b6 = _mk_body_of_t_816a7290b6 0
  and body_to_t_816a7290b6 = _mk_body_to_t_816a7290b6 0
  and body_of_t_99c4cd28e2 = _mk_body_of_t_99c4cd28e2 0
  and body_to_t_99c4cd28e2 = _mk_body_to_t_99c4cd28e2 0
  and body_of_t_5105b308ac = _mk_body_of_t_5105b308ac 0
  and body_to_t_5105b308ac = _mk_body_to_t_5105b308ac 0
  and body_of_t_0e3e3a503e = _mk_body_of_t_0e3e3a503e 0
  and body_to_t_0e3e3a503e = _mk_body_to_t_0e3e3a503e 0
  and body_of_t_b30867f24c = _mk_body_of_t_b30867f24c 0
  and body_to_t_b30867f24c = _mk_body_to_t_b30867f24c 0
  and body_of_t_00b417a660 = _mk_body_of_t_00b417a660 0
  and body_to_t_00b417a660 = _mk_body_to_t_00b417a660 0
  and body_of_t_a78c740cbb = _mk_body_of_t_a78c740cbb 0
  and body_to_t_a78c740cbb = _mk_body_to_t_a78c740cbb 0
  and body_of_t_e5cadca279 = _mk_body_of_t_e5cadca279 0
  and body_to_t_e5cadca279 = _mk_body_to_t_e5cadca279 0
  and body_of_t_67de26f40f = _mk_body_of_t_67de26f40f 0
  and body_to_t_67de26f40f = _mk_body_to_t_67de26f40f 0
  and body_of_t_b7800a5208 = _mk_body_of_t_b7800a5208 0
  and body_to_t_b7800a5208 = _mk_body_to_t_b7800a5208 0
  and body_of_t_caa1beef8b = _mk_body_of_t_caa1beef8b 0
  and body_to_t_caa1beef8b = _mk_body_to_t_caa1beef8b 0
  and body_of_t_e7d7b8539a = _mk_body_of_t_e7d7b8539a 0
  and body_to_t_e7d7b8539a = _mk_body_to_t_e7d7b8539a 0
  and body_of_t_f7e4bf7173 = _mk_body_of_t_f7e4bf7173 0
  and body_to_t_f7e4bf7173 = _mk_body_to_t_f7e4bf7173 0
  and body_of_t_c4ce31ae53 = _mk_body_of_t_c4ce31ae53 0
  and body_to_t_c4ce31ae53 = _mk_body_to_t_c4ce31ae53 0
  and body_of_t_2c6b2540ea = _mk_body_of_t_2c6b2540ea 0
  and body_to_t_2c6b2540ea = _mk_body_to_t_2c6b2540ea 0
  and body_of_t_e3a7c57d4a = _mk_body_of_t_e3a7c57d4a 0
  and body_to_t_e3a7c57d4a = _mk_body_to_t_e3a7c57d4a 0
  and body_of_t_44a0d32017 = _mk_body_of_t_44a0d32017 0
  and body_to_t_44a0d32017 = _mk_body_to_t_44a0d32017 0
  and body_of_t_462f995cf7 = _mk_body_of_t_462f995cf7 0
  and body_to_t_462f995cf7 = _mk_body_to_t_462f995cf7 0
  and body_of_t_df07df1e31 = _mk_body_of_t_df07df1e31 0
  and body_to_t_df07df1e31 = _mk_body_to_t_df07df1e31 0
  and body_of_t_38d38d0ed4 = _mk_body_of_t_38d38d0ed4 0
  and body_to_t_38d38d0ed4 = _mk_body_to_t_38d38d0ed4 0
  and body_of_t_4b36d2503f = _mk_body_of_t_4b36d2503f 0
  and body_to_t_4b36d2503f = _mk_body_to_t_4b36d2503f 0
  and body_of_t_6a29a128b6 = _mk_body_of_t_6a29a128b6 0
  and body_to_t_6a29a128b6 = _mk_body_to_t_6a29a128b6 0
  and body_of_t_8045f191c5 = _mk_body_of_t_8045f191c5 0
  and body_to_t_8045f191c5 = _mk_body_to_t_8045f191c5 0
  and body_of_t_6cc9a417e8 = _mk_body_of_t_6cc9a417e8 0
  and body_to_t_6cc9a417e8 = _mk_body_to_t_6cc9a417e8 0
  and body_of_t_145080d61a = _mk_body_of_t_145080d61a 0
  and body_to_t_145080d61a = _mk_body_to_t_145080d61a 0
  and body_of_t_c61693ce20 = _mk_body_of_t_c61693ce20 0
  and body_to_t_c61693ce20 = _mk_body_to_t_c61693ce20 0
  and body_of_t_bb9f43b8e8 = _mk_body_of_t_bb9f43b8e8 0
  and body_to_t_bb9f43b8e8 = _mk_body_to_t_bb9f43b8e8 0
  and body_of_t_13bfb93f22 = _mk_body_of_t_13bfb93f22 0
  and body_to_t_13bfb93f22 = _mk_body_to_t_13bfb93f22 0
  and body_of_t_0649e1659d = _mk_body_of_t_0649e1659d 0
  and body_to_t_0649e1659d = _mk_body_to_t_0649e1659d 0
  and body_of_t_13a556529f = _mk_body_of_t_13a556529f 0
  and body_to_t_13a556529f = _mk_body_to_t_13a556529f 0
  and body_of_t_6395fa1e87 = _mk_body_of_t_6395fa1e87 0
  and body_to_t_6395fa1e87 = _mk_body_to_t_6395fa1e87 0
  and body_of_t_718889bcd7 = _mk_body_of_t_718889bcd7 0
  and body_to_t_718889bcd7 = _mk_body_to_t_718889bcd7 0
  and body_of_t_4f642e7623 = _mk_body_of_t_4f642e7623 0
  and body_to_t_4f642e7623 = _mk_body_to_t_4f642e7623 0
  and body_of_t_906bfeffcd = _mk_body_of_t_906bfeffcd 0
  and body_to_t_906bfeffcd = _mk_body_to_t_906bfeffcd 0
  and body_of_t_42e0ededca = _mk_body_of_t_42e0ededca 0
  and body_to_t_42e0ededca = _mk_body_to_t_42e0ededca 0
  and body_of_t_d3efdb60c5 = _mk_body_of_t_d3efdb60c5 0
  and body_to_t_d3efdb60c5 = _mk_body_to_t_d3efdb60c5 0
  and body_of_t_45afaed75a = _mk_body_of_t_45afaed75a 0
  and body_to_t_45afaed75a = _mk_body_to_t_45afaed75a 0
end